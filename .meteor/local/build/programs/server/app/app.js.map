{"version":3,"sources":["meteor://ðŸ’»app/imports/api/_problem.js","meteor://ðŸ’»app/imports/api/_student.js","meteor://ðŸ’»app/imports/api/_submission.js","meteor://ðŸ’»app/imports/api/problem.js","meteor://ðŸ’»app/imports/api/student.js","meteor://ðŸ’»app/imports/api/submission.js","meteor://ðŸ’»app/imports/api/utility.js","meteor://ðŸ’»app/server/main.js"],"names":["ProblemTests","module","watch","require","v","ps","default","fs","Meteor","methods","id","problemTest","findOne","_id","dirpath","dataPath","wrapAsync","mkdir","call","input","output","field","content","filepath","writeFile","exec","Accounts","onCreateUser","option","user","_","extend","pick","Submissions","SubmissionResults","update","$set","status","score","submission","lang","execpath","code","e","filter","problemId","isExam","isPublic","find","forEach","result","submissionId","submissionResult","Number","getValue","problemTestId","fields","timeLimit","memoryLimit","inpath","anspath","outpath","respath","execcmd","rootPath","stdio","JSON","parse","readFile","timeUsed","memoryUsed","submissionResultId","insert","remove","export","Problems","Mongo","Collection","isServer","publish","title","isAdmin","description","inputFormat","outputFormat","hint","problem","Students","Random","users","username","fullname","emails","year","createUser","password","email","Date","getFullYear","student","studentId","setUsername","setPassword","addEmail","isEmpty","oldPassword","newPassword","$or","createdAt","isOwner","getTime","collection","doc","path","resolve","split","sep"],"mappings":"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","file":"/app.js","sourcesContent":["import { ProblemTests } from './problem.js';\nimport ps from 'child_process';\nimport fs from 'fs';\n\nMeteor.methods({\n\t'ProblemTests.createDir'(id) {\n\t\tconst problemTest = ProblemTests.findOne({ _id: id });\n\t\tconst dirpath = Meteor.dataPath+id;\n\n\t\tMeteor.wrapAsync(fs.mkdir)(dirpath);\n\t\tMeteor.call('ProblemTests.writeFile', id, 'input', problemTest.input);\n\t\tMeteor.call('ProblemTests.writeFile', id, 'output', problemTest.output);\n\t},\n\t'ProblemTests.writeFile'(id, field, content) {\n\t\tconst filepath = Meteor.dataPath+id+'/'+field;\n\t\tMeteor.wrapAsync(fs.writeFile)(filepath, content);\n\t},\n\t'ProblemTests.removeDir'(id) {\t\n\t\tconst dirpath = Meteor.dataPath+id;\n\t\tMeteor.wrapAsync(ps.exec)('rm -rf '+dirpath);\n\t}\n});","Accounts.onCreateUser((option, user) => {\n\treturn _.extend(user, _.pick(option, 'fullname', 'year', 'isAdmin'));\n});","import { Submissions, SubmissionResults } from './submission.js';\nimport { ProblemTests } from './problem.js';\nimport ps from 'child_process';\nimport fs from 'fs';\n\nMeteor.methods({\n\t'Submissions.createDir'(id) {\n\t\tSubmissions.update({ _id: id }, { $set: { status: 'Initializing', score: 0 }});\n\t\t\n\t\tconst submission = Submissions.findOne({ _id: id });\n\t\tconst dirpath  = Meteor.dataPath+id;\n\t\tconst filepath = Meteor.dataPath+id+'/code.'+submission.lang;\n\t\tconst execpath = Meteor.dataPath+id+'/exec';\n\t\t\n\t\tMeteor.wrapAsync(ps.exec)('mkdir -p '+dirpath);\n\t\tMeteor.wrapAsync(fs.writeFile)(filepath, submission.code);\n\t\t\n\t\tSubmissions.update({ _id: id }, { $set: { status: 'Compiling' }});\n\n\t\ttry{\n\t\t\tif (submission.lang == 'c') {\n\t\t\t\tMeteor.wrapAsync(ps.exec)('gcc '+filepath+' -o'+execpath+' -O2 -std=c99 -lm');\n\t\t\t}\n\t\t\telse if (submission.lang == 'cpp') {\n\t\t\t\tMeteor.wrapAsync(ps.exec)('g++ '+filepath+' -o'+execpath+' -O2 -std=c++11');\n\t\t\t} else {\n\t\t\t\tSubmissions.update({ _id: id }, { $set: { status: 'Language Error' }});\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch(e) {\n\t\t\tSubmissions.update({ _id: id }, { $set: { status: 'Compile Error' }});\n\t\t\treturn;\n\t\t}\n\t\tSubmissions.update({ _id: id }, { $set: { status: 'Running' }});\n\n\t\tconst filter = { problemId: submission.problemId };\n\t\tif (!submission.isExam) filter.isPublic = true;\n\n\t\tProblemTests.find(filter).forEach((problemTest) => {\n\t\t\tMeteor.call('SubmissionResults.insert', problemTest._id, id);\n\t\t})\n\t\tMeteor.call('Submissions.getResult', id);\n\t},\n\t'Submissions.removeDir'(id) {\n\t\tconst dirpath = Meteor.dataPath+id;\n\t\tMeteor.wrapAsync(ps.exec)('rm -rf '+dirpath);\n\t},\n\t'Submissions.getResult'(id) {\n\t\tconst result = { status: null, score: 0\t};\n\n\t\tSubmissionResults.find({ submissionId: id }).forEach((submissionResult) => {\n\t\t\tif (submissionResult.status == \"Accepted\")\n\t\t\t\tresult.score += Number(Meteor.getValue(ProblemTests, submissionResult.problemTestId, 'score'));\n\t\t\t\n\t\t\tif (submissionResult.status != 'Accepted' || result.status == null)\n\t\t\t\tresult.status = submissionResult.status;\n\t\t});\n\t\tSubmissions.update({ _id: id }, { $set: result });\n\t},\n\t'SubmissionResults.createDir'(id) {\n\t\tSubmissionResults.update({ _id: id }, { $set: { status: 'Initializing' }});\n\n\t\tconst submissionResult = SubmissionResults.findOne({ _id: id });\n\t\tconst problemTest = ProblemTests.findOne({ _id: submissionResult.problemTestId }, { fields: { timeLimit: 1, memoryLimit: 1 }});\n\t\tconst execpath = Meteor.dataPath+submissionResult.submissionId+'/exec';\n\t\tconst inpath  = Meteor.dataPath+submissionResult.problemTestId+'/input';\n\t\tconst anspath = Meteor.dataPath+submissionResult.problemTestId+'/output';\n\t\tconst dirpath = Meteor.dataPath+id;\n\t\tconst outpath = Meteor.dataPath+id+'/output';\n\t\tconst respath = Meteor.dataPath+id+'/result';\n\t\tconst execcmd = Meteor.rootPath+'sandbox/runner '+problemTest.timeLimit+' '+problemTest.memoryLimit+' '+execpath+' < '+inpath+' > '+outpath+' 2>'+respath;\n\n\t\tMeteor.wrapAsync(ps.exec)('mkdir -p '+dirpath);\n\n\t\tSubmissionResults.update({ _id: id }, { $set: { status: 'Running' }});\n\n\t\tMeteor.wrapAsync(ps.exec)(execcmd, { stdio: 'inherit' });\n\n\t\tSubmissionResults.update({ _id: id }, { $set: { status: 'Judging' }});\n\n\t\tlet result = null;\n\t\ttry {\n\t\t\tresult = JSON.parse(Meteor.wrapAsync(fs.readFile)(respath));\n\t\t} catch(e) {\n\t\t\tresult = { status: 'Runtime Error', timeUsed: 0, memoryUsed: 0 };\n\t\t}\n\t\tif (result.status == 'OK') {\n\t\t\ttry {\n\t\t\t\tMeteor.wrapAsync(ps.exec)('diff -w '+outpath+' '+anspath);\n\t\t\t\tresult.status = 'Accepted';\n\t\t\t} catch(e) {\n\t\t\t\tresult.status = 'Wrong Answer';\n\t\t\t}\n\t\t}\n\t\tSubmissionResults.update({ _id: id }, { $set: result });\n\t},\n\t'SubmissionResults.removeDir'(id) {\n\t\tconst dirpath = Meteor.dataPath+id;\n\t\tMeteor.wrapAsync(ps.exec)('rm -rf '+dirpath);\n\t},\n\t'SubmissionResults.insert'(problemTestId, submissionId) {\n\t\tconst submissionResultId = SubmissionResults.insert({\n\t\t\tproblemTestId: problemTestId,\n\t\t\tsubmissionId: submissionId,\n\t\t\ttimeUsed: null,\n\t\t\tmemoryUsed: null,\n\t\t\tstatus: 'Pending'\n\t\t});\n\t\tMeteor.call('SubmissionResults.createDir', submissionResultId);\n\t},\n\t'SubmissionResults.remove'(filter) {\n\t\tSubmissionResults.find(filter).forEach((submissionResult) => {\n\t\t\tMeteor.call('SubmissionResults.removeDir', submissionResult._id);\n\t\t});\n\t\tSubmissionResults.remove(filter);\n\t}\n});","import { SubmissionResults } from './submission.js';\r\nimport './utility.js';\r\n\r\nexport const Problems = new Mongo.Collection('Problems');\r\nexport const ProblemTests = new Mongo.Collection('ProblemTests');\r\n\r\nif (Meteor.isServer) {\r\n\tMeteor.publish('Problems.findAll', function() {\r\n\t\tconst filter = {};\r\n\t\tconst option = { fields: { _id: 1, title: 1, isExam: 1, isPublic: 1 }};\r\n\r\n\t\tif (!Meteor.isAdmin()) {\r\n\t\t\tfilter.isPublic = true;\r\n\t\t}\r\n\t\treturn Problems.find(filter, option);\r\n\t});\r\n\tMeteor.publish('Problems.findOne', function(id) {\r\n\t\tconst filter = { _id: id };\r\n\t\tconst option = {};\r\n\r\n\t\tif (!Meteor.isAdmin()) {\r\n\t\t\tfilter.isPublic = true;\r\n\t\t}\r\n\t\treturn Problems.find(filter, option);\r\n\t});\r\n\tMeteor.publish('ProblemTests.findAllByProblem', function(problemId) {\r\n\t\tconst filter = { problemId: problemId };\r\n\t\tconst option = { fields: { _id: 1, problemId: 1, isPublic: 1 }};\r\n\r\n\t\tif (!Meteor.isAdmin()) {\r\n\t\t\tif (!Meteor.getValue(Problems, problemId, 'isPublic')) {\r\n\t\t\t\tfilter.problemId = null;\r\n\t\t\t}\r\n\t\t\tfilter.isPublic = true;\r\n\t\t}\r\n\t\treturn ProblemTests.find(filter, option);\r\n\t});\r\n\tMeteor.publish('ProblemTests.findOne', function(id) {\r\n\t\tconst filter = { _id: id };\r\n\t\tconst option = {};\r\n\r\n\t\tif (!Meteor.isAdmin()) {\r\n\t\t\tconst problemId = Meteor.getValue(ProblemTests, id, 'problemId');\r\n\r\n\t\t\tif (!Meteor.getValue(Problems, problemId, 'isPublic')) {\r\n\t\t\t\tfilter._id = null;\r\n\t\t\t}\r\n\t\t\tfilter.isPublic = true;\r\n\t\t}\r\n\t\treturn ProblemTests.find(filter, option);\r\n\t});\r\n}\r\n\r\nMeteor.methods({\r\n\t'Problems.insert'() {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblems.insert({\r\n\t\t\ttitle: 'Sample Title',\r\n\t\t\tdescription: 'Sample Description',\r\n\t\t\tinputFormat: 'Sample Input Format',\r\n\t\t\toutputFormat: 'Sample Output Format',\r\n\t\t\thint: 'Sample Hint',\r\n\t\t\tisExam: false,\r\n\t\t\tisPublic: false\r\n\t\t});\r\n\t},\r\n\t'Problems.remove'(filter) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblems.find(filter).forEach((problem) => {\r\n\t\t\tMeteor.call('ProblemTests.remove', { problemId: problem._id });\r\n\t\t\tMeteor.call('Submissions.remove', { problemId: problem._id });\t\r\n\t\t});\r\n\t\tProblems.remove(filter);\r\n\t},\r\n\t'Problems.update'(id, option) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblems.update({ _id: id }, { $set: option });\r\n\t},\r\n\t'ProblemTests.insert'(problemId) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tconst problemTestId = ProblemTests.insert({\r\n\t\t\tproblemId: problemId,\r\n\t\t\tinput: 'Sample Input',\r\n\t\t\toutput: 'Sample Output',\r\n\t\t\ttimeLimit: 1000,\r\n\t\t\tmemoryLimit: 64000,\r\n\t\t\tscore: 5,\r\n\t\t\tisPublic: false\r\n\t\t});\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tMeteor.call('ProblemTests.createDir', problemTestId);\r\n\t\t}\r\n\t},\r\n\t'ProblemTests.remove'(filter) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblemTests.find(filter).forEach((problemTest) => {\r\n\t\t\tMeteor.call('SubmissionResults.remove', { problemTestId: problemTest._id });\r\n\r\n\t\t\tif (Meteor.isServer) {\r\n\t\t\t\tMeteor.call('ProblemTests.removeDir', problemTest._id);\r\n\t\t\t}\r\n\t\t});\r\n\t\tProblemTests.remove(filter);\r\n\t},\r\n\t'ProblemTests.update'(id, option) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblemTests.update({ _id: id }, { $set: option });\r\n\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tif (option.input) Meteor.call('ProblemTests.writeFile', id, 'input', option.input);\r\n\t\t\tif (option.output) Meteor.call('ProblemTests.writeFile', id, 'output', option.output);\r\n\t\t\tif (option.score) {\r\n\t\t\t\tSubmissionResults.find({ problemTestId: id }).forEach((submissionResult) => {\r\n\t\t\t\t\tMeteor.call('Submissions.getResult', submissionResult.submissionId);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});","import { Random } from 'meteor/random';\nimport './utility.js';\n\nexport const Students = Meteor.users;\n\nif (Meteor.isServer) {\n\tMeteor.publish('Students.findAll', function() {\n\t\tconst filter = {};\n\t\tconst option = { fields: { _id: 1, username: 1, isAdmin: 1 }};\n\n\t\treturn Students.find(filter, option);\n\t});\n\tMeteor.publish('Students.findOne', function(id) {\n\t\tconst filter = { _id: id };\n\t\tconst option = { fields: { _id: 1, username: 1, fullname: 1, emails: 1, year: 1, isAdmin: 1 }};\n\n\t\treturn Students.find(filter, option);\n\t});\n}\n\nMeteor.methods({\n\t'Students.insert'() {\n\t\tif (!Meteor.isAdmin()) return;\n\n\t\tAccounts.createUser({\n\t\t\tusername: 'Sample Username',\n\t\t\tfullname: 'Sample Fullname',\n\t\t\tpassword: Random.id(),\n\t\t\temail: 'dsca@inrg.csie.ntu.edu.tw',\t\n\t\t\tyear: new Date().getFullYear(),\n\t\t\tisAdmin: false\n\t\t});\n\t},\n\t'Students.remove'(filter) {\n\t\tif (!Meteor.isAdmin()) return;\n\n\t\tStudents.find(filter).forEach((student) => {\n\t\t\tMeteor.call('Submissions.remove', { studentId: student._id });\n\t\t});\n\t\tStudents.remove(filter);\n\t},\n\t'Students.update'(id, option) {\n\t\tif (!Meteor.isAdmin() || !Meteor.isServer) return;\n\n\t\tif (option.username) {\n\t\t\tAccounts.setUsername(id, option.username);\n\t\t\tdelete option.username;\n\t\t}\n\t\tif (option.password) {\n\t\t\tAccounts.setPassword(id, option.password);\n\t\t\tdelete option.password;\n\t\t}\n\t\tif (option.email) {\n\t\t\tStudents.update({ _id: id }, { $set: { emails: [] }});\n\t\t\tAccounts.addEmail(id, option.email);\n\t\t\tdelete option.email;\n\t\t}\n\t\tif (!_.isEmpty(option)) {\n\t\t\tStudents.update({ _id: id }, { $set: option });\n\t\t}\n\t},\n\t'Students.changePassword'(oldPassword, newPassword) {\n\t\tif (!Meteor.isServer) return;\n\n\t\tMeteor.call('changePassword', oldPassword, newPassword);\n\t}\n});","import { Problems, ProblemTests } from './problem.js';\r\nimport './utility.js';\r\n\r\nexport const Submissions = new Mongo.Collection('Submissions');\r\nexport const SubmissionResults = new Mongo.Collection('SubmissionResults');\r\n\r\nif (Meteor.isServer) {\r\n\tMeteor.publish('Submissions.findAllByFilter', function(problemId, studentId) {\r\n\t\tconst filter = { $or: [{ problemId: problemId }, { studentId, studentId }]};\r\n\t\tconst option = { fields: { _id: 1, problemId: 1, studentId: 1, createdAt: 1, status: 1, score: 1, isExam: 1 }};\r\n\r\n\t\treturn Submissions.find(filter, option);\r\n\t});\r\n\tMeteor.publish('Submissions.findOne', function(id) {\r\n\t\tconst filter = { _id: id };\r\n\t\tconst option = {};\r\n\r\n\t\tif (!Meteor.isAdmin() && !Meteor.isOwner(Meteor.getValue(Submissions, id, 'studentId'))) {\r\n\t\t\toption.fields = { code: 0 };\r\n\t\t}\r\n\t\treturn Submissions.find(filter, option);\r\n\t});\r\n\tMeteor.publish('SubmissionResults.findAllBySubmission', function(submissionId) {\r\n\t\tconst filter = { submissionId: submissionId };\r\n\t\tconst option = {};\r\n\r\n\t\treturn SubmissionResults.find(filter, option);\r\n\t});\r\n}\r\n\r\nMeteor.methods({\r\n\t'Submissions.insert'(problemId, studentId, lang, code) {\r\n\t\tif (!Meteor.isAdmin() && (!Meteor.isOwner(studentId) || !Meteor.getValue(Problems, problemId, 'isPublic'))) return;\r\n\t\t\r\n\t\tconst submissionId = Submissions.insert({\r\n\t\t\tproblemId: problemId,\r\n\t\t\tstudentId: studentId,\r\n\t\t\tcreatedAt: new Date().getTime(),\r\n\t\t\tstatus: 'Pending',\r\n\t\t\tscore: 0,\r\n\t\t\tlang: lang,\r\n\t\t\tcode: code,\r\n\t\t\tisExam: Meteor.getValue(Problems, problemId, 'isExam')\r\n\t\t});\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tMeteor.call('Submissions.createDir', submissionId);\r\n\t\t}\r\n\t},\r\n\t'Submissions.remove'(filter) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tSubmissions.find(filter).forEach((submission) => {\r\n\t\t\t\tMeteor.call('SubmissionResults.remove', { submissionId: submission._id });\r\n\t\t\t\tMeteor.call('Submissions.removeDir', submission._id);\r\n\t\t\t});\r\n\t\t}\r\n\t\tSubmissions.remove(filter);\r\n\t},\r\n\t'Submissions.update'(id, option) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tSubmissions.update({ _id: id }, { $set: option });\r\n\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tMeteor.call('SubmissionResults.remove', { submissionId: id });\r\n\t\t\tMeteor.call('Submissions.createDir', id);\r\n\t\t}\r\n\t}\r\n});","Meteor.getValue = function(collection, id, field) {\n\tconst doc = collection.findOne({ _id: id }, { fields: { [field]: 1 }});\n\treturn doc ? doc[field] : null;\n}\n\nMeteor.isAdmin = function() {\n\tconst user = Meteor.user();\n\treturn user && user.isAdmin;\n}\n\nMeteor.isOwner = function(id) {\n\tconst user = Meteor.user();\n\treturn user && user._id == id;\n}","import '/imports/api/_problem.js';\nimport '/imports/api/_student.js';\nimport '/imports/api/_submission.js';\nimport '/imports/api/problem.js';\nimport '/imports/api/student.js';\nimport '/imports/api/submission.js';\nimport path from 'path';\n\nMeteor.rootPath = path.resolve('.').split(path.sep + '.meteor')[0]+'/';\nMeteor.dataPath = Meteor.rootPath+'../DSCA_Data/';\n\n/*Accounts.createUser({\n\tusername: 'R04922075',\n\tfullname: 'kcku',\n\tpassword: '123456',\n\temail: 'r04922075@csie.ntu.edu.tw',\n\tyear: 2016,\n\tisAdmin: true\n});#include <cstdio>\nint main() {\n    char line[100];\n    scanf(\"%s\", line);\n    printf(\"%s\", line);\n}\n#include <cstdio>\nint main() {\n    char line[100];\n    gets(line);\n    puts(line);\n}*/\n/*import fs from 'fs';\nconst file = Meteor.wrapAsync(fs.readFile)(Meteor.rootPath+'../studentlist', 'utf-8');\nconst json = file.split('\\n');\nfor (let i = 0; i < json.length-1; i++) {\n\tconst value = JSON.parse(json[i].trim());\n\tconst student = {\n\t\tusername: value.user,\n\t\tfullname: value.name,\n\t\tpassword: value.pass,\n\t\tisAdmin: value.admin,\n\t\temail: value.user+'@ntu.edu.tw',\n\t\tyear: value.year\n\t};\n\t//console.log(student);\n\tAccounts.createUser(student);\n}*/"]}