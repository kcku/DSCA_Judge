[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/alexwine_bootstrap-4/dist/js/popper.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*                                                                                                                     // 1\n Copyright (C) Federico Zivolo 2017                                                                                    // 2\n Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).                          // 3\n */(function(e,t){'object'==typeof exports&&'undefined'!=typeof module?module.exports=t():'function'==typeof define&&define.amd?define(t):e.Popper=t()})(this,function(){'use strict';function e(e){return e&&'[object Function]'==={}.toString.call(e)}function t(e,t){if(1!==e.nodeType)return[];var o=window.getComputedStyle(e,null);return t?o[t]:o}function o(e){return'HTML'===e.nodeName?e:e.parentNode||e.host}function n(e){if(!e||-1!==['HTML','BODY','#document'].indexOf(e.nodeName))return window.document.body;var i=t(e),r=i.overflow,p=i.overflowX,s=i.overflowY;return /(auto|scroll)/.test(r+s+p)?e:n(o(e))}function r(e){var o=e&&e.offsetParent,i=o&&o.nodeName;return i&&'BODY'!==i&&'HTML'!==i?-1!==['TD','TABLE'].indexOf(o.nodeName)&&'static'===t(o,'position')?r(o):o:window.document.documentElement}function p(e){var t=e.nodeName;return'BODY'!==t&&('HTML'===t||r(e.firstElementChild)===e)}function s(e){return null===e.parentNode?e:s(e.parentNode)}function d(e,t){if(!e||!e.nodeType||!t||!t.nodeType)return window.document.documentElement;var o=e.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_FOLLOWING,i=o?e:t,n=o?t:e,a=document.createRange();a.setStart(i,0),a.setEnd(n,0);var f=a.commonAncestorContainer;if(e!==f&&t!==f||i.contains(n))return p(f)?f:r(f);var l=s(e);return l.host?d(l.host,t):d(e,s(t).host)}function a(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:'top',o='top'===t?'scrollTop':'scrollLeft',i=e.nodeName;if('BODY'===i||'HTML'===i){var n=window.document.documentElement,r=window.document.scrollingElement||n;return r[o]}return e[o]}function f(e,t){var o=2<arguments.length&&void 0!==arguments[2]&&arguments[2],i=a(t,'top'),n=a(t,'left'),r=o?-1:1;return e.top+=i*r,e.bottom+=i*r,e.left+=n*r,e.right+=n*r,e}function l(e,t){var o='x'===t?'Left':'Top',i='Left'==o?'Right':'Bottom';return+e['border'+o+'Width'].split('px')[0]+ +e['border'+i+'Width'].split('px')[0]}function m(e,t,o,i){return _(t['offset'+e],o['client'+e],o['offset'+e],ie()?o['offset'+e]+i['margin'+('Height'===e?'Top':'Left')]+i['margin'+('Height'===e?'Bottom':'Right')]:0)}function h(){var e=window.document.body,t=window.document.documentElement,o=ie()&&window.getComputedStyle(t);return{height:m('Height',e,t,o),width:m('Width',e,t,o)}}function c(e){return se({},e,{right:e.left+e.width,bottom:e.top+e.height})}function g(e){var o={};if(ie())try{o=e.getBoundingClientRect();var i=a(e,'top'),n=a(e,'left');o.top+=i,o.left+=n,o.bottom+=i,o.right+=n}catch(e){}else o=e.getBoundingClientRect();var r={left:o.left,top:o.top,width:o.right-o.left,height:o.bottom-o.top},p='HTML'===e.nodeName?h():{},s=p.width||e.clientWidth||r.right-r.left,d=p.height||e.clientHeight||r.bottom-r.top,f=e.offsetWidth-s,m=e.offsetHeight-d;if(f||m){var g=t(e);f-=l(g,'x'),m-=l(g,'y'),r.width-=f,r.height-=m}return c(r)}function u(e,o){var i=ie(),r='HTML'===o.nodeName,p=g(e),s=g(o),d=n(e),a=t(o),l=+a.borderTopWidth.split('px')[0],m=+a.borderLeftWidth.split('px')[0],h=c({top:p.top-s.top-l,left:p.left-s.left-m,width:p.width,height:p.height});if(h.marginTop=0,h.marginLeft=0,!i&&r){var u=+a.marginTop.split('px')[0],b=+a.marginLeft.split('px')[0];h.top-=l-u,h.bottom-=l-u,h.left-=m-b,h.right-=m-b,h.marginTop=u,h.marginLeft=b}return(i?o.contains(d):o===d&&'BODY'!==d.nodeName)&&(h=f(h,o)),h}function b(e){var t=window.document.documentElement,o=u(e,t),i=_(t.clientWidth,window.innerWidth||0),n=_(t.clientHeight,window.innerHeight||0),r=a(t),p=a(t,'left'),s={top:r-o.top+o.marginTop,left:p-o.left+o.marginLeft,width:i,height:n};return c(s)}function y(e){var i=e.nodeName;return'BODY'===i||'HTML'===i?!1:'fixed'===t(e,'position')||y(o(e))}function w(e,t,i,r){var p={top:0,left:0},s=d(e,t);if('viewport'===r)p=b(s);else{var a;'scrollParent'===r?(a=n(o(e)),'BODY'===a.nodeName&&(a=window.document.documentElement)):'window'===r?a=window.document.documentElement:a=r;var f=u(a,s);if('HTML'===a.nodeName&&!y(s)){var l=h(),m=l.height,c=l.width;p.top+=f.top-f.marginTop,p.bottom=m+f.top,p.left+=f.left-f.marginLeft,p.right=c+f.left}else p=f}return p.left+=i,p.top+=i,p.right-=i,p.bottom-=i,p}function v(e){var t=e.width,o=e.height;return t*o}function E(e,t,o,i,n){var r=5<arguments.length&&void 0!==arguments[5]?arguments[5]:0;if(-1===e.indexOf('auto'))return e;var p=w(o,i,r,n),s={top:{width:p.width,height:t.top-p.top},right:{width:p.right-t.right,height:p.height},bottom:{width:p.width,height:p.bottom-t.bottom},left:{width:t.left-p.left,height:p.height}},d=Object.keys(s).map(function(e){return se({key:e},s[e],{area:v(s[e])})}).sort(function(e,t){return t.area-e.area}),a=d.filter(function(e){var t=e.width,i=e.height;return t>=o.clientWidth&&i>=o.clientHeight}),f=0<a.length?a[0].key:d[0].key,l=e.split('-')[1];return f+(l?'-'+l:'')}function x(e,t,o){var i=d(t,o);return u(o,i)}function O(e){var t=window.getComputedStyle(e),o=parseFloat(t.marginTop)+parseFloat(t.marginBottom),i=parseFloat(t.marginLeft)+parseFloat(t.marginRight),n={width:e.offsetWidth+i,height:e.offsetHeight+o};return n}function L(e){var t={left:'right',right:'left',bottom:'top',top:'bottom'};return e.replace(/left|right|bottom|top/g,function(e){return t[e]})}function S(e,t,o){o=o.split('-')[0];var i=O(e),n={width:i.width,height:i.height},r=-1!==['right','left'].indexOf(o),p=r?'top':'left',s=r?'left':'top',d=r?'height':'width',a=r?'width':'height';return n[p]=t[p]+t[d]/2-i[d]/2,n[s]=o===s?t[s]-i[a]:t[L(s)],n}function T(e,t){return Array.prototype.find?e.find(t):e.filter(t)[0]}function C(e,t,o){if(Array.prototype.findIndex)return e.findIndex(function(e){return e[t]===o});var i=T(e,function(e){return e[t]===o});return e.indexOf(i)}function N(t,o,i){var n=void 0===i?t:t.slice(0,C(t,'name',i));return n.forEach(function(t){t.function&&console.warn('`modifier.function` is deprecated, use `modifier.fn`!');var i=t.function||t.fn;t.enabled&&e(i)&&(o.offsets.popper=c(o.offsets.popper),o.offsets.reference=c(o.offsets.reference),o=i(o,t))}),o}function k(){if(!this.state.isDestroyed){var e={instance:this,styles:{},attributes:{},flipped:!1,offsets:{}};e.offsets.reference=x(this.state,this.popper,this.reference),e.placement=E(this.options.placement,e.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),e.originalPlacement=e.placement,e.offsets.popper=S(this.popper,e.offsets.reference,e.placement),e.offsets.popper.position='absolute',e=N(this.modifiers,e),this.state.isCreated?this.options.onUpdate(e):(this.state.isCreated=!0,this.options.onCreate(e))}}function W(e,t){return e.some(function(e){var o=e.name,i=e.enabled;return i&&o===t})}function B(e){for(var t=[!1,'ms','Webkit','Moz','O'],o=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<t.length-1;n++){var i=t[n],r=i?''+i+o:e;if('undefined'!=typeof window.document.body.style[r])return r}return null}function D(){return this.state.isDestroyed=!0,W(this.modifiers,'applyStyle')&&(this.popper.removeAttribute('x-placement'),this.popper.style.left='',this.popper.style.position='',this.popper.style.top='',this.popper.style[B('transform')]=''),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}function H(e,t,o,i){var r='BODY'===e.nodeName,p=r?window:e;p.addEventListener(t,o,{passive:!0}),r||H(n(p.parentNode),t,o,i),i.push(p)}function P(e,t,o,i){o.updateBound=i,window.addEventListener('resize',o.updateBound,{passive:!0});var r=n(e);return H(r,'scroll',o.updateBound,o.scrollParents),o.scrollElement=r,o.eventsEnabled=!0,o}function A(){this.state.eventsEnabled||(this.state=P(this.reference,this.options,this.state,this.scheduleUpdate))}function M(e,t){return window.removeEventListener('resize',t.updateBound),t.scrollParents.forEach(function(e){e.removeEventListener('scroll',t.updateBound)}),t.updateBound=null,t.scrollParents=[],t.scrollElement=null,t.eventsEnabled=!1,t}function I(){this.state.eventsEnabled&&(window.cancelAnimationFrame(this.scheduleUpdate),this.state=M(this.reference,this.state))}function R(e){return''!==e&&!isNaN(parseFloat(e))&&isFinite(e)}function U(e,t){Object.keys(t).forEach(function(o){var i='';-1!==['width','height','top','right','bottom','left'].indexOf(o)&&R(t[o])&&(i='px'),e.style[o]=t[o]+i})}function Y(e,t){Object.keys(t).forEach(function(o){var i=t[o];!1===i?e.removeAttribute(o):e.setAttribute(o,t[o])})}function F(e,t,o){var i=T(e,function(e){var o=e.name;return o===t}),n=!!i&&e.some(function(e){return e.name===o&&e.enabled&&e.order<i.order});if(!n){var r='`'+t+'`';console.warn('`'+o+'`'+' modifier is required by '+r+' modifier in order to work, be sure to include it before '+r+'!')}return n}function j(e){return'end'===e?'start':'start'===e?'end':e}function K(e){var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1],o=ae.indexOf(e),i=ae.slice(o+1).concat(ae.slice(0,o));return t?i.reverse():i}function q(e,t,o,i){var n=e.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/),r=+n[1],p=n[2];if(!r)return e;if(0===p.indexOf('%')){var s;switch(p){case'%p':s=o;break;case'%':case'%r':default:s=i;}var d=c(s);return d[t]/100*r}if('vh'===p||'vw'===p){var a;return a='vh'===p?_(document.documentElement.clientHeight,window.innerHeight||0):_(document.documentElement.clientWidth,window.innerWidth||0),a/100*r}return r}function G(e,t,o,i){var n=[0,0],r=-1!==['right','left'].indexOf(i),p=e.split(/(\\+|\\-)/).map(function(e){return e.trim()}),s=p.indexOf(T(p,function(e){return-1!==e.search(/,|\\s/)}));p[s]&&-1===p[s].indexOf(',')&&console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');var d=/\\s*,\\s*|\\s+/,a=-1===s?[p]:[p.slice(0,s).concat([p[s].split(d)[0]]),[p[s].split(d)[1]].concat(p.slice(s+1))];return a=a.map(function(e,i){var n=(1===i?!r:r)?'height':'width',p=!1;return e.reduce(function(e,t){return''===e[e.length-1]&&-1!==['+','-'].indexOf(t)?(e[e.length-1]=t,p=!0,e):p?(e[e.length-1]+=t,p=!1,e):e.concat(t)},[]).map(function(e){return q(e,n,t,o)})}),a.forEach(function(e,t){e.forEach(function(o,i){R(o)&&(n[t]+=o*('-'===e[i-1]?-1:1))})}),n}for(var z=Math.min,V=Math.floor,_=Math.max,X=['native code','[object MutationObserverConstructor]'],Q=function(e){return X.some(function(t){return-1<(e||'').toString().indexOf(t)})},J='undefined'!=typeof window,Z=['Edge','Trident','Firefox'],$=0,ee=0;ee<Z.length;ee+=1)if(J&&0<=navigator.userAgent.indexOf(Z[ee])){$=1;break}var i,te=J&&Q(window.MutationObserver),oe=te?function(e){var t=!1,o=0,i=document.createElement('span'),n=new MutationObserver(function(){e(),t=!1});return n.observe(i,{attributes:!0}),function(){t||(t=!0,i.setAttribute('x-index',o),++o)}}:function(e){var t=!1;return function(){t||(t=!0,setTimeout(function(){t=!1,e()},$))}},ie=function(){return void 0==i&&(i=-1!==navigator.appVersion.indexOf('MSIE 10')),i},ne=function(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')},re=function(){function e(e,t){for(var o,n=0;n<t.length;n++)o=t[n],o.enumerable=o.enumerable||!1,o.configurable=!0,'value'in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}return function(t,o,i){return o&&e(t.prototype,o),i&&e(t,i),t}}(),pe=function(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e},se=Object.assign||function(e){for(var t,o=1;o<arguments.length;o++)for(var i in t=arguments[o],t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},de=['auto-start','auto','auto-end','top-start','top','top-end','right-start','right','right-end','bottom-end','bottom','bottom-start','left-end','left','left-start'],ae=de.slice(3),fe={FLIP:'flip',CLOCKWISE:'clockwise',COUNTERCLOCKWISE:'counterclockwise'},le=function(){function t(o,i){var n=this,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};ne(this,t),this.scheduleUpdate=function(){return requestAnimationFrame(n.update)},this.update=oe(this.update.bind(this)),this.options=se({},t.Defaults,r),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=o.jquery?o[0]:o,this.popper=i.jquery?i[0]:i,this.options.modifiers={},Object.keys(se({},t.Defaults.modifiers,r.modifiers)).forEach(function(e){n.options.modifiers[e]=se({},t.Defaults.modifiers[e]||{},r.modifiers?r.modifiers[e]:{})}),this.modifiers=Object.keys(this.options.modifiers).map(function(e){return se({name:e},n.options.modifiers[e])}).sort(function(e,t){return e.order-t.order}),this.modifiers.forEach(function(t){t.enabled&&e(t.onLoad)&&t.onLoad(n.reference,n.popper,n.options,t,n.state)}),this.update();var p=this.options.eventsEnabled;p&&this.enableEventListeners(),this.state.eventsEnabled=p}return re(t,[{key:'update',value:function(){return k.call(this)}},{key:'destroy',value:function(){return D.call(this)}},{key:'enableEventListeners',value:function(){return A.call(this)}},{key:'disableEventListeners',value:function(){return I.call(this)}}]),t}();return le.Utils=('undefined'==typeof window?global:window).PopperUtils,le.placements=de,le.Defaults={placement:'bottom',eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(e){var t=e.placement,o=t.split('-')[0],i=t.split('-')[1];if(i){var n=e.offsets,r=n.reference,p=n.popper,s=-1!==['bottom','top'].indexOf(o),d=s?'left':'top',a=s?'width':'height',f={start:pe({},d,r[d]),end:pe({},d,r[d]+r[a]-p[a])};e.offsets.popper=se({},p,f[i])}return e}},offset:{order:200,enabled:!0,fn:function(e,t){var o,i=t.offset,n=e.placement,r=e.offsets,p=r.popper,s=r.reference,d=n.split('-')[0];return o=R(+i)?[+i,0]:G(i,p,s,d),'left'===d?(p.top+=o[0],p.left-=o[1]):'right'===d?(p.top+=o[0],p.left+=o[1]):'top'===d?(p.left+=o[0],p.top-=o[1]):'bottom'===d&&(p.left+=o[0],p.top+=o[1]),e.popper=p,e},offset:0},preventOverflow:{order:300,enabled:!0,fn:function(e,t){var o=t.boundariesElement||r(e.instance.popper);e.instance.reference===o&&(o=r(o));var i=w(e.instance.popper,e.instance.reference,t.padding,o);t.boundaries=i;var n=t.priority,p=e.offsets.popper,s={primary:function(e){var o=p[e];return p[e]<i[e]&&!t.escapeWithReference&&(o=_(p[e],i[e])),pe({},e,o)},secondary:function(e){var o='right'===e?'left':'top',n=p[o];return p[e]>i[e]&&!t.escapeWithReference&&(n=z(p[o],i[e]-('right'===e?p.width:p.height))),pe({},o,n)}};return n.forEach(function(e){var t=-1===['left','top'].indexOf(e)?'secondary':'primary';p=se({},p,s[t](e))}),e.offsets.popper=p,e},priority:['left','right','top','bottom'],padding:5,boundariesElement:'scrollParent'},keepTogether:{order:400,enabled:!0,fn:function(e){var t=e.offsets,o=t.popper,i=t.reference,n=e.placement.split('-')[0],r=V,p=-1!==['top','bottom'].indexOf(n),s=p?'right':'bottom',d=p?'left':'top',a=p?'width':'height';return o[s]<r(i[d])&&(e.offsets.popper[d]=r(i[d])-o[a]),o[d]>r(i[s])&&(e.offsets.popper[d]=r(i[s])),e}},arrow:{order:500,enabled:!0,fn:function(e,t){if(!F(e.instance.modifiers,'arrow','keepTogether'))return e;var o=t.element;if('string'==typeof o){if(o=e.instance.popper.querySelector(o),!o)return e;}else if(!e.instance.popper.contains(o))return console.warn('WARNING: `arrow.element` must be child of its popper element!'),e;var i=e.placement.split('-')[0],n=e.offsets,r=n.popper,p=n.reference,s=-1!==['left','right'].indexOf(i),d=s?'height':'width',a=s?'top':'left',f=s?'left':'top',l=s?'bottom':'right',m=O(o)[d];p[l]-m<r[a]&&(e.offsets.popper[a]-=r[a]-(p[l]-m)),p[a]+m>r[l]&&(e.offsets.popper[a]+=p[a]+m-r[l]);var h=p[a]+p[d]/2-m/2,g=h-c(e.offsets.popper)[a];return g=_(z(r[d]-m,g),0),e.arrowElement=o,e.offsets.arrow={},e.offsets.arrow[a]=Math.round(g),e.offsets.arrow[f]='',e},element:'[x-arrow]'},flip:{order:600,enabled:!0,fn:function(e,t){if(W(e.instance.modifiers,'inner'))return e;if(e.flipped&&e.placement===e.originalPlacement)return e;var o=w(e.instance.popper,e.instance.reference,t.padding,t.boundariesElement),i=e.placement.split('-')[0],n=L(i),r=e.placement.split('-')[1]||'',p=[];switch(t.behavior){case fe.FLIP:p=[i,n];break;case fe.CLOCKWISE:p=K(i);break;case fe.COUNTERCLOCKWISE:p=K(i,!0);break;default:p=t.behavior;}return p.forEach(function(s,d){if(i!==s||p.length===d+1)return e;i=e.placement.split('-')[0],n=L(i);var a=e.offsets.popper,f=e.offsets.reference,l=V,m='left'===i&&l(a.right)>l(f.left)||'right'===i&&l(a.left)<l(f.right)||'top'===i&&l(a.bottom)>l(f.top)||'bottom'===i&&l(a.top)<l(f.bottom),h=l(a.left)<l(o.left),c=l(a.right)>l(o.right),g=l(a.top)<l(o.top),u=l(a.bottom)>l(o.bottom),b='left'===i&&h||'right'===i&&c||'top'===i&&g||'bottom'===i&&u,y=-1!==['top','bottom'].indexOf(i),w=!!t.flipVariations&&(y&&'start'===r&&h||y&&'end'===r&&c||!y&&'start'===r&&g||!y&&'end'===r&&u);(m||b||w)&&(e.flipped=!0,(m||b)&&(i=p[d+1]),w&&(r=j(r)),e.placement=i+(r?'-'+r:''),e.offsets.popper=se({},e.offsets.popper,S(e.instance.popper,e.offsets.reference,e.placement)),e=N(e.instance.modifiers,e,'flip'))}),e},behavior:'flip',padding:5,boundariesElement:'viewport'},inner:{order:700,enabled:!1,fn:function(e){var t=e.placement,o=t.split('-')[0],i=e.offsets,n=i.popper,r=i.reference,p=-1!==['left','right'].indexOf(o),s=-1===['top','left'].indexOf(o);return n[p?'left':'top']=r[t]-(s?n[p?'width':'height']:0),e.placement=L(t),e.offsets.popper=c(n),e}},hide:{order:800,enabled:!0,fn:function(e){if(!F(e.instance.modifiers,'hide','preventOverflow'))return e;var t=e.offsets.reference,o=T(e.instance.modifiers,function(e){return'preventOverflow'===e.name}).boundaries;if(t.bottom<o.top||t.left>o.right||t.top>o.bottom||t.right<o.left){if(!0===e.hide)return e;e.hide=!0,e.attributes['x-out-of-boundaries']=''}else{if(!1===e.hide)return e;e.hide=!1,e.attributes['x-out-of-boundaries']=!1}return e}},computeStyle:{order:850,enabled:!0,fn:function(e,t){var o=t.x,i=t.y,n=e.offsets.popper,p=T(e.instance.modifiers,function(e){return'applyStyle'===e.name}).gpuAcceleration;void 0!==p&&console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');var s,d,a=void 0===p?t.gpuAcceleration:p,f=r(e.instance.popper),l=g(f),m={position:n.position},h={left:V(n.left),top:V(n.top),bottom:V(n.bottom),right:V(n.right)},c='bottom'===o?'top':'bottom',u='right'===i?'left':'right',b=B('transform');if(d='bottom'==c?-l.height+h.bottom:h.top,s='right'==u?-l.width+h.right:h.left,a&&b)m[b]='translate3d('+s+'px, '+d+'px, 0)',m[c]=0,m[u]=0,m.willChange='transform';else{var y='bottom'==c?-1:1,w='right'==u?-1:1;m[c]=d*y,m[u]=s*w,m.willChange=c+', '+u}var v={\"x-placement\":e.placement};return e.attributes=se({},v,e.attributes),e.styles=se({},m,e.styles),e},gpuAcceleration:!0,x:'bottom',y:'right'},applyStyle:{order:900,enabled:!0,fn:function(e){return U(e.instance.popper,e.styles),Y(e.instance.popper,e.attributes),e.offsets.arrow&&U(e.arrowElement,e.offsets.arrow),e},onLoad:function(e,t,o,i,n){var r=x(n,t,e),p=E(o.placement,r,t,e,o.modifiers.flip.boundariesElement,o.modifiers.flip.padding);return t.setAttribute('x-placement',p),U(t,{position:'absolute'}),o},gpuAcceleration:void 0}}},le});\n//# sourceMappingURL=popper.min.js.map                                                                                 // 5\n                                                                                                                       // 6\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/alexwine_bootstrap-4/dist/js/bootstrap.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*!                                                                                                                    // 1\n  * Bootstrap v4.0.0-beta.2 (https://getbootstrap.com)                                                                 // 2\n  * Copyright 2011-2017 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)                  // 3\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                         // 4\n  */                                                                                                                   // 5\nvar bootstrap = (function (exports,$,Popper) {                                                                         // 6\n'use strict';                                                                                                          // 7\n                                                                                                                       // 8\n$ = $ && $.hasOwnProperty('default') ? $['default'] : $;                                                               // 9\nPopper = Popper && Popper.hasOwnProperty('default') ? Popper['default'] : Popper;                                      // 10\n                                                                                                                       // 11\n/**                                                                                                                    // 12\n * --------------------------------------------------------------------------                                          // 13\n * Bootstrap (v4.0.0-beta.2): util.js                                                                                  // 14\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 15\n * --------------------------------------------------------------------------                                          // 16\n */                                                                                                                    // 17\n                                                                                                                       // 18\nvar Util = function ($$$1) {                                                                                           // 19\n  /**                                                                                                                  // 20\n   * ------------------------------------------------------------------------                                          // 21\n   * Private TransitionEnd Helpers                                                                                     // 22\n   * ------------------------------------------------------------------------                                          // 23\n   */                                                                                                                  // 24\n  var transition = false;                                                                                              // 25\n  var MAX_UID = 1000000;                                                                                               // 26\n  var TransitionEndEvent = {                                                                                           // 27\n    WebkitTransition: 'webkitTransitionEnd',                                                                           // 28\n    transition: 'transitionend' // shoutout AngusCroll (https://goo.gl/pxwQGp)                                         // 29\n                                                                                                                       // 30\n  };                                                                                                                   // 31\n                                                                                                                       // 32\n  function toType(obj) {                                                                                               // 33\n    return {}.toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();                                              // 34\n  }                                                                                                                    // 35\n                                                                                                                       // 36\n  function getSpecialTransitionEndEvent() {                                                                            // 37\n    return {                                                                                                           // 38\n      bindType: transition.end,                                                                                        // 39\n      delegateType: transition.end,                                                                                    // 40\n      handle: function handle(event) {                                                                                 // 41\n        if ($$$1(event.target).is(this)) {                                                                             // 42\n          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params             // 43\n        }                                                                                                              // 44\n                                                                                                                       // 45\n        return undefined; // eslint-disable-line no-undefined                                                          // 46\n      }                                                                                                                // 47\n    };                                                                                                                 // 48\n  }                                                                                                                    // 49\n                                                                                                                       // 50\n  function transitionEndTest() {                                                                                       // 51\n    if (window.QUnit) {                                                                                                // 52\n      return false;                                                                                                    // 53\n    }                                                                                                                  // 54\n                                                                                                                       // 55\n    var el = document.createElement('bootstrap');                                                                      // 56\n                                                                                                                       // 57\n    for (var name in TransitionEndEvent) {                                                                             // 58\n      if (typeof el.style[name] !== 'undefined') {                                                                     // 59\n        return {                                                                                                       // 60\n          end: TransitionEndEvent[name]                                                                                // 61\n        };                                                                                                             // 62\n      }                                                                                                                // 63\n    }                                                                                                                  // 64\n                                                                                                                       // 65\n    return false;                                                                                                      // 66\n  }                                                                                                                    // 67\n                                                                                                                       // 68\n  function transitionEndEmulator(duration) {                                                                           // 69\n    var _this = this;                                                                                                  // 70\n                                                                                                                       // 71\n    var called = false;                                                                                                // 72\n    $$$1(this).one(Util.TRANSITION_END, function () {                                                                  // 73\n      called = true;                                                                                                   // 74\n    });                                                                                                                // 75\n    setTimeout(function () {                                                                                           // 76\n      if (!called) {                                                                                                   // 77\n        Util.triggerTransitionEnd(_this);                                                                              // 78\n      }                                                                                                                // 79\n    }, duration);                                                                                                      // 80\n    return this;                                                                                                       // 81\n  }                                                                                                                    // 82\n                                                                                                                       // 83\n  function setTransitionEndSupport() {                                                                                 // 84\n    transition = transitionEndTest();                                                                                  // 85\n    $$$1.fn.emulateTransitionEnd = transitionEndEmulator;                                                              // 86\n                                                                                                                       // 87\n    if (Util.supportsTransitionEnd()) {                                                                                // 88\n      $$$1.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();                                        // 89\n    }                                                                                                                  // 90\n  }                                                                                                                    // 91\n  /**                                                                                                                  // 92\n   * --------------------------------------------------------------------------                                        // 93\n   * Public Util Api                                                                                                   // 94\n   * --------------------------------------------------------------------------                                        // 95\n   */                                                                                                                  // 96\n                                                                                                                       // 97\n                                                                                                                       // 98\n  var Util = {                                                                                                         // 99\n    TRANSITION_END: 'bsTransitionEnd',                                                                                 // 100\n    getUID: function getUID(prefix) {                                                                                  // 101\n      do {                                                                                                             // 102\n        // eslint-disable-next-line no-bitwise                                                                         // 103\n        prefix += ~~(Math.random() * MAX_UID); // \"~~\" acts like a faster Math.floor() here                            // 104\n      } while (document.getElementById(prefix));                                                                       // 105\n                                                                                                                       // 106\n      return prefix;                                                                                                   // 107\n    },                                                                                                                 // 108\n    getSelectorFromElement: function getSelectorFromElement(element) {                                                 // 109\n      var selector = element.getAttribute('data-target');                                                              // 110\n                                                                                                                       // 111\n      if (!selector || selector === '#') {                                                                             // 112\n        selector = element.getAttribute('href') || '';                                                                 // 113\n      }                                                                                                                // 114\n                                                                                                                       // 115\n      try {                                                                                                            // 116\n        var $selector = $$$1(document).find(selector);                                                                 // 117\n        return $selector.length > 0 ? selector : null;                                                                 // 118\n      } catch (error) {                                                                                                // 119\n        return null;                                                                                                   // 120\n      }                                                                                                                // 121\n    },                                                                                                                 // 122\n    reflow: function reflow(element) {                                                                                 // 123\n      return element.offsetHeight;                                                                                     // 124\n    },                                                                                                                 // 125\n    triggerTransitionEnd: function triggerTransitionEnd(element) {                                                     // 126\n      $$$1(element).trigger(transition.end);                                                                           // 127\n    },                                                                                                                 // 128\n    supportsTransitionEnd: function supportsTransitionEnd() {                                                          // 129\n      return Boolean(transition);                                                                                      // 130\n    },                                                                                                                 // 131\n    isElement: function isElement(obj) {                                                                               // 132\n      return (obj[0] || obj).nodeType;                                                                                 // 133\n    },                                                                                                                 // 134\n    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {                                    // 135\n      for (var property in configTypes) {                                                                              // 136\n        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {                                             // 137\n          var expectedTypes = configTypes[property];                                                                   // 138\n          var value = config[property];                                                                                // 139\n          var valueType = value && Util.isElement(value) ? 'element' : toType(value);                                  // 140\n                                                                                                                       // 141\n          if (!new RegExp(expectedTypes).test(valueType)) {                                                            // 142\n            throw new Error(componentName.toUpperCase() + \": \" + (\"Option \\\"\" + property + \"\\\" provided type \\\"\" + valueType + \"\\\" \") + (\"but expected type \\\"\" + expectedTypes + \"\\\".\"));\n          }                                                                                                            // 144\n        }                                                                                                              // 145\n      }                                                                                                                // 146\n    }                                                                                                                  // 147\n  };                                                                                                                   // 148\n  setTransitionEndSupport();                                                                                           // 149\n  return Util;                                                                                                         // 150\n}($);                                                                                                                  // 151\n                                                                                                                       // 152\nfunction _defineProperties(target, props) {                                                                            // 153\n  for (var i = 0; i < props.length; i++) {                                                                             // 154\n    var descriptor = props[i];                                                                                         // 155\n    descriptor.enumerable = descriptor.enumerable || false;                                                            // 156\n    descriptor.configurable = true;                                                                                    // 157\n    if (\"value\" in descriptor) descriptor.writable = true;                                                             // 158\n    Object.defineProperty(target, descriptor.key, descriptor);                                                         // 159\n  }                                                                                                                    // 160\n}                                                                                                                      // 161\n                                                                                                                       // 162\nfunction _createClass(Constructor, protoProps, staticProps) {                                                          // 163\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);                                                // 164\n  if (staticProps) _defineProperties(Constructor, staticProps);                                                        // 165\n  return Constructor;                                                                                                  // 166\n}                                                                                                                      // 167\n                                                                                                                       // 168\nvar createClass = _createClass;                                                                                        // 169\n                                                                                                                       // 170\nfunction _inheritsLoose(subClass, superClass) {                                                                        // 171\n  subClass.prototype = Object.create(superClass.prototype);                                                            // 172\n  subClass.prototype.constructor = subClass;                                                                           // 173\n  subClass.__proto__ = superClass;                                                                                     // 174\n}                                                                                                                      // 175\n                                                                                                                       // 176\nvar inheritsLoose = _inheritsLoose;                                                                                    // 177\n                                                                                                                       // 178\n/**                                                                                                                    // 179\n * --------------------------------------------------------------------------                                          // 180\n * Bootstrap (v4.0.0-beta.2): alert.js                                                                                 // 181\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 182\n * --------------------------------------------------------------------------                                          // 183\n */                                                                                                                    // 184\n                                                                                                                       // 185\nvar Alert = function ($$$1) {                                                                                          // 186\n  /**                                                                                                                  // 187\n   * ------------------------------------------------------------------------                                          // 188\n   * Constants                                                                                                         // 189\n   * ------------------------------------------------------------------------                                          // 190\n   */                                                                                                                  // 191\n  var NAME = 'alert';                                                                                                  // 192\n  var VERSION = '4.0.0-beta.2';                                                                                        // 193\n  var DATA_KEY = 'bs.alert';                                                                                           // 194\n  var EVENT_KEY = \".\" + DATA_KEY;                                                                                      // 195\n  var DATA_API_KEY = '.data-api';                                                                                      // 196\n  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];                                                                              // 197\n  var TRANSITION_DURATION = 150;                                                                                       // 198\n  var Selector = {                                                                                                     // 199\n    DISMISS: '[data-dismiss=\"alert\"]'                                                                                  // 200\n  };                                                                                                                   // 201\n  var Event = {                                                                                                        // 202\n    CLOSE: \"close\" + EVENT_KEY,                                                                                        // 203\n    CLOSED: \"closed\" + EVENT_KEY,                                                                                      // 204\n    CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY                                                                 // 205\n  };                                                                                                                   // 206\n  var ClassName = {                                                                                                    // 207\n    ALERT: 'alert',                                                                                                    // 208\n    FADE: 'fade',                                                                                                      // 209\n    SHOW: 'show'                                                                                                       // 210\n    /**                                                                                                                // 211\n     * ------------------------------------------------------------------------                                        // 212\n     * Class Definition                                                                                                // 213\n     * ------------------------------------------------------------------------                                        // 214\n     */                                                                                                                // 215\n                                                                                                                       // 216\n  };                                                                                                                   // 217\n                                                                                                                       // 218\n  var Alert =                                                                                                          // 219\n  /*#__PURE__*/                                                                                                        // 220\n  function () {                                                                                                        // 221\n    function Alert(element) {                                                                                          // 222\n      this._element = element;                                                                                         // 223\n    } // getters                                                                                                       // 224\n                                                                                                                       // 225\n                                                                                                                       // 226\n    var _proto = Alert.prototype;                                                                                      // 227\n                                                                                                                       // 228\n    // public                                                                                                          // 229\n    _proto.close = function close(element) {                                                                           // 230\n      element = element || this._element;                                                                              // 231\n                                                                                                                       // 232\n      var rootElement = this._getRootElement(element);                                                                 // 233\n                                                                                                                       // 234\n      var customEvent = this._triggerCloseEvent(rootElement);                                                          // 235\n                                                                                                                       // 236\n      if (customEvent.isDefaultPrevented()) {                                                                          // 237\n        return;                                                                                                        // 238\n      }                                                                                                                // 239\n                                                                                                                       // 240\n      this._removeElement(rootElement);                                                                                // 241\n    };                                                                                                                 // 242\n                                                                                                                       // 243\n    _proto.dispose = function dispose() {                                                                              // 244\n      $$$1.removeData(this._element, DATA_KEY);                                                                        // 245\n      this._element = null;                                                                                            // 246\n    }; // private                                                                                                      // 247\n                                                                                                                       // 248\n                                                                                                                       // 249\n    _proto._getRootElement = function _getRootElement(element) {                                                       // 250\n      var selector = Util.getSelectorFromElement(element);                                                             // 251\n      var parent = false;                                                                                              // 252\n                                                                                                                       // 253\n      if (selector) {                                                                                                  // 254\n        parent = $$$1(selector)[0];                                                                                    // 255\n      }                                                                                                                // 256\n                                                                                                                       // 257\n      if (!parent) {                                                                                                   // 258\n        parent = $$$1(element).closest(\".\" + ClassName.ALERT)[0];                                                      // 259\n      }                                                                                                                // 260\n                                                                                                                       // 261\n      return parent;                                                                                                   // 262\n    };                                                                                                                 // 263\n                                                                                                                       // 264\n    _proto._triggerCloseEvent = function _triggerCloseEvent(element) {                                                 // 265\n      var closeEvent = $$$1.Event(Event.CLOSE);                                                                        // 266\n      $$$1(element).trigger(closeEvent);                                                                               // 267\n      return closeEvent;                                                                                               // 268\n    };                                                                                                                 // 269\n                                                                                                                       // 270\n    _proto._removeElement = function _removeElement(element) {                                                         // 271\n      var _this = this;                                                                                                // 272\n                                                                                                                       // 273\n      $$$1(element).removeClass(ClassName.SHOW);                                                                       // 274\n                                                                                                                       // 275\n      if (!Util.supportsTransitionEnd() || !$$$1(element).hasClass(ClassName.FADE)) {                                  // 276\n        this._destroyElement(element);                                                                                 // 277\n                                                                                                                       // 278\n        return;                                                                                                        // 279\n      }                                                                                                                // 280\n                                                                                                                       // 281\n      $$$1(element).one(Util.TRANSITION_END, function (event) {                                                        // 282\n        return _this._destroyElement(element, event);                                                                  // 283\n      }).emulateTransitionEnd(TRANSITION_DURATION);                                                                    // 284\n    };                                                                                                                 // 285\n                                                                                                                       // 286\n    _proto._destroyElement = function _destroyElement(element) {                                                       // 287\n      $$$1(element).detach().trigger(Event.CLOSED).remove();                                                           // 288\n    }; // static                                                                                                       // 289\n                                                                                                                       // 290\n                                                                                                                       // 291\n    Alert._jQueryInterface = function _jQueryInterface(config) {                                                       // 292\n      return this.each(function () {                                                                                   // 293\n        var $element = $$$1(this);                                                                                     // 294\n        var data = $element.data(DATA_KEY);                                                                            // 295\n                                                                                                                       // 296\n        if (!data) {                                                                                                   // 297\n          data = new Alert(this);                                                                                      // 298\n          $element.data(DATA_KEY, data);                                                                               // 299\n        }                                                                                                              // 300\n                                                                                                                       // 301\n        if (config === 'close') {                                                                                      // 302\n          data[config](this);                                                                                          // 303\n        }                                                                                                              // 304\n      });                                                                                                              // 305\n    };                                                                                                                 // 306\n                                                                                                                       // 307\n    Alert._handleDismiss = function _handleDismiss(alertInstance) {                                                    // 308\n      return function (event) {                                                                                        // 309\n        if (event) {                                                                                                   // 310\n          event.preventDefault();                                                                                      // 311\n        }                                                                                                              // 312\n                                                                                                                       // 313\n        alertInstance.close(this);                                                                                     // 314\n      };                                                                                                               // 315\n    };                                                                                                                 // 316\n                                                                                                                       // 317\n    createClass(Alert, null, [{                                                                                        // 318\n      key: \"VERSION\",                                                                                                  // 319\n      get: function get() {                                                                                            // 320\n        return VERSION;                                                                                                // 321\n      }                                                                                                                // 322\n    }]);                                                                                                               // 323\n    return Alert;                                                                                                      // 324\n  }();                                                                                                                 // 325\n  /**                                                                                                                  // 326\n   * ------------------------------------------------------------------------                                          // 327\n   * Data Api implementation                                                                                           // 328\n   * ------------------------------------------------------------------------                                          // 329\n   */                                                                                                                  // 330\n                                                                                                                       // 331\n                                                                                                                       // 332\n  $$$1(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(new Alert()));                        // 333\n  /**                                                                                                                  // 334\n   * ------------------------------------------------------------------------                                          // 335\n   * jQuery                                                                                                            // 336\n   * ------------------------------------------------------------------------                                          // 337\n   */                                                                                                                  // 338\n                                                                                                                       // 339\n  $$$1.fn[NAME] = Alert._jQueryInterface;                                                                              // 340\n  $$$1.fn[NAME].Constructor = Alert;                                                                                   // 341\n                                                                                                                       // 342\n  $$$1.fn[NAME].noConflict = function () {                                                                             // 343\n    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;                                                                                // 344\n    return Alert._jQueryInterface;                                                                                     // 345\n  };                                                                                                                   // 346\n                                                                                                                       // 347\n  return Alert;                                                                                                        // 348\n}($);                                                                                                                  // 349\n                                                                                                                       // 350\n/**                                                                                                                    // 351\n * --------------------------------------------------------------------------                                          // 352\n * Bootstrap (v4.0.0-beta.2): button.js                                                                                // 353\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 354\n * --------------------------------------------------------------------------                                          // 355\n */                                                                                                                    // 356\n                                                                                                                       // 357\nvar Button = function ($$$1) {                                                                                         // 358\n  /**                                                                                                                  // 359\n   * ------------------------------------------------------------------------                                          // 360\n   * Constants                                                                                                         // 361\n   * ------------------------------------------------------------------------                                          // 362\n   */                                                                                                                  // 363\n  var NAME = 'button';                                                                                                 // 364\n  var VERSION = '4.0.0-beta.2';                                                                                        // 365\n  var DATA_KEY = 'bs.button';                                                                                          // 366\n  var EVENT_KEY = \".\" + DATA_KEY;                                                                                      // 367\n  var DATA_API_KEY = '.data-api';                                                                                      // 368\n  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];                                                                              // 369\n  var ClassName = {                                                                                                    // 370\n    ACTIVE: 'active',                                                                                                  // 371\n    BUTTON: 'btn',                                                                                                     // 372\n    FOCUS: 'focus'                                                                                                     // 373\n  };                                                                                                                   // 374\n  var Selector = {                                                                                                     // 375\n    DATA_TOGGLE_CARROT: '[data-toggle^=\"button\"]',                                                                     // 376\n    DATA_TOGGLE: '[data-toggle=\"buttons\"]',                                                                            // 377\n    INPUT: 'input',                                                                                                    // 378\n    ACTIVE: '.active',                                                                                                 // 379\n    BUTTON: '.btn'                                                                                                     // 380\n  };                                                                                                                   // 381\n  var Event = {                                                                                                        // 382\n    CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY,                                                                // 383\n    FOCUS_BLUR_DATA_API: \"focus\" + EVENT_KEY + DATA_API_KEY + \" \" + (\"blur\" + EVENT_KEY + DATA_API_KEY)                // 384\n    /**                                                                                                                // 385\n     * ------------------------------------------------------------------------                                        // 386\n     * Class Definition                                                                                                // 387\n     * ------------------------------------------------------------------------                                        // 388\n     */                                                                                                                // 389\n                                                                                                                       // 390\n  };                                                                                                                   // 391\n                                                                                                                       // 392\n  var Button =                                                                                                         // 393\n  /*#__PURE__*/                                                                                                        // 394\n  function () {                                                                                                        // 395\n    function Button(element) {                                                                                         // 396\n      this._element = element;                                                                                         // 397\n    } // getters                                                                                                       // 398\n                                                                                                                       // 399\n                                                                                                                       // 400\n    var _proto = Button.prototype;                                                                                     // 401\n                                                                                                                       // 402\n    // public                                                                                                          // 403\n    _proto.toggle = function toggle() {                                                                                // 404\n      var triggerChangeEvent = true;                                                                                   // 405\n      var addAriaPressed = true;                                                                                       // 406\n      var rootElement = $$$1(this._element).closest(Selector.DATA_TOGGLE)[0];                                          // 407\n                                                                                                                       // 408\n      if (rootElement) {                                                                                               // 409\n        var input = $$$1(this._element).find(Selector.INPUT)[0];                                                       // 410\n                                                                                                                       // 411\n        if (input) {                                                                                                   // 412\n          if (input.type === 'radio') {                                                                                // 413\n            if (input.checked && $$$1(this._element).hasClass(ClassName.ACTIVE)) {                                     // 414\n              triggerChangeEvent = false;                                                                              // 415\n            } else {                                                                                                   // 416\n              var activeElement = $$$1(rootElement).find(Selector.ACTIVE)[0];                                          // 417\n                                                                                                                       // 418\n              if (activeElement) {                                                                                     // 419\n                $$$1(activeElement).removeClass(ClassName.ACTIVE);                                                     // 420\n              }                                                                                                        // 421\n            }                                                                                                          // 422\n          }                                                                                                            // 423\n                                                                                                                       // 424\n          if (triggerChangeEvent) {                                                                                    // 425\n            if (input.hasAttribute('disabled') || rootElement.hasAttribute('disabled') || input.classList.contains('disabled') || rootElement.classList.contains('disabled')) {\n              return;                                                                                                  // 427\n            }                                                                                                          // 428\n                                                                                                                       // 429\n            input.checked = !$$$1(this._element).hasClass(ClassName.ACTIVE);                                           // 430\n            $$$1(input).trigger('change');                                                                             // 431\n          }                                                                                                            // 432\n                                                                                                                       // 433\n          input.focus();                                                                                               // 434\n          addAriaPressed = false;                                                                                      // 435\n        }                                                                                                              // 436\n      }                                                                                                                // 437\n                                                                                                                       // 438\n      if (addAriaPressed) {                                                                                            // 439\n        this._element.setAttribute('aria-pressed', !$$$1(this._element).hasClass(ClassName.ACTIVE));                   // 440\n      }                                                                                                                // 441\n                                                                                                                       // 442\n      if (triggerChangeEvent) {                                                                                        // 443\n        $$$1(this._element).toggleClass(ClassName.ACTIVE);                                                             // 444\n      }                                                                                                                // 445\n    };                                                                                                                 // 446\n                                                                                                                       // 447\n    _proto.dispose = function dispose() {                                                                              // 448\n      $$$1.removeData(this._element, DATA_KEY);                                                                        // 449\n      this._element = null;                                                                                            // 450\n    }; // static                                                                                                       // 451\n                                                                                                                       // 452\n                                                                                                                       // 453\n    Button._jQueryInterface = function _jQueryInterface(config) {                                                      // 454\n      return this.each(function () {                                                                                   // 455\n        var data = $$$1(this).data(DATA_KEY);                                                                          // 456\n                                                                                                                       // 457\n        if (!data) {                                                                                                   // 458\n          data = new Button(this);                                                                                     // 459\n          $$$1(this).data(DATA_KEY, data);                                                                             // 460\n        }                                                                                                              // 461\n                                                                                                                       // 462\n        if (config === 'toggle') {                                                                                     // 463\n          data[config]();                                                                                              // 464\n        }                                                                                                              // 465\n      });                                                                                                              // 466\n    };                                                                                                                 // 467\n                                                                                                                       // 468\n    createClass(Button, null, [{                                                                                       // 469\n      key: \"VERSION\",                                                                                                  // 470\n      get: function get() {                                                                                            // 471\n        return VERSION;                                                                                                // 472\n      }                                                                                                                // 473\n    }]);                                                                                                               // 474\n    return Button;                                                                                                     // 475\n  }();                                                                                                                 // 476\n  /**                                                                                                                  // 477\n   * ------------------------------------------------------------------------                                          // 478\n   * Data Api implementation                                                                                           // 479\n   * ------------------------------------------------------------------------                                          // 480\n   */                                                                                                                  // 481\n                                                                                                                       // 482\n                                                                                                                       // 483\n  $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {                              // 484\n    event.preventDefault();                                                                                            // 485\n    var button = event.target;                                                                                         // 486\n                                                                                                                       // 487\n    if (!$$$1(button).hasClass(ClassName.BUTTON)) {                                                                    // 488\n      button = $$$1(button).closest(Selector.BUTTON);                                                                  // 489\n    }                                                                                                                  // 490\n                                                                                                                       // 491\n    Button._jQueryInterface.call($$$1(button), 'toggle');                                                              // 492\n  }).on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {                                     // 493\n    var button = $$$1(event.target).closest(Selector.BUTTON)[0];                                                       // 494\n    $$$1(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));                                        // 495\n  });                                                                                                                  // 496\n  /**                                                                                                                  // 497\n   * ------------------------------------------------------------------------                                          // 498\n   * jQuery                                                                                                            // 499\n   * ------------------------------------------------------------------------                                          // 500\n   */                                                                                                                  // 501\n                                                                                                                       // 502\n  $$$1.fn[NAME] = Button._jQueryInterface;                                                                             // 503\n  $$$1.fn[NAME].Constructor = Button;                                                                                  // 504\n                                                                                                                       // 505\n  $$$1.fn[NAME].noConflict = function () {                                                                             // 506\n    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;                                                                                // 507\n    return Button._jQueryInterface;                                                                                    // 508\n  };                                                                                                                   // 509\n                                                                                                                       // 510\n  return Button;                                                                                                       // 511\n}($);                                                                                                                  // 512\n                                                                                                                       // 513\n/**                                                                                                                    // 514\n * --------------------------------------------------------------------------                                          // 515\n * Bootstrap (v4.0.0-beta.2): carousel.js                                                                              // 516\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 517\n * --------------------------------------------------------------------------                                          // 518\n */                                                                                                                    // 519\n                                                                                                                       // 520\nvar Carousel = function ($$$1) {                                                                                       // 521\n  /**                                                                                                                  // 522\n   * ------------------------------------------------------------------------                                          // 523\n   * Constants                                                                                                         // 524\n   * ------------------------------------------------------------------------                                          // 525\n   */                                                                                                                  // 526\n  var NAME = 'carousel';                                                                                               // 527\n  var VERSION = '4.0.0-beta.2';                                                                                        // 528\n  var DATA_KEY = 'bs.carousel';                                                                                        // 529\n  var EVENT_KEY = \".\" + DATA_KEY;                                                                                      // 530\n  var DATA_API_KEY = '.data-api';                                                                                      // 531\n  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];                                                                              // 532\n  var TRANSITION_DURATION = 600;                                                                                       // 533\n  var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key                                         // 534\n                                                                                                                       // 535\n  var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key                                       // 536\n                                                                                                                       // 537\n  var TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch                                // 538\n                                                                                                                       // 539\n  var Default = {                                                                                                      // 540\n    interval: 5000,                                                                                                    // 541\n    keyboard: true,                                                                                                    // 542\n    slide: false,                                                                                                      // 543\n    pause: 'hover',                                                                                                    // 544\n    wrap: true                                                                                                         // 545\n  };                                                                                                                   // 546\n  var DefaultType = {                                                                                                  // 547\n    interval: '(number|boolean)',                                                                                      // 548\n    keyboard: 'boolean',                                                                                               // 549\n    slide: '(boolean|string)',                                                                                         // 550\n    pause: '(string|boolean)',                                                                                         // 551\n    wrap: 'boolean'                                                                                                    // 552\n  };                                                                                                                   // 553\n  var Direction = {                                                                                                    // 554\n    NEXT: 'next',                                                                                                      // 555\n    PREV: 'prev',                                                                                                      // 556\n    LEFT: 'left',                                                                                                      // 557\n    RIGHT: 'right'                                                                                                     // 558\n  };                                                                                                                   // 559\n  var Event = {                                                                                                        // 560\n    SLIDE: \"slide\" + EVENT_KEY,                                                                                        // 561\n    SLID: \"slid\" + EVENT_KEY,                                                                                          // 562\n    KEYDOWN: \"keydown\" + EVENT_KEY,                                                                                    // 563\n    MOUSEENTER: \"mouseenter\" + EVENT_KEY,                                                                              // 564\n    MOUSELEAVE: \"mouseleave\" + EVENT_KEY,                                                                              // 565\n    TOUCHEND: \"touchend\" + EVENT_KEY,                                                                                  // 566\n    LOAD_DATA_API: \"load\" + EVENT_KEY + DATA_API_KEY,                                                                  // 567\n    CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY                                                                 // 568\n  };                                                                                                                   // 569\n  var ClassName = {                                                                                                    // 570\n    CAROUSEL: 'carousel',                                                                                              // 571\n    ACTIVE: 'active',                                                                                                  // 572\n    SLIDE: 'slide',                                                                                                    // 573\n    RIGHT: 'carousel-item-right',                                                                                      // 574\n    LEFT: 'carousel-item-left',                                                                                        // 575\n    NEXT: 'carousel-item-next',                                                                                        // 576\n    PREV: 'carousel-item-prev',                                                                                        // 577\n    ITEM: 'carousel-item'                                                                                              // 578\n  };                                                                                                                   // 579\n  var Selector = {                                                                                                     // 580\n    ACTIVE: '.active',                                                                                                 // 581\n    ACTIVE_ITEM: '.active.carousel-item',                                                                              // 582\n    ITEM: '.carousel-item',                                                                                            // 583\n    NEXT_PREV: '.carousel-item-next, .carousel-item-prev',                                                             // 584\n    INDICATORS: '.carousel-indicators',                                                                                // 585\n    DATA_SLIDE: '[data-slide], [data-slide-to]',                                                                       // 586\n    DATA_RIDE: '[data-ride=\"carousel\"]'                                                                                // 587\n    /**                                                                                                                // 588\n     * ------------------------------------------------------------------------                                        // 589\n     * Class Definition                                                                                                // 590\n     * ------------------------------------------------------------------------                                        // 591\n     */                                                                                                                // 592\n                                                                                                                       // 593\n  };                                                                                                                   // 594\n                                                                                                                       // 595\n  var Carousel =                                                                                                       // 596\n  /*#__PURE__*/                                                                                                        // 597\n  function () {                                                                                                        // 598\n    function Carousel(element, config) {                                                                               // 599\n      this._items = null;                                                                                              // 600\n      this._interval = null;                                                                                           // 601\n      this._activeElement = null;                                                                                      // 602\n      this._isPaused = false;                                                                                          // 603\n      this._isSliding = false;                                                                                         // 604\n      this.touchTimeout = null;                                                                                        // 605\n      this._config = this._getConfig(config);                                                                          // 606\n      this._element = $$$1(element)[0];                                                                                // 607\n      this._indicatorsElement = $$$1(this._element).find(Selector.INDICATORS)[0];                                      // 608\n                                                                                                                       // 609\n      this._addEventListeners();                                                                                       // 610\n    } // getters                                                                                                       // 611\n                                                                                                                       // 612\n                                                                                                                       // 613\n    var _proto = Carousel.prototype;                                                                                   // 614\n                                                                                                                       // 615\n    // public                                                                                                          // 616\n    _proto.next = function next() {                                                                                    // 617\n      if (!this._isSliding) {                                                                                          // 618\n        this._slide(Direction.NEXT);                                                                                   // 619\n      }                                                                                                                // 620\n    };                                                                                                                 // 621\n                                                                                                                       // 622\n    _proto.nextWhenVisible = function nextWhenVisible() {                                                              // 623\n      // Don't call next when the page isn't visible                                                                   // 624\n      // or the carousel or its parent isn't visible                                                                   // 625\n      if (!document.hidden && $$$1(this._element).is(':visible') && $$$1(this._element).css('visibility') !== 'hidden') {\n        this.next();                                                                                                   // 627\n      }                                                                                                                // 628\n    };                                                                                                                 // 629\n                                                                                                                       // 630\n    _proto.prev = function prev() {                                                                                    // 631\n      if (!this._isSliding) {                                                                                          // 632\n        this._slide(Direction.PREV);                                                                                   // 633\n      }                                                                                                                // 634\n    };                                                                                                                 // 635\n                                                                                                                       // 636\n    _proto.pause = function pause(event) {                                                                             // 637\n      if (!event) {                                                                                                    // 638\n        this._isPaused = true;                                                                                         // 639\n      }                                                                                                                // 640\n                                                                                                                       // 641\n      if ($$$1(this._element).find(Selector.NEXT_PREV)[0] && Util.supportsTransitionEnd()) {                           // 642\n        Util.triggerTransitionEnd(this._element);                                                                      // 643\n        this.cycle(true);                                                                                              // 644\n      }                                                                                                                // 645\n                                                                                                                       // 646\n      clearInterval(this._interval);                                                                                   // 647\n      this._interval = null;                                                                                           // 648\n    };                                                                                                                 // 649\n                                                                                                                       // 650\n    _proto.cycle = function cycle(event) {                                                                             // 651\n      if (!event) {                                                                                                    // 652\n        this._isPaused = false;                                                                                        // 653\n      }                                                                                                                // 654\n                                                                                                                       // 655\n      if (this._interval) {                                                                                            // 656\n        clearInterval(this._interval);                                                                                 // 657\n        this._interval = null;                                                                                         // 658\n      }                                                                                                                // 659\n                                                                                                                       // 660\n      if (this._config.interval && !this._isPaused) {                                                                  // 661\n        this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);\n      }                                                                                                                // 663\n    };                                                                                                                 // 664\n                                                                                                                       // 665\n    _proto.to = function to(index) {                                                                                   // 666\n      var _this = this;                                                                                                // 667\n                                                                                                                       // 668\n      this._activeElement = $$$1(this._element).find(Selector.ACTIVE_ITEM)[0];                                         // 669\n                                                                                                                       // 670\n      var activeIndex = this._getItemIndex(this._activeElement);                                                       // 671\n                                                                                                                       // 672\n      if (index > this._items.length - 1 || index < 0) {                                                               // 673\n        return;                                                                                                        // 674\n      }                                                                                                                // 675\n                                                                                                                       // 676\n      if (this._isSliding) {                                                                                           // 677\n        $$$1(this._element).one(Event.SLID, function () {                                                              // 678\n          return _this.to(index);                                                                                      // 679\n        });                                                                                                            // 680\n        return;                                                                                                        // 681\n      }                                                                                                                // 682\n                                                                                                                       // 683\n      if (activeIndex === index) {                                                                                     // 684\n        this.pause();                                                                                                  // 685\n        this.cycle();                                                                                                  // 686\n        return;                                                                                                        // 687\n      }                                                                                                                // 688\n                                                                                                                       // 689\n      var direction = index > activeIndex ? Direction.NEXT : Direction.PREV;                                           // 690\n                                                                                                                       // 691\n      this._slide(direction, this._items[index]);                                                                      // 692\n    };                                                                                                                 // 693\n                                                                                                                       // 694\n    _proto.dispose = function dispose() {                                                                              // 695\n      $$$1(this._element).off(EVENT_KEY);                                                                              // 696\n      $$$1.removeData(this._element, DATA_KEY);                                                                        // 697\n      this._items = null;                                                                                              // 698\n      this._config = null;                                                                                             // 699\n      this._element = null;                                                                                            // 700\n      this._interval = null;                                                                                           // 701\n      this._isPaused = null;                                                                                           // 702\n      this._isSliding = null;                                                                                          // 703\n      this._activeElement = null;                                                                                      // 704\n      this._indicatorsElement = null;                                                                                  // 705\n    }; // private                                                                                                      // 706\n                                                                                                                       // 707\n                                                                                                                       // 708\n    _proto._getConfig = function _getConfig(config) {                                                                  // 709\n      config = $$$1.extend({}, Default, config);                                                                       // 710\n      Util.typeCheckConfig(NAME, config, DefaultType);                                                                 // 711\n      return config;                                                                                                   // 712\n    };                                                                                                                 // 713\n                                                                                                                       // 714\n    _proto._addEventListeners = function _addEventListeners() {                                                        // 715\n      var _this2 = this;                                                                                               // 716\n                                                                                                                       // 717\n      if (this._config.keyboard) {                                                                                     // 718\n        $$$1(this._element).on(Event.KEYDOWN, function (event) {                                                       // 719\n          return _this2._keydown(event);                                                                               // 720\n        });                                                                                                            // 721\n      }                                                                                                                // 722\n                                                                                                                       // 723\n      if (this._config.pause === 'hover') {                                                                            // 724\n        $$$1(this._element).on(Event.MOUSEENTER, function (event) {                                                    // 725\n          return _this2.pause(event);                                                                                  // 726\n        }).on(Event.MOUSELEAVE, function (event) {                                                                     // 727\n          return _this2.cycle(event);                                                                                  // 728\n        });                                                                                                            // 729\n                                                                                                                       // 730\n        if ('ontouchstart' in document.documentElement) {                                                              // 731\n          // if it's a touch-enabled device, mouseenter/leave are fired as                                             // 732\n          // part of the mouse compatibility events on first tap - the carousel                                        // 733\n          // would stop cycling until user tapped out of it;                                                           // 734\n          // here, we listen for touchend, explicitly pause the carousel                                               // 735\n          // (as if it's the second time we tap on it, mouseenter compat event                                         // 736\n          // is NOT fired) and after a timeout (to allow for mouse compatibility                                       // 737\n          // events to fire) we explicitly restart cycling                                                             // 738\n          $$$1(this._element).on(Event.TOUCHEND, function () {                                                         // 739\n            _this2.pause();                                                                                            // 740\n                                                                                                                       // 741\n            if (_this2.touchTimeout) {                                                                                 // 742\n              clearTimeout(_this2.touchTimeout);                                                                       // 743\n            }                                                                                                          // 744\n                                                                                                                       // 745\n            _this2.touchTimeout = setTimeout(function (event) {                                                        // 746\n              return _this2.cycle(event);                                                                              // 747\n            }, TOUCHEVENT_COMPAT_WAIT + _this2._config.interval);                                                      // 748\n          });                                                                                                          // 749\n        }                                                                                                              // 750\n      }                                                                                                                // 751\n    };                                                                                                                 // 752\n                                                                                                                       // 753\n    _proto._keydown = function _keydown(event) {                                                                       // 754\n      if (/input|textarea/i.test(event.target.tagName)) {                                                              // 755\n        return;                                                                                                        // 756\n      }                                                                                                                // 757\n                                                                                                                       // 758\n      switch (event.which) {                                                                                           // 759\n        case ARROW_LEFT_KEYCODE:                                                                                       // 760\n          event.preventDefault();                                                                                      // 761\n          this.prev();                                                                                                 // 762\n          break;                                                                                                       // 763\n                                                                                                                       // 764\n        case ARROW_RIGHT_KEYCODE:                                                                                      // 765\n          event.preventDefault();                                                                                      // 766\n          this.next();                                                                                                 // 767\n          break;                                                                                                       // 768\n                                                                                                                       // 769\n        default:                                                                                                       // 770\n          return;                                                                                                      // 771\n      }                                                                                                                // 772\n    };                                                                                                                 // 773\n                                                                                                                       // 774\n    _proto._getItemIndex = function _getItemIndex(element) {                                                           // 775\n      this._items = $$$1.makeArray($$$1(element).parent().find(Selector.ITEM));                                        // 776\n      return this._items.indexOf(element);                                                                             // 777\n    };                                                                                                                 // 778\n                                                                                                                       // 779\n    _proto._getItemByDirection = function _getItemByDirection(direction, activeElement) {                              // 780\n      var isNextDirection = direction === Direction.NEXT;                                                              // 781\n      var isPrevDirection = direction === Direction.PREV;                                                              // 782\n                                                                                                                       // 783\n      var activeIndex = this._getItemIndex(activeElement);                                                             // 784\n                                                                                                                       // 785\n      var lastItemIndex = this._items.length - 1;                                                                      // 786\n      var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;    // 787\n                                                                                                                       // 788\n      if (isGoingToWrap && !this._config.wrap) {                                                                       // 789\n        return activeElement;                                                                                          // 790\n      }                                                                                                                // 791\n                                                                                                                       // 792\n      var delta = direction === Direction.PREV ? -1 : 1;                                                               // 793\n      var itemIndex = (activeIndex + delta) % this._items.length;                                                      // 794\n      return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];                          // 795\n    };                                                                                                                 // 796\n                                                                                                                       // 797\n    _proto._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, eventDirectionName) {                       // 798\n      var targetIndex = this._getItemIndex(relatedTarget);                                                             // 799\n                                                                                                                       // 800\n      var fromIndex = this._getItemIndex($$$1(this._element).find(Selector.ACTIVE_ITEM)[0]);                           // 801\n                                                                                                                       // 802\n      var slideEvent = $$$1.Event(Event.SLIDE, {                                                                       // 803\n        relatedTarget: relatedTarget,                                                                                  // 804\n        direction: eventDirectionName,                                                                                 // 805\n        from: fromIndex,                                                                                               // 806\n        to: targetIndex                                                                                                // 807\n      });                                                                                                              // 808\n      $$$1(this._element).trigger(slideEvent);                                                                         // 809\n      return slideEvent;                                                                                               // 810\n    };                                                                                                                 // 811\n                                                                                                                       // 812\n    _proto._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {                                 // 813\n      if (this._indicatorsElement) {                                                                                   // 814\n        $$$1(this._indicatorsElement).find(Selector.ACTIVE).removeClass(ClassName.ACTIVE);                             // 815\n                                                                                                                       // 816\n        var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];                             // 817\n                                                                                                                       // 818\n        if (nextIndicator) {                                                                                           // 819\n          $$$1(nextIndicator).addClass(ClassName.ACTIVE);                                                              // 820\n        }                                                                                                              // 821\n      }                                                                                                                // 822\n    };                                                                                                                 // 823\n                                                                                                                       // 824\n    _proto._slide = function _slide(direction, element) {                                                              // 825\n      var _this3 = this;                                                                                               // 826\n                                                                                                                       // 827\n      var activeElement = $$$1(this._element).find(Selector.ACTIVE_ITEM)[0];                                           // 828\n                                                                                                                       // 829\n      var activeElementIndex = this._getItemIndex(activeElement);                                                      // 830\n                                                                                                                       // 831\n      var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);                // 832\n                                                                                                                       // 833\n      var nextElementIndex = this._getItemIndex(nextElement);                                                          // 834\n                                                                                                                       // 835\n      var isCycling = Boolean(this._interval);                                                                         // 836\n      var directionalClassName;                                                                                        // 837\n      var orderClassName;                                                                                              // 838\n      var eventDirectionName;                                                                                          // 839\n                                                                                                                       // 840\n      if (direction === Direction.NEXT) {                                                                              // 841\n        directionalClassName = ClassName.LEFT;                                                                         // 842\n        orderClassName = ClassName.NEXT;                                                                               // 843\n        eventDirectionName = Direction.LEFT;                                                                           // 844\n      } else {                                                                                                         // 845\n        directionalClassName = ClassName.RIGHT;                                                                        // 846\n        orderClassName = ClassName.PREV;                                                                               // 847\n        eventDirectionName = Direction.RIGHT;                                                                          // 848\n      }                                                                                                                // 849\n                                                                                                                       // 850\n      if (nextElement && $$$1(nextElement).hasClass(ClassName.ACTIVE)) {                                               // 851\n        this._isSliding = false;                                                                                       // 852\n        return;                                                                                                        // 853\n      }                                                                                                                // 854\n                                                                                                                       // 855\n      var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);                                       // 856\n                                                                                                                       // 857\n      if (slideEvent.isDefaultPrevented()) {                                                                           // 858\n        return;                                                                                                        // 859\n      }                                                                                                                // 860\n                                                                                                                       // 861\n      if (!activeElement || !nextElement) {                                                                            // 862\n        // some weirdness is happening, so we bail                                                                     // 863\n        return;                                                                                                        // 864\n      }                                                                                                                // 865\n                                                                                                                       // 866\n      this._isSliding = true;                                                                                          // 867\n                                                                                                                       // 868\n      if (isCycling) {                                                                                                 // 869\n        this.pause();                                                                                                  // 870\n      }                                                                                                                // 871\n                                                                                                                       // 872\n      this._setActiveIndicatorElement(nextElement);                                                                    // 873\n                                                                                                                       // 874\n      var slidEvent = $$$1.Event(Event.SLID, {                                                                         // 875\n        relatedTarget: nextElement,                                                                                    // 876\n        direction: eventDirectionName,                                                                                 // 877\n        from: activeElementIndex,                                                                                      // 878\n        to: nextElementIndex                                                                                           // 879\n      });                                                                                                              // 880\n                                                                                                                       // 881\n      if (Util.supportsTransitionEnd() && $$$1(this._element).hasClass(ClassName.SLIDE)) {                             // 882\n        $$$1(nextElement).addClass(orderClassName);                                                                    // 883\n        Util.reflow(nextElement);                                                                                      // 884\n        $$$1(activeElement).addClass(directionalClassName);                                                            // 885\n        $$$1(nextElement).addClass(directionalClassName);                                                              // 886\n        $$$1(activeElement).one(Util.TRANSITION_END, function () {                                                     // 887\n          $$$1(nextElement).removeClass(directionalClassName + \" \" + orderClassName).addClass(ClassName.ACTIVE);       // 888\n          $$$1(activeElement).removeClass(ClassName.ACTIVE + \" \" + orderClassName + \" \" + directionalClassName);       // 889\n          _this3._isSliding = false;                                                                                   // 890\n          setTimeout(function () {                                                                                     // 891\n            return $$$1(_this3._element).trigger(slidEvent);                                                           // 892\n          }, 0);                                                                                                       // 893\n        }).emulateTransitionEnd(TRANSITION_DURATION);                                                                  // 894\n      } else {                                                                                                         // 895\n        $$$1(activeElement).removeClass(ClassName.ACTIVE);                                                             // 896\n        $$$1(nextElement).addClass(ClassName.ACTIVE);                                                                  // 897\n        this._isSliding = false;                                                                                       // 898\n        $$$1(this._element).trigger(slidEvent);                                                                        // 899\n      }                                                                                                                // 900\n                                                                                                                       // 901\n      if (isCycling) {                                                                                                 // 902\n        this.cycle();                                                                                                  // 903\n      }                                                                                                                // 904\n    }; // static                                                                                                       // 905\n                                                                                                                       // 906\n                                                                                                                       // 907\n    Carousel._jQueryInterface = function _jQueryInterface(config) {                                                    // 908\n      return this.each(function () {                                                                                   // 909\n        var data = $$$1(this).data(DATA_KEY);                                                                          // 910\n                                                                                                                       // 911\n        var _config = $$$1.extend({}, Default, $$$1(this).data());                                                     // 912\n                                                                                                                       // 913\n        if (typeof config === 'object') {                                                                              // 914\n          $$$1.extend(_config, config);                                                                                // 915\n        }                                                                                                              // 916\n                                                                                                                       // 917\n        var action = typeof config === 'string' ? config : _config.slide;                                              // 918\n                                                                                                                       // 919\n        if (!data) {                                                                                                   // 920\n          data = new Carousel(this, _config);                                                                          // 921\n          $$$1(this).data(DATA_KEY, data);                                                                             // 922\n        }                                                                                                              // 923\n                                                                                                                       // 924\n        if (typeof config === 'number') {                                                                              // 925\n          data.to(config);                                                                                             // 926\n        } else if (typeof action === 'string') {                                                                       // 927\n          if (typeof data[action] === 'undefined') {                                                                   // 928\n            throw new Error(\"No method named \\\"\" + action + \"\\\"\");                                                     // 929\n          }                                                                                                            // 930\n                                                                                                                       // 931\n          data[action]();                                                                                              // 932\n        } else if (_config.interval) {                                                                                 // 933\n          data.pause();                                                                                                // 934\n          data.cycle();                                                                                                // 935\n        }                                                                                                              // 936\n      });                                                                                                              // 937\n    };                                                                                                                 // 938\n                                                                                                                       // 939\n    Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {                                             // 940\n      var selector = Util.getSelectorFromElement(this);                                                                // 941\n                                                                                                                       // 942\n      if (!selector) {                                                                                                 // 943\n        return;                                                                                                        // 944\n      }                                                                                                                // 945\n                                                                                                                       // 946\n      var target = $$$1(selector)[0];                                                                                  // 947\n                                                                                                                       // 948\n      if (!target || !$$$1(target).hasClass(ClassName.CAROUSEL)) {                                                     // 949\n        return;                                                                                                        // 950\n      }                                                                                                                // 951\n                                                                                                                       // 952\n      var config = $$$1.extend({}, $$$1(target).data(), $$$1(this).data());                                            // 953\n      var slideIndex = this.getAttribute('data-slide-to');                                                             // 954\n                                                                                                                       // 955\n      if (slideIndex) {                                                                                                // 956\n        config.interval = false;                                                                                       // 957\n      }                                                                                                                // 958\n                                                                                                                       // 959\n      Carousel._jQueryInterface.call($$$1(target), config);                                                            // 960\n                                                                                                                       // 961\n      if (slideIndex) {                                                                                                // 962\n        $$$1(target).data(DATA_KEY).to(slideIndex);                                                                    // 963\n      }                                                                                                                // 964\n                                                                                                                       // 965\n      event.preventDefault();                                                                                          // 966\n    };                                                                                                                 // 967\n                                                                                                                       // 968\n    createClass(Carousel, null, [{                                                                                     // 969\n      key: \"VERSION\",                                                                                                  // 970\n      get: function get() {                                                                                            // 971\n        return VERSION;                                                                                                // 972\n      }                                                                                                                // 973\n    }, {                                                                                                               // 974\n      key: \"Default\",                                                                                                  // 975\n      get: function get() {                                                                                            // 976\n        return Default;                                                                                                // 977\n      }                                                                                                                // 978\n    }]);                                                                                                               // 979\n    return Carousel;                                                                                                   // 980\n  }();                                                                                                                 // 981\n  /**                                                                                                                  // 982\n   * ------------------------------------------------------------------------                                          // 983\n   * Data Api implementation                                                                                           // 984\n   * ------------------------------------------------------------------------                                          // 985\n   */                                                                                                                  // 986\n                                                                                                                       // 987\n                                                                                                                       // 988\n  $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);                         // 989\n  $$$1(window).on(Event.LOAD_DATA_API, function () {                                                                   // 990\n    $$$1(Selector.DATA_RIDE).each(function () {                                                                        // 991\n      var $carousel = $$$1(this);                                                                                      // 992\n                                                                                                                       // 993\n      Carousel._jQueryInterface.call($carousel, $carousel.data());                                                     // 994\n    });                                                                                                                // 995\n  });                                                                                                                  // 996\n  /**                                                                                                                  // 997\n   * ------------------------------------------------------------------------                                          // 998\n   * jQuery                                                                                                            // 999\n   * ------------------------------------------------------------------------                                          // 1000\n   */                                                                                                                  // 1001\n                                                                                                                       // 1002\n  $$$1.fn[NAME] = Carousel._jQueryInterface;                                                                           // 1003\n  $$$1.fn[NAME].Constructor = Carousel;                                                                                // 1004\n                                                                                                                       // 1005\n  $$$1.fn[NAME].noConflict = function () {                                                                             // 1006\n    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;                                                                                // 1007\n    return Carousel._jQueryInterface;                                                                                  // 1008\n  };                                                                                                                   // 1009\n                                                                                                                       // 1010\n  return Carousel;                                                                                                     // 1011\n}($);                                                                                                                  // 1012\n                                                                                                                       // 1013\n/**                                                                                                                    // 1014\n * --------------------------------------------------------------------------                                          // 1015\n * Bootstrap (v4.0.0-beta.2): collapse.js                                                                              // 1016\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 1017\n * --------------------------------------------------------------------------                                          // 1018\n */                                                                                                                    // 1019\n                                                                                                                       // 1020\nvar Collapse = function ($$$1) {                                                                                       // 1021\n  /**                                                                                                                  // 1022\n   * ------------------------------------------------------------------------                                          // 1023\n   * Constants                                                                                                         // 1024\n   * ------------------------------------------------------------------------                                          // 1025\n   */                                                                                                                  // 1026\n  var NAME = 'collapse';                                                                                               // 1027\n  var VERSION = '4.0.0-beta.2';                                                                                        // 1028\n  var DATA_KEY = 'bs.collapse';                                                                                        // 1029\n  var EVENT_KEY = \".\" + DATA_KEY;                                                                                      // 1030\n  var DATA_API_KEY = '.data-api';                                                                                      // 1031\n  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];                                                                              // 1032\n  var TRANSITION_DURATION = 600;                                                                                       // 1033\n  var Default = {                                                                                                      // 1034\n    toggle: true,                                                                                                      // 1035\n    parent: ''                                                                                                         // 1036\n  };                                                                                                                   // 1037\n  var DefaultType = {                                                                                                  // 1038\n    toggle: 'boolean',                                                                                                 // 1039\n    parent: '(string|element)'                                                                                         // 1040\n  };                                                                                                                   // 1041\n  var Event = {                                                                                                        // 1042\n    SHOW: \"show\" + EVENT_KEY,                                                                                          // 1043\n    SHOWN: \"shown\" + EVENT_KEY,                                                                                        // 1044\n    HIDE: \"hide\" + EVENT_KEY,                                                                                          // 1045\n    HIDDEN: \"hidden\" + EVENT_KEY,                                                                                      // 1046\n    CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY                                                                 // 1047\n  };                                                                                                                   // 1048\n  var ClassName = {                                                                                                    // 1049\n    SHOW: 'show',                                                                                                      // 1050\n    COLLAPSE: 'collapse',                                                                                              // 1051\n    COLLAPSING: 'collapsing',                                                                                          // 1052\n    COLLAPSED: 'collapsed'                                                                                             // 1053\n  };                                                                                                                   // 1054\n  var Dimension = {                                                                                                    // 1055\n    WIDTH: 'width',                                                                                                    // 1056\n    HEIGHT: 'height'                                                                                                   // 1057\n  };                                                                                                                   // 1058\n  var Selector = {                                                                                                     // 1059\n    ACTIVES: '.show, .collapsing',                                                                                     // 1060\n    DATA_TOGGLE: '[data-toggle=\"collapse\"]'                                                                            // 1061\n    /**                                                                                                                // 1062\n     * ------------------------------------------------------------------------                                        // 1063\n     * Class Definition                                                                                                // 1064\n     * ------------------------------------------------------------------------                                        // 1065\n     */                                                                                                                // 1066\n                                                                                                                       // 1067\n  };                                                                                                                   // 1068\n                                                                                                                       // 1069\n  var Collapse =                                                                                                       // 1070\n  /*#__PURE__*/                                                                                                        // 1071\n  function () {                                                                                                        // 1072\n    function Collapse(element, config) {                                                                               // 1073\n      this._isTransitioning = false;                                                                                   // 1074\n      this._element = element;                                                                                         // 1075\n      this._config = this._getConfig(config);                                                                          // 1076\n      this._triggerArray = $$$1.makeArray($$$1(\"[data-toggle=\\\"collapse\\\"][href=\\\"#\" + element.id + \"\\\"],\" + (\"[data-toggle=\\\"collapse\\\"][data-target=\\\"#\" + element.id + \"\\\"]\")));\n      var tabToggles = $$$1(Selector.DATA_TOGGLE);                                                                     // 1078\n                                                                                                                       // 1079\n      for (var i = 0; i < tabToggles.length; i++) {                                                                    // 1080\n        var elem = tabToggles[i];                                                                                      // 1081\n        var selector = Util.getSelectorFromElement(elem);                                                              // 1082\n                                                                                                                       // 1083\n        if (selector !== null && $$$1(selector).filter(element).length > 0) {                                          // 1084\n          this._triggerArray.push(elem);                                                                               // 1085\n        }                                                                                                              // 1086\n      }                                                                                                                // 1087\n                                                                                                                       // 1088\n      this._parent = this._config.parent ? this._getParent() : null;                                                   // 1089\n                                                                                                                       // 1090\n      if (!this._config.parent) {                                                                                      // 1091\n        this._addAriaAndCollapsedClass(this._element, this._triggerArray);                                             // 1092\n      }                                                                                                                // 1093\n                                                                                                                       // 1094\n      if (this._config.toggle) {                                                                                       // 1095\n        this.toggle();                                                                                                 // 1096\n      }                                                                                                                // 1097\n    } // getters                                                                                                       // 1098\n                                                                                                                       // 1099\n                                                                                                                       // 1100\n    var _proto = Collapse.prototype;                                                                                   // 1101\n                                                                                                                       // 1102\n    // public                                                                                                          // 1103\n    _proto.toggle = function toggle() {                                                                                // 1104\n      if ($$$1(this._element).hasClass(ClassName.SHOW)) {                                                              // 1105\n        this.hide();                                                                                                   // 1106\n      } else {                                                                                                         // 1107\n        this.show();                                                                                                   // 1108\n      }                                                                                                                // 1109\n    };                                                                                                                 // 1110\n                                                                                                                       // 1111\n    _proto.show = function show() {                                                                                    // 1112\n      var _this = this;                                                                                                // 1113\n                                                                                                                       // 1114\n      if (this._isTransitioning || $$$1(this._element).hasClass(ClassName.SHOW)) {                                     // 1115\n        return;                                                                                                        // 1116\n      }                                                                                                                // 1117\n                                                                                                                       // 1118\n      var actives;                                                                                                     // 1119\n      var activesData;                                                                                                 // 1120\n                                                                                                                       // 1121\n      if (this._parent) {                                                                                              // 1122\n        actives = $$$1.makeArray($$$1(this._parent).children().children(Selector.ACTIVES));                            // 1123\n                                                                                                                       // 1124\n        if (!actives.length) {                                                                                         // 1125\n          actives = null;                                                                                              // 1126\n        }                                                                                                              // 1127\n      }                                                                                                                // 1128\n                                                                                                                       // 1129\n      if (actives) {                                                                                                   // 1130\n        activesData = $$$1(actives).data(DATA_KEY);                                                                    // 1131\n                                                                                                                       // 1132\n        if (activesData && activesData._isTransitioning) {                                                             // 1133\n          return;                                                                                                      // 1134\n        }                                                                                                              // 1135\n      }                                                                                                                // 1136\n                                                                                                                       // 1137\n      var startEvent = $$$1.Event(Event.SHOW);                                                                         // 1138\n      $$$1(this._element).trigger(startEvent);                                                                         // 1139\n                                                                                                                       // 1140\n      if (startEvent.isDefaultPrevented()) {                                                                           // 1141\n        return;                                                                                                        // 1142\n      }                                                                                                                // 1143\n                                                                                                                       // 1144\n      if (actives) {                                                                                                   // 1145\n        Collapse._jQueryInterface.call($$$1(actives), 'hide');                                                         // 1146\n                                                                                                                       // 1147\n        if (!activesData) {                                                                                            // 1148\n          $$$1(actives).data(DATA_KEY, null);                                                                          // 1149\n        }                                                                                                              // 1150\n      }                                                                                                                // 1151\n                                                                                                                       // 1152\n      var dimension = this._getDimension();                                                                            // 1153\n                                                                                                                       // 1154\n      $$$1(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);                              // 1155\n      this._element.style[dimension] = 0;                                                                              // 1156\n                                                                                                                       // 1157\n      if (this._triggerArray.length) {                                                                                 // 1158\n        $$$1(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);                         // 1159\n      }                                                                                                                // 1160\n                                                                                                                       // 1161\n      this.setTransitioning(true);                                                                                     // 1162\n                                                                                                                       // 1163\n      var complete = function complete() {                                                                             // 1164\n        $$$1(_this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.SHOW);  // 1165\n        _this._element.style[dimension] = '';                                                                          // 1166\n                                                                                                                       // 1167\n        _this.setTransitioning(false);                                                                                 // 1168\n                                                                                                                       // 1169\n        $$$1(_this._element).trigger(Event.SHOWN);                                                                     // 1170\n      };                                                                                                               // 1171\n                                                                                                                       // 1172\n      if (!Util.supportsTransitionEnd()) {                                                                             // 1173\n        complete();                                                                                                    // 1174\n        return;                                                                                                        // 1175\n      }                                                                                                                // 1176\n                                                                                                                       // 1177\n      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);                                      // 1178\n      var scrollSize = \"scroll\" + capitalizedDimension;                                                                // 1179\n      $$$1(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);                // 1180\n      this._element.style[dimension] = this._element[scrollSize] + \"px\";                                               // 1181\n    };                                                                                                                 // 1182\n                                                                                                                       // 1183\n    _proto.hide = function hide() {                                                                                    // 1184\n      var _this2 = this;                                                                                               // 1185\n                                                                                                                       // 1186\n      if (this._isTransitioning || !$$$1(this._element).hasClass(ClassName.SHOW)) {                                    // 1187\n        return;                                                                                                        // 1188\n      }                                                                                                                // 1189\n                                                                                                                       // 1190\n      var startEvent = $$$1.Event(Event.HIDE);                                                                         // 1191\n      $$$1(this._element).trigger(startEvent);                                                                         // 1192\n                                                                                                                       // 1193\n      if (startEvent.isDefaultPrevented()) {                                                                           // 1194\n        return;                                                                                                        // 1195\n      }                                                                                                                // 1196\n                                                                                                                       // 1197\n      var dimension = this._getDimension();                                                                            // 1198\n                                                                                                                       // 1199\n      this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + \"px\";                        // 1200\n      Util.reflow(this._element);                                                                                      // 1201\n      $$$1(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.SHOW);  // 1202\n                                                                                                                       // 1203\n      if (this._triggerArray.length) {                                                                                 // 1204\n        for (var i = 0; i < this._triggerArray.length; i++) {                                                          // 1205\n          var trigger = this._triggerArray[i];                                                                         // 1206\n          var selector = Util.getSelectorFromElement(trigger);                                                         // 1207\n                                                                                                                       // 1208\n          if (selector !== null) {                                                                                     // 1209\n            var $elem = $$$1(selector);                                                                                // 1210\n                                                                                                                       // 1211\n            if (!$elem.hasClass(ClassName.SHOW)) {                                                                     // 1212\n              $$$1(trigger).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);                                // 1213\n            }                                                                                                          // 1214\n          }                                                                                                            // 1215\n        }                                                                                                              // 1216\n      }                                                                                                                // 1217\n                                                                                                                       // 1218\n      this.setTransitioning(true);                                                                                     // 1219\n                                                                                                                       // 1220\n      var complete = function complete() {                                                                             // 1221\n        _this2.setTransitioning(false);                                                                                // 1222\n                                                                                                                       // 1223\n        $$$1(_this2._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);    // 1224\n      };                                                                                                               // 1225\n                                                                                                                       // 1226\n      this._element.style[dimension] = '';                                                                             // 1227\n                                                                                                                       // 1228\n      if (!Util.supportsTransitionEnd()) {                                                                             // 1229\n        complete();                                                                                                    // 1230\n        return;                                                                                                        // 1231\n      }                                                                                                                // 1232\n                                                                                                                       // 1233\n      $$$1(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);                // 1234\n    };                                                                                                                 // 1235\n                                                                                                                       // 1236\n    _proto.setTransitioning = function setTransitioning(isTransitioning) {                                             // 1237\n      this._isTransitioning = isTransitioning;                                                                         // 1238\n    };                                                                                                                 // 1239\n                                                                                                                       // 1240\n    _proto.dispose = function dispose() {                                                                              // 1241\n      $$$1.removeData(this._element, DATA_KEY);                                                                        // 1242\n      this._config = null;                                                                                             // 1243\n      this._parent = null;                                                                                             // 1244\n      this._element = null;                                                                                            // 1245\n      this._triggerArray = null;                                                                                       // 1246\n      this._isTransitioning = null;                                                                                    // 1247\n    }; // private                                                                                                      // 1248\n                                                                                                                       // 1249\n                                                                                                                       // 1250\n    _proto._getConfig = function _getConfig(config) {                                                                  // 1251\n      config = $$$1.extend({}, Default, config);                                                                       // 1252\n      config.toggle = Boolean(config.toggle); // coerce string values                                                  // 1253\n                                                                                                                       // 1254\n      Util.typeCheckConfig(NAME, config, DefaultType);                                                                 // 1255\n      return config;                                                                                                   // 1256\n    };                                                                                                                 // 1257\n                                                                                                                       // 1258\n    _proto._getDimension = function _getDimension() {                                                                  // 1259\n      var hasWidth = $$$1(this._element).hasClass(Dimension.WIDTH);                                                    // 1260\n      return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;                                                            // 1261\n    };                                                                                                                 // 1262\n                                                                                                                       // 1263\n    _proto._getParent = function _getParent() {                                                                        // 1264\n      var _this3 = this;                                                                                               // 1265\n                                                                                                                       // 1266\n      var parent = null;                                                                                               // 1267\n                                                                                                                       // 1268\n      if (Util.isElement(this._config.parent)) {                                                                       // 1269\n        parent = this._config.parent; // it's a jQuery object                                                          // 1270\n                                                                                                                       // 1271\n        if (typeof this._config.parent.jquery !== 'undefined') {                                                       // 1272\n          parent = this._config.parent[0];                                                                             // 1273\n        }                                                                                                              // 1274\n      } else {                                                                                                         // 1275\n        parent = $$$1(this._config.parent)[0];                                                                         // 1276\n      }                                                                                                                // 1277\n                                                                                                                       // 1278\n      var selector = \"[data-toggle=\\\"collapse\\\"][data-parent=\\\"\" + this._config.parent + \"\\\"]\";                        // 1279\n      $$$1(parent).find(selector).each(function (i, element) {                                                         // 1280\n        _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);                          // 1281\n      });                                                                                                              // 1282\n      return parent;                                                                                                   // 1283\n    };                                                                                                                 // 1284\n                                                                                                                       // 1285\n    _proto._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {                     // 1286\n      if (element) {                                                                                                   // 1287\n        var isOpen = $$$1(element).hasClass(ClassName.SHOW);                                                           // 1288\n                                                                                                                       // 1289\n        if (triggerArray.length) {                                                                                     // 1290\n          $$$1(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);                  // 1291\n        }                                                                                                              // 1292\n      }                                                                                                                // 1293\n    }; // static                                                                                                       // 1294\n                                                                                                                       // 1295\n                                                                                                                       // 1296\n    Collapse._getTargetFromElement = function _getTargetFromElement(element) {                                         // 1297\n      var selector = Util.getSelectorFromElement(element);                                                             // 1298\n      return selector ? $$$1(selector)[0] : null;                                                                      // 1299\n    };                                                                                                                 // 1300\n                                                                                                                       // 1301\n    Collapse._jQueryInterface = function _jQueryInterface(config) {                                                    // 1302\n      return this.each(function () {                                                                                   // 1303\n        var $this = $$$1(this);                                                                                        // 1304\n        var data = $this.data(DATA_KEY);                                                                               // 1305\n                                                                                                                       // 1306\n        var _config = $$$1.extend({}, Default, $this.data(), typeof config === 'object' && config);                    // 1307\n                                                                                                                       // 1308\n        if (!data && _config.toggle && /show|hide/.test(config)) {                                                     // 1309\n          _config.toggle = false;                                                                                      // 1310\n        }                                                                                                              // 1311\n                                                                                                                       // 1312\n        if (!data) {                                                                                                   // 1313\n          data = new Collapse(this, _config);                                                                          // 1314\n          $this.data(DATA_KEY, data);                                                                                  // 1315\n        }                                                                                                              // 1316\n                                                                                                                       // 1317\n        if (typeof config === 'string') {                                                                              // 1318\n          if (typeof data[config] === 'undefined') {                                                                   // 1319\n            throw new Error(\"No method named \\\"\" + config + \"\\\"\");                                                     // 1320\n          }                                                                                                            // 1321\n                                                                                                                       // 1322\n          data[config]();                                                                                              // 1323\n        }                                                                                                              // 1324\n      });                                                                                                              // 1325\n    };                                                                                                                 // 1326\n                                                                                                                       // 1327\n    createClass(Collapse, null, [{                                                                                     // 1328\n      key: \"VERSION\",                                                                                                  // 1329\n      get: function get() {                                                                                            // 1330\n        return VERSION;                                                                                                // 1331\n      }                                                                                                                // 1332\n    }, {                                                                                                               // 1333\n      key: \"Default\",                                                                                                  // 1334\n      get: function get() {                                                                                            // 1335\n        return Default;                                                                                                // 1336\n      }                                                                                                                // 1337\n    }]);                                                                                                               // 1338\n    return Collapse;                                                                                                   // 1339\n  }();                                                                                                                 // 1340\n  /**                                                                                                                  // 1341\n   * ------------------------------------------------------------------------                                          // 1342\n   * Data Api implementation                                                                                           // 1343\n   * ------------------------------------------------------------------------                                          // 1344\n   */                                                                                                                  // 1345\n                                                                                                                       // 1346\n                                                                                                                       // 1347\n  $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {                                     // 1348\n    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element                  // 1349\n    if (event.currentTarget.tagName === 'A') {                                                                         // 1350\n      event.preventDefault();                                                                                          // 1351\n    }                                                                                                                  // 1352\n                                                                                                                       // 1353\n    var $trigger = $$$1(this);                                                                                         // 1354\n    var selector = Util.getSelectorFromElement(this);                                                                  // 1355\n    $$$1(selector).each(function () {                                                                                  // 1356\n      var $target = $$$1(this);                                                                                        // 1357\n      var data = $target.data(DATA_KEY);                                                                               // 1358\n      var config = data ? 'toggle' : $trigger.data();                                                                  // 1359\n                                                                                                                       // 1360\n      Collapse._jQueryInterface.call($target, config);                                                                 // 1361\n    });                                                                                                                // 1362\n  });                                                                                                                  // 1363\n  /**                                                                                                                  // 1364\n   * ------------------------------------------------------------------------                                          // 1365\n   * jQuery                                                                                                            // 1366\n   * ------------------------------------------------------------------------                                          // 1367\n   */                                                                                                                  // 1368\n                                                                                                                       // 1369\n  $$$1.fn[NAME] = Collapse._jQueryInterface;                                                                           // 1370\n  $$$1.fn[NAME].Constructor = Collapse;                                                                                // 1371\n                                                                                                                       // 1372\n  $$$1.fn[NAME].noConflict = function () {                                                                             // 1373\n    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;                                                                                // 1374\n    return Collapse._jQueryInterface;                                                                                  // 1375\n  };                                                                                                                   // 1376\n                                                                                                                       // 1377\n  return Collapse;                                                                                                     // 1378\n}($);                                                                                                                  // 1379\n                                                                                                                       // 1380\n/**                                                                                                                    // 1381\n * --------------------------------------------------------------------------                                          // 1382\n * Bootstrap (v4.0.0-beta.2): dropdown.js                                                                              // 1383\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 1384\n * --------------------------------------------------------------------------                                          // 1385\n */                                                                                                                    // 1386\n                                                                                                                       // 1387\nvar Dropdown = function ($$$1) {                                                                                       // 1388\n  /**                                                                                                                  // 1389\n   * ------------------------------------------------------------------------                                          // 1390\n   * Constants                                                                                                         // 1391\n   * ------------------------------------------------------------------------                                          // 1392\n   */                                                                                                                  // 1393\n  var NAME = 'dropdown';                                                                                               // 1394\n  var VERSION = '4.0.0-beta.2';                                                                                        // 1395\n  var DATA_KEY = 'bs.dropdown';                                                                                        // 1396\n  var EVENT_KEY = \".\" + DATA_KEY;                                                                                      // 1397\n  var DATA_API_KEY = '.data-api';                                                                                      // 1398\n  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];                                                                              // 1399\n  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key                                           // 1400\n                                                                                                                       // 1401\n  var SPACE_KEYCODE = 32; // KeyboardEvent.which value for space key                                                   // 1402\n                                                                                                                       // 1403\n  var TAB_KEYCODE = 9; // KeyboardEvent.which value for tab key                                                        // 1404\n                                                                                                                       // 1405\n  var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key                                             // 1406\n                                                                                                                       // 1407\n  var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key                                         // 1408\n                                                                                                                       // 1409\n  var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)     // 1410\n                                                                                                                       // 1411\n  var REGEXP_KEYDOWN = new RegExp(ARROW_UP_KEYCODE + \"|\" + ARROW_DOWN_KEYCODE + \"|\" + ESCAPE_KEYCODE);                 // 1412\n  var Event = {                                                                                                        // 1413\n    HIDE: \"hide\" + EVENT_KEY,                                                                                          // 1414\n    HIDDEN: \"hidden\" + EVENT_KEY,                                                                                      // 1415\n    SHOW: \"show\" + EVENT_KEY,                                                                                          // 1416\n    SHOWN: \"shown\" + EVENT_KEY,                                                                                        // 1417\n    CLICK: \"click\" + EVENT_KEY,                                                                                        // 1418\n    CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY,                                                                // 1419\n    KEYDOWN_DATA_API: \"keydown\" + EVENT_KEY + DATA_API_KEY,                                                            // 1420\n    KEYUP_DATA_API: \"keyup\" + EVENT_KEY + DATA_API_KEY                                                                 // 1421\n  };                                                                                                                   // 1422\n  var ClassName = {                                                                                                    // 1423\n    DISABLED: 'disabled',                                                                                              // 1424\n    SHOW: 'show',                                                                                                      // 1425\n    DROPUP: 'dropup',                                                                                                  // 1426\n    DROPRIGHT: 'dropright',                                                                                            // 1427\n    DROPLEFT: 'dropleft',                                                                                              // 1428\n    MENURIGHT: 'dropdown-menu-right',                                                                                  // 1429\n    MENULEFT: 'dropdown-menu-left'                                                                                     // 1430\n  };                                                                                                                   // 1431\n  var Selector = {                                                                                                     // 1432\n    DATA_TOGGLE: '[data-toggle=\"dropdown\"]',                                                                           // 1433\n    FORM_CHILD: '.dropdown form',                                                                                      // 1434\n    MENU: '.dropdown-menu',                                                                                            // 1435\n    NAVBAR_NAV: '.navbar-nav',                                                                                         // 1436\n    VISIBLE_ITEMS: '.dropdown-menu .dropdown-item:not(.disabled)'                                                      // 1437\n  };                                                                                                                   // 1438\n  var AttachmentMap = {                                                                                                // 1439\n    TOP: 'top-start',                                                                                                  // 1440\n    TOPEND: 'top-end',                                                                                                 // 1441\n    BOTTOM: 'bottom-start',                                                                                            // 1442\n    BOTTOMEND: 'bottom-end',                                                                                           // 1443\n    RIGHT: 'right-start',                                                                                              // 1444\n    RIGHTEND: 'right-end',                                                                                             // 1445\n    LEFT: 'left-start',                                                                                                // 1446\n    LEFTEND: 'left-end'                                                                                                // 1447\n  };                                                                                                                   // 1448\n  var Default = {                                                                                                      // 1449\n    offset: 0,                                                                                                         // 1450\n    flip: true                                                                                                         // 1451\n  };                                                                                                                   // 1452\n  var DefaultType = {                                                                                                  // 1453\n    offset: '(number|string|function)',                                                                                // 1454\n    flip: 'boolean'                                                                                                    // 1455\n    /**                                                                                                                // 1456\n     * ------------------------------------------------------------------------                                        // 1457\n     * Class Definition                                                                                                // 1458\n     * ------------------------------------------------------------------------                                        // 1459\n     */                                                                                                                // 1460\n                                                                                                                       // 1461\n  };                                                                                                                   // 1462\n                                                                                                                       // 1463\n  var Dropdown =                                                                                                       // 1464\n  /*#__PURE__*/                                                                                                        // 1465\n  function () {                                                                                                        // 1466\n    function Dropdown(element, config) {                                                                               // 1467\n      this._element = element;                                                                                         // 1468\n      this._popper = null;                                                                                             // 1469\n      this._config = this._getConfig(config);                                                                          // 1470\n      this._menu = this._getMenuElement();                                                                             // 1471\n      this._inNavbar = this._detectNavbar();                                                                           // 1472\n                                                                                                                       // 1473\n      this._addEventListeners();                                                                                       // 1474\n    } // getters                                                                                                       // 1475\n                                                                                                                       // 1476\n                                                                                                                       // 1477\n    var _proto = Dropdown.prototype;                                                                                   // 1478\n                                                                                                                       // 1479\n    // public                                                                                                          // 1480\n    _proto.toggle = function toggle() {                                                                                // 1481\n      if (this._element.disabled || $$$1(this._element).hasClass(ClassName.DISABLED)) {                                // 1482\n        return;                                                                                                        // 1483\n      }                                                                                                                // 1484\n                                                                                                                       // 1485\n      var parent = Dropdown._getParentFromElement(this._element);                                                      // 1486\n                                                                                                                       // 1487\n      var isActive = $$$1(this._menu).hasClass(ClassName.SHOW);                                                        // 1488\n                                                                                                                       // 1489\n      Dropdown._clearMenus();                                                                                          // 1490\n                                                                                                                       // 1491\n      if (isActive) {                                                                                                  // 1492\n        return;                                                                                                        // 1493\n      }                                                                                                                // 1494\n                                                                                                                       // 1495\n      var relatedTarget = {                                                                                            // 1496\n        relatedTarget: this._element                                                                                   // 1497\n      };                                                                                                               // 1498\n      var showEvent = $$$1.Event(Event.SHOW, relatedTarget);                                                           // 1499\n      $$$1(parent).trigger(showEvent);                                                                                 // 1500\n                                                                                                                       // 1501\n      if (showEvent.isDefaultPrevented()) {                                                                            // 1502\n        return;                                                                                                        // 1503\n      } // Disable totally Popper.js for Dropdown in Navbar                                                            // 1504\n                                                                                                                       // 1505\n                                                                                                                       // 1506\n      if (!this._inNavbar) {                                                                                           // 1507\n        /**                                                                                                            // 1508\n         * Check for Popper dependency                                                                                 // 1509\n         * Popper - https://popper.js.org                                                                              // 1510\n         */                                                                                                            // 1511\n        if (typeof Popper === 'undefined') {                                                                           // 1512\n          throw new Error('Bootstrap dropdown require Popper.js (https://popper.js.org)');                             // 1513\n        }                                                                                                              // 1514\n                                                                                                                       // 1515\n        var element = this._element; // for dropup with alignment we use the parent as popper container                // 1516\n                                                                                                                       // 1517\n        if ($$$1(parent).hasClass(ClassName.DROPUP)) {                                                                 // 1518\n          if ($$$1(this._menu).hasClass(ClassName.MENULEFT) || $$$1(this._menu).hasClass(ClassName.MENURIGHT)) {       // 1519\n            element = parent;                                                                                          // 1520\n          }                                                                                                            // 1521\n        }                                                                                                              // 1522\n                                                                                                                       // 1523\n        this._popper = new Popper(element, this._menu, this._getPopperConfig());                                       // 1524\n      } // if this is a touch-enabled device we add extra                                                              // 1525\n      // empty mouseover listeners to the body's immediate children;                                                   // 1526\n      // only needed because of broken event delegation on iOS                                                         // 1527\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html                                         // 1528\n                                                                                                                       // 1529\n                                                                                                                       // 1530\n      if ('ontouchstart' in document.documentElement && !$$$1(parent).closest(Selector.NAVBAR_NAV).length) {           // 1531\n        $$$1('body').children().on('mouseover', null, $$$1.noop);                                                      // 1532\n      }                                                                                                                // 1533\n                                                                                                                       // 1534\n      this._element.focus();                                                                                           // 1535\n                                                                                                                       // 1536\n      this._element.setAttribute('aria-expanded', true);                                                               // 1537\n                                                                                                                       // 1538\n      $$$1(this._menu).toggleClass(ClassName.SHOW);                                                                    // 1539\n      $$$1(parent).toggleClass(ClassName.SHOW).trigger($$$1.Event(Event.SHOWN, relatedTarget));                        // 1540\n    };                                                                                                                 // 1541\n                                                                                                                       // 1542\n    _proto.dispose = function dispose() {                                                                              // 1543\n      $$$1.removeData(this._element, DATA_KEY);                                                                        // 1544\n      $$$1(this._element).off(EVENT_KEY);                                                                              // 1545\n      this._element = null;                                                                                            // 1546\n      this._menu = null;                                                                                               // 1547\n                                                                                                                       // 1548\n      if (this._popper !== null) {                                                                                     // 1549\n        this._popper.destroy();                                                                                        // 1550\n                                                                                                                       // 1551\n        this._popper = null;                                                                                           // 1552\n      }                                                                                                                // 1553\n    };                                                                                                                 // 1554\n                                                                                                                       // 1555\n    _proto.update = function update() {                                                                                // 1556\n      this._inNavbar = this._detectNavbar();                                                                           // 1557\n                                                                                                                       // 1558\n      if (this._popper !== null) {                                                                                     // 1559\n        this._popper.scheduleUpdate();                                                                                 // 1560\n      }                                                                                                                // 1561\n    }; // private                                                                                                      // 1562\n                                                                                                                       // 1563\n                                                                                                                       // 1564\n    _proto._addEventListeners = function _addEventListeners() {                                                        // 1565\n      var _this = this;                                                                                                // 1566\n                                                                                                                       // 1567\n      $$$1(this._element).on(Event.CLICK, function (event) {                                                           // 1568\n        event.preventDefault();                                                                                        // 1569\n        event.stopPropagation();                                                                                       // 1570\n                                                                                                                       // 1571\n        _this.toggle();                                                                                                // 1572\n      });                                                                                                              // 1573\n    };                                                                                                                 // 1574\n                                                                                                                       // 1575\n    _proto._getConfig = function _getConfig(config) {                                                                  // 1576\n      config = $$$1.extend({}, this.constructor.Default, $$$1(this._element).data(), config);                          // 1577\n      Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);                                                // 1578\n      return config;                                                                                                   // 1579\n    };                                                                                                                 // 1580\n                                                                                                                       // 1581\n    _proto._getMenuElement = function _getMenuElement() {                                                              // 1582\n      if (!this._menu) {                                                                                               // 1583\n        var parent = Dropdown._getParentFromElement(this._element);                                                    // 1584\n                                                                                                                       // 1585\n        this._menu = $$$1(parent).find(Selector.MENU)[0];                                                              // 1586\n      }                                                                                                                // 1587\n                                                                                                                       // 1588\n      return this._menu;                                                                                               // 1589\n    };                                                                                                                 // 1590\n                                                                                                                       // 1591\n    _proto._getPlacement = function _getPlacement() {                                                                  // 1592\n      var $parentDropdown = $$$1(this._element).parent();                                                              // 1593\n      var placement = AttachmentMap.BOTTOM; // Handle dropup                                                           // 1594\n                                                                                                                       // 1595\n      if ($parentDropdown.hasClass(ClassName.DROPUP)) {                                                                // 1596\n        placement = AttachmentMap.TOP;                                                                                 // 1597\n                                                                                                                       // 1598\n        if ($$$1(this._menu).hasClass(ClassName.MENURIGHT)) {                                                          // 1599\n          placement = AttachmentMap.TOPEND;                                                                            // 1600\n        }                                                                                                              // 1601\n      } else if ($parentDropdown.hasClass(ClassName.DROPRIGHT)) {                                                      // 1602\n        placement = AttachmentMap.RIGHT;                                                                               // 1603\n      } else if ($parentDropdown.hasClass(ClassName.DROPLEFT)) {                                                       // 1604\n        placement = AttachmentMap.LEFT;                                                                                // 1605\n      } else if ($$$1(this._menu).hasClass(ClassName.MENURIGHT)) {                                                     // 1606\n        placement = AttachmentMap.BOTTOMEND;                                                                           // 1607\n      }                                                                                                                // 1608\n                                                                                                                       // 1609\n      return placement;                                                                                                // 1610\n    };                                                                                                                 // 1611\n                                                                                                                       // 1612\n    _proto._detectNavbar = function _detectNavbar() {                                                                  // 1613\n      return $$$1(this._element).closest('.navbar').length > 0;                                                        // 1614\n    };                                                                                                                 // 1615\n                                                                                                                       // 1616\n    _proto._getPopperConfig = function _getPopperConfig() {                                                            // 1617\n      var _this2 = this;                                                                                               // 1618\n                                                                                                                       // 1619\n      var offsetConf = {};                                                                                             // 1620\n                                                                                                                       // 1621\n      if (typeof this._config.offset === 'function') {                                                                 // 1622\n        offsetConf.fn = function (data) {                                                                              // 1623\n          data.offsets = $$$1.extend({}, data.offsets, _this2._config.offset(data.offsets) || {});                     // 1624\n          return data;                                                                                                 // 1625\n        };                                                                                                             // 1626\n      } else {                                                                                                         // 1627\n        offsetConf.offset = this._config.offset;                                                                       // 1628\n      }                                                                                                                // 1629\n                                                                                                                       // 1630\n      var popperConfig = {                                                                                             // 1631\n        placement: this._getPlacement(),                                                                               // 1632\n        modifiers: {                                                                                                   // 1633\n          offset: offsetConf,                                                                                          // 1634\n          flip: {                                                                                                      // 1635\n            enabled: this._config.flip                                                                                 // 1636\n          }                                                                                                            // 1637\n        }                                                                                                              // 1638\n      };                                                                                                               // 1639\n      return popperConfig;                                                                                             // 1640\n    }; // static                                                                                                       // 1641\n                                                                                                                       // 1642\n                                                                                                                       // 1643\n    Dropdown._jQueryInterface = function _jQueryInterface(config) {                                                    // 1644\n      return this.each(function () {                                                                                   // 1645\n        var data = $$$1(this).data(DATA_KEY);                                                                          // 1646\n                                                                                                                       // 1647\n        var _config = typeof config === 'object' ? config : null;                                                      // 1648\n                                                                                                                       // 1649\n        if (!data) {                                                                                                   // 1650\n          data = new Dropdown(this, _config);                                                                          // 1651\n          $$$1(this).data(DATA_KEY, data);                                                                             // 1652\n        }                                                                                                              // 1653\n                                                                                                                       // 1654\n        if (typeof config === 'string') {                                                                              // 1655\n          if (typeof data[config] === 'undefined') {                                                                   // 1656\n            throw new Error(\"No method named \\\"\" + config + \"\\\"\");                                                     // 1657\n          }                                                                                                            // 1658\n                                                                                                                       // 1659\n          data[config]();                                                                                              // 1660\n        }                                                                                                              // 1661\n      });                                                                                                              // 1662\n    };                                                                                                                 // 1663\n                                                                                                                       // 1664\n    Dropdown._clearMenus = function _clearMenus(event) {                                                               // 1665\n      if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH || event.type === 'keyup' && event.which !== TAB_KEYCODE)) {\n        return;                                                                                                        // 1667\n      }                                                                                                                // 1668\n                                                                                                                       // 1669\n      var toggles = $$$1.makeArray($$$1(Selector.DATA_TOGGLE));                                                        // 1670\n                                                                                                                       // 1671\n      for (var i = 0; i < toggles.length; i++) {                                                                       // 1672\n        var parent = Dropdown._getParentFromElement(toggles[i]);                                                       // 1673\n                                                                                                                       // 1674\n        var context = $$$1(toggles[i]).data(DATA_KEY);                                                                 // 1675\n        var relatedTarget = {                                                                                          // 1676\n          relatedTarget: toggles[i]                                                                                    // 1677\n        };                                                                                                             // 1678\n                                                                                                                       // 1679\n        if (!context) {                                                                                                // 1680\n          continue;                                                                                                    // 1681\n        }                                                                                                              // 1682\n                                                                                                                       // 1683\n        var dropdownMenu = context._menu;                                                                              // 1684\n                                                                                                                       // 1685\n        if (!$$$1(parent).hasClass(ClassName.SHOW)) {                                                                  // 1686\n          continue;                                                                                                    // 1687\n        }                                                                                                              // 1688\n                                                                                                                       // 1689\n        if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) && $$$1.contains(parent, event.target)) {\n          continue;                                                                                                    // 1691\n        }                                                                                                              // 1692\n                                                                                                                       // 1693\n        var hideEvent = $$$1.Event(Event.HIDE, relatedTarget);                                                         // 1694\n        $$$1(parent).trigger(hideEvent);                                                                               // 1695\n                                                                                                                       // 1696\n        if (hideEvent.isDefaultPrevented()) {                                                                          // 1697\n          continue;                                                                                                    // 1698\n        } // if this is a touch-enabled device we remove the extra                                                     // 1699\n        // empty mouseover listeners we added for iOS support                                                          // 1700\n                                                                                                                       // 1701\n                                                                                                                       // 1702\n        if ('ontouchstart' in document.documentElement) {                                                              // 1703\n          $$$1('body').children().off('mouseover', null, $$$1.noop);                                                   // 1704\n        }                                                                                                              // 1705\n                                                                                                                       // 1706\n        toggles[i].setAttribute('aria-expanded', 'false');                                                             // 1707\n        $$$1(dropdownMenu).removeClass(ClassName.SHOW);                                                                // 1708\n        $$$1(parent).removeClass(ClassName.SHOW).trigger($$$1.Event(Event.HIDDEN, relatedTarget));                     // 1709\n      }                                                                                                                // 1710\n    };                                                                                                                 // 1711\n                                                                                                                       // 1712\n    Dropdown._getParentFromElement = function _getParentFromElement(element) {                                         // 1713\n      var parent;                                                                                                      // 1714\n      var selector = Util.getSelectorFromElement(element);                                                             // 1715\n                                                                                                                       // 1716\n      if (selector) {                                                                                                  // 1717\n        parent = $$$1(selector)[0];                                                                                    // 1718\n      }                                                                                                                // 1719\n                                                                                                                       // 1720\n      return parent || element.parentNode;                                                                             // 1721\n    };                                                                                                                 // 1722\n                                                                                                                       // 1723\n    Dropdown._dataApiKeydownHandler = function _dataApiKeydownHandler(event) {                                         // 1724\n      // If not input/textarea:                                                                                        // 1725\n      //  - And not a key in REGEXP_KEYDOWN => not a dropdown command                                                  // 1726\n      // If input/textarea:                                                                                            // 1727\n      //  - If space key => not a dropdown command                                                                     // 1728\n      //  - If key is other than escape                                                                                // 1729\n      //    - If key is not up or down => not a dropdown command                                                       // 1730\n      //    - If trigger inside the menu => not a dropdown command                                                     // 1731\n      if (/input|textarea/i.test(event.target.tagName) ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE && (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE || $$$1(event.target).closest(Selector.MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {\n        return;                                                                                                        // 1733\n      }                                                                                                                // 1734\n                                                                                                                       // 1735\n      event.preventDefault();                                                                                          // 1736\n      event.stopPropagation();                                                                                         // 1737\n                                                                                                                       // 1738\n      if (this.disabled || $$$1(this).hasClass(ClassName.DISABLED)) {                                                  // 1739\n        return;                                                                                                        // 1740\n      }                                                                                                                // 1741\n                                                                                                                       // 1742\n      var parent = Dropdown._getParentFromElement(this);                                                               // 1743\n                                                                                                                       // 1744\n      var isActive = $$$1(parent).hasClass(ClassName.SHOW);                                                            // 1745\n                                                                                                                       // 1746\n      if (!isActive && (event.which !== ESCAPE_KEYCODE || event.which !== SPACE_KEYCODE) || isActive && (event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE)) {\n        if (event.which === ESCAPE_KEYCODE) {                                                                          // 1748\n          var toggle = $$$1(parent).find(Selector.DATA_TOGGLE)[0];                                                     // 1749\n          $$$1(toggle).trigger('focus');                                                                               // 1750\n        }                                                                                                              // 1751\n                                                                                                                       // 1752\n        $$$1(this).trigger('click');                                                                                   // 1753\n        return;                                                                                                        // 1754\n      }                                                                                                                // 1755\n                                                                                                                       // 1756\n      var items = $$$1(parent).find(Selector.VISIBLE_ITEMS).get();                                                     // 1757\n                                                                                                                       // 1758\n      if (!items.length) {                                                                                             // 1759\n        return;                                                                                                        // 1760\n      }                                                                                                                // 1761\n                                                                                                                       // 1762\n      var index = items.indexOf(event.target);                                                                         // 1763\n                                                                                                                       // 1764\n      if (event.which === ARROW_UP_KEYCODE && index > 0) {                                                             // 1765\n        // up                                                                                                          // 1766\n        index--;                                                                                                       // 1767\n      }                                                                                                                // 1768\n                                                                                                                       // 1769\n      if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {                                            // 1770\n        // down                                                                                                        // 1771\n        index++;                                                                                                       // 1772\n      }                                                                                                                // 1773\n                                                                                                                       // 1774\n      if (index < 0) {                                                                                                 // 1775\n        index = 0;                                                                                                     // 1776\n      }                                                                                                                // 1777\n                                                                                                                       // 1778\n      items[index].focus();                                                                                            // 1779\n    };                                                                                                                 // 1780\n                                                                                                                       // 1781\n    createClass(Dropdown, null, [{                                                                                     // 1782\n      key: \"VERSION\",                                                                                                  // 1783\n      get: function get() {                                                                                            // 1784\n        return VERSION;                                                                                                // 1785\n      }                                                                                                                // 1786\n    }, {                                                                                                               // 1787\n      key: \"Default\",                                                                                                  // 1788\n      get: function get() {                                                                                            // 1789\n        return Default;                                                                                                // 1790\n      }                                                                                                                // 1791\n    }, {                                                                                                               // 1792\n      key: \"DefaultType\",                                                                                              // 1793\n      get: function get() {                                                                                            // 1794\n        return DefaultType;                                                                                            // 1795\n      }                                                                                                                // 1796\n    }]);                                                                                                               // 1797\n    return Dropdown;                                                                                                   // 1798\n  }();                                                                                                                 // 1799\n  /**                                                                                                                  // 1800\n   * ------------------------------------------------------------------------                                          // 1801\n   * Data Api implementation                                                                                           // 1802\n   * ------------------------------------------------------------------------                                          // 1803\n   */                                                                                                                  // 1804\n                                                                                                                       // 1805\n                                                                                                                       // 1806\n  $$$1(document).on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.MENU, Dropdown._dataApiKeydownHandler).on(Event.CLICK_DATA_API + \" \" + Event.KEYUP_DATA_API, Dropdown._clearMenus).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n    event.preventDefault();                                                                                            // 1808\n    event.stopPropagation();                                                                                           // 1809\n                                                                                                                       // 1810\n    Dropdown._jQueryInterface.call($$$1(this), 'toggle');                                                              // 1811\n  }).on(Event.CLICK_DATA_API, Selector.FORM_CHILD, function (e) {                                                      // 1812\n    e.stopPropagation();                                                                                               // 1813\n  });                                                                                                                  // 1814\n  /**                                                                                                                  // 1815\n   * ------------------------------------------------------------------------                                          // 1816\n   * jQuery                                                                                                            // 1817\n   * ------------------------------------------------------------------------                                          // 1818\n   */                                                                                                                  // 1819\n                                                                                                                       // 1820\n  $$$1.fn[NAME] = Dropdown._jQueryInterface;                                                                           // 1821\n  $$$1.fn[NAME].Constructor = Dropdown;                                                                                // 1822\n                                                                                                                       // 1823\n  $$$1.fn[NAME].noConflict = function () {                                                                             // 1824\n    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;                                                                                // 1825\n    return Dropdown._jQueryInterface;                                                                                  // 1826\n  };                                                                                                                   // 1827\n                                                                                                                       // 1828\n  return Dropdown;                                                                                                     // 1829\n}($, Popper);                                                                                                          // 1830\n                                                                                                                       // 1831\n/**                                                                                                                    // 1832\n * --------------------------------------------------------------------------                                          // 1833\n * Bootstrap (v4.0.0-beta.2): modal.js                                                                                 // 1834\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 1835\n * --------------------------------------------------------------------------                                          // 1836\n */                                                                                                                    // 1837\n                                                                                                                       // 1838\nvar Modal = function ($$$1) {                                                                                          // 1839\n  /**                                                                                                                  // 1840\n   * ------------------------------------------------------------------------                                          // 1841\n   * Constants                                                                                                         // 1842\n   * ------------------------------------------------------------------------                                          // 1843\n   */                                                                                                                  // 1844\n  var NAME = 'modal';                                                                                                  // 1845\n  var VERSION = '4.0.0-beta.2';                                                                                        // 1846\n  var DATA_KEY = 'bs.modal';                                                                                           // 1847\n  var EVENT_KEY = \".\" + DATA_KEY;                                                                                      // 1848\n  var DATA_API_KEY = '.data-api';                                                                                      // 1849\n  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];                                                                              // 1850\n  var TRANSITION_DURATION = 300;                                                                                       // 1851\n  var BACKDROP_TRANSITION_DURATION = 150;                                                                              // 1852\n  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key                                           // 1853\n                                                                                                                       // 1854\n  var Default = {                                                                                                      // 1855\n    backdrop: true,                                                                                                    // 1856\n    keyboard: true,                                                                                                    // 1857\n    focus: true,                                                                                                       // 1858\n    show: true                                                                                                         // 1859\n  };                                                                                                                   // 1860\n  var DefaultType = {                                                                                                  // 1861\n    backdrop: '(boolean|string)',                                                                                      // 1862\n    keyboard: 'boolean',                                                                                               // 1863\n    focus: 'boolean',                                                                                                  // 1864\n    show: 'boolean'                                                                                                    // 1865\n  };                                                                                                                   // 1866\n  var Event = {                                                                                                        // 1867\n    HIDE: \"hide\" + EVENT_KEY,                                                                                          // 1868\n    HIDDEN: \"hidden\" + EVENT_KEY,                                                                                      // 1869\n    SHOW: \"show\" + EVENT_KEY,                                                                                          // 1870\n    SHOWN: \"shown\" + EVENT_KEY,                                                                                        // 1871\n    FOCUSIN: \"focusin\" + EVENT_KEY,                                                                                    // 1872\n    RESIZE: \"resize\" + EVENT_KEY,                                                                                      // 1873\n    CLICK_DISMISS: \"click.dismiss\" + EVENT_KEY,                                                                        // 1874\n    KEYDOWN_DISMISS: \"keydown.dismiss\" + EVENT_KEY,                                                                    // 1875\n    MOUSEUP_DISMISS: \"mouseup.dismiss\" + EVENT_KEY,                                                                    // 1876\n    MOUSEDOWN_DISMISS: \"mousedown.dismiss\" + EVENT_KEY,                                                                // 1877\n    CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY                                                                 // 1878\n  };                                                                                                                   // 1879\n  var ClassName = {                                                                                                    // 1880\n    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',                                                                     // 1881\n    BACKDROP: 'modal-backdrop',                                                                                        // 1882\n    OPEN: 'modal-open',                                                                                                // 1883\n    FADE: 'fade',                                                                                                      // 1884\n    SHOW: 'show'                                                                                                       // 1885\n  };                                                                                                                   // 1886\n  var Selector = {                                                                                                     // 1887\n    DIALOG: '.modal-dialog',                                                                                           // 1888\n    DATA_TOGGLE: '[data-toggle=\"modal\"]',                                                                              // 1889\n    DATA_DISMISS: '[data-dismiss=\"modal\"]',                                                                            // 1890\n    FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',                                                // 1891\n    STICKY_CONTENT: '.sticky-top',                                                                                     // 1892\n    NAVBAR_TOGGLER: '.navbar-toggler'                                                                                  // 1893\n    /**                                                                                                                // 1894\n     * ------------------------------------------------------------------------                                        // 1895\n     * Class Definition                                                                                                // 1896\n     * ------------------------------------------------------------------------                                        // 1897\n     */                                                                                                                // 1898\n                                                                                                                       // 1899\n  };                                                                                                                   // 1900\n                                                                                                                       // 1901\n  var Modal =                                                                                                          // 1902\n  /*#__PURE__*/                                                                                                        // 1903\n  function () {                                                                                                        // 1904\n    function Modal(element, config) {                                                                                  // 1905\n      this._config = this._getConfig(config);                                                                          // 1906\n      this._element = element;                                                                                         // 1907\n      this._dialog = $$$1(element).find(Selector.DIALOG)[0];                                                           // 1908\n      this._backdrop = null;                                                                                           // 1909\n      this._isShown = false;                                                                                           // 1910\n      this._isBodyOverflowing = false;                                                                                 // 1911\n      this._ignoreBackdropClick = false;                                                                               // 1912\n      this._originalBodyPadding = 0;                                                                                   // 1913\n      this._scrollbarWidth = 0;                                                                                        // 1914\n    } // getters                                                                                                       // 1915\n                                                                                                                       // 1916\n                                                                                                                       // 1917\n    var _proto = Modal.prototype;                                                                                      // 1918\n                                                                                                                       // 1919\n    // public                                                                                                          // 1920\n    _proto.toggle = function toggle(relatedTarget) {                                                                   // 1921\n      return this._isShown ? this.hide() : this.show(relatedTarget);                                                   // 1922\n    };                                                                                                                 // 1923\n                                                                                                                       // 1924\n    _proto.show = function show(relatedTarget) {                                                                       // 1925\n      var _this = this;                                                                                                // 1926\n                                                                                                                       // 1927\n      if (this._isTransitioning || this._isShown) {                                                                    // 1928\n        return;                                                                                                        // 1929\n      }                                                                                                                // 1930\n                                                                                                                       // 1931\n      if (Util.supportsTransitionEnd() && $$$1(this._element).hasClass(ClassName.FADE)) {                              // 1932\n        this._isTransitioning = true;                                                                                  // 1933\n      }                                                                                                                // 1934\n                                                                                                                       // 1935\n      var showEvent = $$$1.Event(Event.SHOW, {                                                                         // 1936\n        relatedTarget: relatedTarget                                                                                   // 1937\n      });                                                                                                              // 1938\n      $$$1(this._element).trigger(showEvent);                                                                          // 1939\n                                                                                                                       // 1940\n      if (this._isShown || showEvent.isDefaultPrevented()) {                                                           // 1941\n        return;                                                                                                        // 1942\n      }                                                                                                                // 1943\n                                                                                                                       // 1944\n      this._isShown = true;                                                                                            // 1945\n                                                                                                                       // 1946\n      this._checkScrollbar();                                                                                          // 1947\n                                                                                                                       // 1948\n      this._setScrollbar();                                                                                            // 1949\n                                                                                                                       // 1950\n      this._adjustDialog();                                                                                            // 1951\n                                                                                                                       // 1952\n      $$$1(document.body).addClass(ClassName.OPEN);                                                                    // 1953\n                                                                                                                       // 1954\n      this._setEscapeEvent();                                                                                          // 1955\n                                                                                                                       // 1956\n      this._setResizeEvent();                                                                                          // 1957\n                                                                                                                       // 1958\n      $$$1(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, function (event) {                            // 1959\n        return _this.hide(event);                                                                                      // 1960\n      });                                                                                                              // 1961\n      $$$1(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {                                                     // 1962\n        $$$1(_this._element).one(Event.MOUSEUP_DISMISS, function (event) {                                             // 1963\n          if ($$$1(event.target).is(_this._element)) {                                                                 // 1964\n            _this._ignoreBackdropClick = true;                                                                         // 1965\n          }                                                                                                            // 1966\n        });                                                                                                            // 1967\n      });                                                                                                              // 1968\n                                                                                                                       // 1969\n      this._showBackdrop(function () {                                                                                 // 1970\n        return _this._showElement(relatedTarget);                                                                      // 1971\n      });                                                                                                              // 1972\n    };                                                                                                                 // 1973\n                                                                                                                       // 1974\n    _proto.hide = function hide(event) {                                                                               // 1975\n      var _this2 = this;                                                                                               // 1976\n                                                                                                                       // 1977\n      if (event) {                                                                                                     // 1978\n        event.preventDefault();                                                                                        // 1979\n      }                                                                                                                // 1980\n                                                                                                                       // 1981\n      if (this._isTransitioning || !this._isShown) {                                                                   // 1982\n        return;                                                                                                        // 1983\n      }                                                                                                                // 1984\n                                                                                                                       // 1985\n      var hideEvent = $$$1.Event(Event.HIDE);                                                                          // 1986\n      $$$1(this._element).trigger(hideEvent);                                                                          // 1987\n                                                                                                                       // 1988\n      if (!this._isShown || hideEvent.isDefaultPrevented()) {                                                          // 1989\n        return;                                                                                                        // 1990\n      }                                                                                                                // 1991\n                                                                                                                       // 1992\n      this._isShown = false;                                                                                           // 1993\n      var transition = Util.supportsTransitionEnd() && $$$1(this._element).hasClass(ClassName.FADE);                   // 1994\n                                                                                                                       // 1995\n      if (transition) {                                                                                                // 1996\n        this._isTransitioning = true;                                                                                  // 1997\n      }                                                                                                                // 1998\n                                                                                                                       // 1999\n      this._setEscapeEvent();                                                                                          // 2000\n                                                                                                                       // 2001\n      this._setResizeEvent();                                                                                          // 2002\n                                                                                                                       // 2003\n      $$$1(document).off(Event.FOCUSIN);                                                                               // 2004\n      $$$1(this._element).removeClass(ClassName.SHOW);                                                                 // 2005\n      $$$1(this._element).off(Event.CLICK_DISMISS);                                                                    // 2006\n      $$$1(this._dialog).off(Event.MOUSEDOWN_DISMISS);                                                                 // 2007\n                                                                                                                       // 2008\n      if (transition) {                                                                                                // 2009\n        $$$1(this._element).one(Util.TRANSITION_END, function (event) {                                                // 2010\n          return _this2._hideModal(event);                                                                             // 2011\n        }).emulateTransitionEnd(TRANSITION_DURATION);                                                                  // 2012\n      } else {                                                                                                         // 2013\n        this._hideModal();                                                                                             // 2014\n      }                                                                                                                // 2015\n    };                                                                                                                 // 2016\n                                                                                                                       // 2017\n    _proto.dispose = function dispose() {                                                                              // 2018\n      $$$1.removeData(this._element, DATA_KEY);                                                                        // 2019\n      $$$1(window, document, this._element, this._backdrop).off(EVENT_KEY);                                            // 2020\n      this._config = null;                                                                                             // 2021\n      this._element = null;                                                                                            // 2022\n      this._dialog = null;                                                                                             // 2023\n      this._backdrop = null;                                                                                           // 2024\n      this._isShown = null;                                                                                            // 2025\n      this._isBodyOverflowing = null;                                                                                  // 2026\n      this._ignoreBackdropClick = null;                                                                                // 2027\n      this._scrollbarWidth = null;                                                                                     // 2028\n    };                                                                                                                 // 2029\n                                                                                                                       // 2030\n    _proto.handleUpdate = function handleUpdate() {                                                                    // 2031\n      this._adjustDialog();                                                                                            // 2032\n    }; // private                                                                                                      // 2033\n                                                                                                                       // 2034\n                                                                                                                       // 2035\n    _proto._getConfig = function _getConfig(config) {                                                                  // 2036\n      config = $$$1.extend({}, Default, config);                                                                       // 2037\n      Util.typeCheckConfig(NAME, config, DefaultType);                                                                 // 2038\n      return config;                                                                                                   // 2039\n    };                                                                                                                 // 2040\n                                                                                                                       // 2041\n    _proto._showElement = function _showElement(relatedTarget) {                                                       // 2042\n      var _this3 = this;                                                                                               // 2043\n                                                                                                                       // 2044\n      var transition = Util.supportsTransitionEnd() && $$$1(this._element).hasClass(ClassName.FADE);                   // 2045\n                                                                                                                       // 2046\n      if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {                      // 2047\n        // don't move modals dom position                                                                              // 2048\n        document.body.appendChild(this._element);                                                                      // 2049\n      }                                                                                                                // 2050\n                                                                                                                       // 2051\n      this._element.style.display = 'block';                                                                           // 2052\n                                                                                                                       // 2053\n      this._element.removeAttribute('aria-hidden');                                                                    // 2054\n                                                                                                                       // 2055\n      this._element.scrollTop = 0;                                                                                     // 2056\n                                                                                                                       // 2057\n      if (transition) {                                                                                                // 2058\n        Util.reflow(this._element);                                                                                    // 2059\n      }                                                                                                                // 2060\n                                                                                                                       // 2061\n      $$$1(this._element).addClass(ClassName.SHOW);                                                                    // 2062\n                                                                                                                       // 2063\n      if (this._config.focus) {                                                                                        // 2064\n        this._enforceFocus();                                                                                          // 2065\n      }                                                                                                                // 2066\n                                                                                                                       // 2067\n      var shownEvent = $$$1.Event(Event.SHOWN, {                                                                       // 2068\n        relatedTarget: relatedTarget                                                                                   // 2069\n      });                                                                                                              // 2070\n                                                                                                                       // 2071\n      var transitionComplete = function transitionComplete() {                                                         // 2072\n        if (_this3._config.focus) {                                                                                    // 2073\n          _this3._element.focus();                                                                                     // 2074\n        }                                                                                                              // 2075\n                                                                                                                       // 2076\n        _this3._isTransitioning = false;                                                                               // 2077\n        $$$1(_this3._element).trigger(shownEvent);                                                                     // 2078\n      };                                                                                                               // 2079\n                                                                                                                       // 2080\n      if (transition) {                                                                                                // 2081\n        $$$1(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(TRANSITION_DURATION);     // 2082\n      } else {                                                                                                         // 2083\n        transitionComplete();                                                                                          // 2084\n      }                                                                                                                // 2085\n    };                                                                                                                 // 2086\n                                                                                                                       // 2087\n    _proto._enforceFocus = function _enforceFocus() {                                                                  // 2088\n      var _this4 = this;                                                                                               // 2089\n                                                                                                                       // 2090\n      $$$1(document).off(Event.FOCUSIN) // guard against infinite focus loop                                           // 2091\n      .on(Event.FOCUSIN, function (event) {                                                                            // 2092\n        if (document !== event.target && _this4._element !== event.target && !$$$1(_this4._element).has(event.target).length) {\n          _this4._element.focus();                                                                                     // 2094\n        }                                                                                                              // 2095\n      });                                                                                                              // 2096\n    };                                                                                                                 // 2097\n                                                                                                                       // 2098\n    _proto._setEscapeEvent = function _setEscapeEvent() {                                                              // 2099\n      var _this5 = this;                                                                                               // 2100\n                                                                                                                       // 2101\n      if (this._isShown && this._config.keyboard) {                                                                    // 2102\n        $$$1(this._element).on(Event.KEYDOWN_DISMISS, function (event) {                                               // 2103\n          if (event.which === ESCAPE_KEYCODE) {                                                                        // 2104\n            event.preventDefault();                                                                                    // 2105\n                                                                                                                       // 2106\n            _this5.hide();                                                                                             // 2107\n          }                                                                                                            // 2108\n        });                                                                                                            // 2109\n      } else if (!this._isShown) {                                                                                     // 2110\n        $$$1(this._element).off(Event.KEYDOWN_DISMISS);                                                                // 2111\n      }                                                                                                                // 2112\n    };                                                                                                                 // 2113\n                                                                                                                       // 2114\n    _proto._setResizeEvent = function _setResizeEvent() {                                                              // 2115\n      var _this6 = this;                                                                                               // 2116\n                                                                                                                       // 2117\n      if (this._isShown) {                                                                                             // 2118\n        $$$1(window).on(Event.RESIZE, function (event) {                                                               // 2119\n          return _this6.handleUpdate(event);                                                                           // 2120\n        });                                                                                                            // 2121\n      } else {                                                                                                         // 2122\n        $$$1(window).off(Event.RESIZE);                                                                                // 2123\n      }                                                                                                                // 2124\n    };                                                                                                                 // 2125\n                                                                                                                       // 2126\n    _proto._hideModal = function _hideModal() {                                                                        // 2127\n      var _this7 = this;                                                                                               // 2128\n                                                                                                                       // 2129\n      this._element.style.display = 'none';                                                                            // 2130\n                                                                                                                       // 2131\n      this._element.setAttribute('aria-hidden', true);                                                                 // 2132\n                                                                                                                       // 2133\n      this._isTransitioning = false;                                                                                   // 2134\n                                                                                                                       // 2135\n      this._showBackdrop(function () {                                                                                 // 2136\n        $$$1(document.body).removeClass(ClassName.OPEN);                                                               // 2137\n                                                                                                                       // 2138\n        _this7._resetAdjustments();                                                                                    // 2139\n                                                                                                                       // 2140\n        _this7._resetScrollbar();                                                                                      // 2141\n                                                                                                                       // 2142\n        $$$1(_this7._element).trigger(Event.HIDDEN);                                                                   // 2143\n      });                                                                                                              // 2144\n    };                                                                                                                 // 2145\n                                                                                                                       // 2146\n    _proto._removeBackdrop = function _removeBackdrop() {                                                              // 2147\n      if (this._backdrop) {                                                                                            // 2148\n        $$$1(this._backdrop).remove();                                                                                 // 2149\n        this._backdrop = null;                                                                                         // 2150\n      }                                                                                                                // 2151\n    };                                                                                                                 // 2152\n                                                                                                                       // 2153\n    _proto._showBackdrop = function _showBackdrop(callback) {                                                          // 2154\n      var _this8 = this;                                                                                               // 2155\n                                                                                                                       // 2156\n      var animate = $$$1(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : '';                                // 2157\n                                                                                                                       // 2158\n      if (this._isShown && this._config.backdrop) {                                                                    // 2159\n        var doAnimate = Util.supportsTransitionEnd() && animate;                                                       // 2160\n        this._backdrop = document.createElement('div');                                                                // 2161\n        this._backdrop.className = ClassName.BACKDROP;                                                                 // 2162\n                                                                                                                       // 2163\n        if (animate) {                                                                                                 // 2164\n          $$$1(this._backdrop).addClass(animate);                                                                      // 2165\n        }                                                                                                              // 2166\n                                                                                                                       // 2167\n        $$$1(this._backdrop).appendTo(document.body);                                                                  // 2168\n        $$$1(this._element).on(Event.CLICK_DISMISS, function (event) {                                                 // 2169\n          if (_this8._ignoreBackdropClick) {                                                                           // 2170\n            _this8._ignoreBackdropClick = false;                                                                       // 2171\n            return;                                                                                                    // 2172\n          }                                                                                                            // 2173\n                                                                                                                       // 2174\n          if (event.target !== event.currentTarget) {                                                                  // 2175\n            return;                                                                                                    // 2176\n          }                                                                                                            // 2177\n                                                                                                                       // 2178\n          if (_this8._config.backdrop === 'static') {                                                                  // 2179\n            _this8._element.focus();                                                                                   // 2180\n          } else {                                                                                                     // 2181\n            _this8.hide();                                                                                             // 2182\n          }                                                                                                            // 2183\n        });                                                                                                            // 2184\n                                                                                                                       // 2185\n        if (doAnimate) {                                                                                               // 2186\n          Util.reflow(this._backdrop);                                                                                 // 2187\n        }                                                                                                              // 2188\n                                                                                                                       // 2189\n        $$$1(this._backdrop).addClass(ClassName.SHOW);                                                                 // 2190\n                                                                                                                       // 2191\n        if (!callback) {                                                                                               // 2192\n          return;                                                                                                      // 2193\n        }                                                                                                              // 2194\n                                                                                                                       // 2195\n        if (!doAnimate) {                                                                                              // 2196\n          callback();                                                                                                  // 2197\n          return;                                                                                                      // 2198\n        }                                                                                                              // 2199\n                                                                                                                       // 2200\n        $$$1(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);    // 2201\n      } else if (!this._isShown && this._backdrop) {                                                                   // 2202\n        $$$1(this._backdrop).removeClass(ClassName.SHOW);                                                              // 2203\n                                                                                                                       // 2204\n        var callbackRemove = function callbackRemove() {                                                               // 2205\n          _this8._removeBackdrop();                                                                                    // 2206\n                                                                                                                       // 2207\n          if (callback) {                                                                                              // 2208\n            callback();                                                                                                // 2209\n          }                                                                                                            // 2210\n        };                                                                                                             // 2211\n                                                                                                                       // 2212\n        if (Util.supportsTransitionEnd() && $$$1(this._element).hasClass(ClassName.FADE)) {                            // 2213\n          $$$1(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);\n        } else {                                                                                                       // 2215\n          callbackRemove();                                                                                            // 2216\n        }                                                                                                              // 2217\n      } else if (callback) {                                                                                           // 2218\n        callback();                                                                                                    // 2219\n      }                                                                                                                // 2220\n    }; // ----------------------------------------------------------------------                                       // 2221\n    // the following methods are used to handle overflowing modals                                                     // 2222\n    // todo (fat): these should probably be refactored out of modal.js                                                 // 2223\n    // ----------------------------------------------------------------------                                          // 2224\n                                                                                                                       // 2225\n                                                                                                                       // 2226\n    _proto._adjustDialog = function _adjustDialog() {                                                                  // 2227\n      var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;                     // 2228\n                                                                                                                       // 2229\n      if (!this._isBodyOverflowing && isModalOverflowing) {                                                            // 2230\n        this._element.style.paddingLeft = this._scrollbarWidth + \"px\";                                                 // 2231\n      }                                                                                                                // 2232\n                                                                                                                       // 2233\n      if (this._isBodyOverflowing && !isModalOverflowing) {                                                            // 2234\n        this._element.style.paddingRight = this._scrollbarWidth + \"px\";                                                // 2235\n      }                                                                                                                // 2236\n    };                                                                                                                 // 2237\n                                                                                                                       // 2238\n    _proto._resetAdjustments = function _resetAdjustments() {                                                          // 2239\n      this._element.style.paddingLeft = '';                                                                            // 2240\n      this._element.style.paddingRight = '';                                                                           // 2241\n    };                                                                                                                 // 2242\n                                                                                                                       // 2243\n    _proto._checkScrollbar = function _checkScrollbar() {                                                              // 2244\n      var rect = document.body.getBoundingClientRect();                                                                // 2245\n      this._isBodyOverflowing = rect.left + rect.right < window.innerWidth;                                            // 2246\n      this._scrollbarWidth = this._getScrollbarWidth();                                                                // 2247\n    };                                                                                                                 // 2248\n                                                                                                                       // 2249\n    _proto._setScrollbar = function _setScrollbar() {                                                                  // 2250\n      var _this9 = this;                                                                                               // 2251\n                                                                                                                       // 2252\n      if (this._isBodyOverflowing) {                                                                                   // 2253\n        // Note: DOMNode.style.paddingRight returns the actual value or '' if not set                                  // 2254\n        //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set                        // 2255\n        // Adjust fixed content padding                                                                                // 2256\n        $$$1(Selector.FIXED_CONTENT).each(function (index, element) {                                                  // 2257\n          var actualPadding = $$$1(element)[0].style.paddingRight;                                                     // 2258\n          var calculatedPadding = $$$1(element).css('padding-right');                                                  // 2259\n          $$$1(element).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + _this9._scrollbarWidth + \"px\");\n        }); // Adjust sticky content margin                                                                            // 2261\n                                                                                                                       // 2262\n        $$$1(Selector.STICKY_CONTENT).each(function (index, element) {                                                 // 2263\n          var actualMargin = $$$1(element)[0].style.marginRight;                                                       // 2264\n          var calculatedMargin = $$$1(element).css('margin-right');                                                    // 2265\n          $$$1(element).data('margin-right', actualMargin).css('margin-right', parseFloat(calculatedMargin) - _this9._scrollbarWidth + \"px\");\n        }); // Adjust navbar-toggler margin                                                                            // 2267\n                                                                                                                       // 2268\n        $$$1(Selector.NAVBAR_TOGGLER).each(function (index, element) {                                                 // 2269\n          var actualMargin = $$$1(element)[0].style.marginRight;                                                       // 2270\n          var calculatedMargin = $$$1(element).css('margin-right');                                                    // 2271\n          $$$1(element).data('margin-right', actualMargin).css('margin-right', parseFloat(calculatedMargin) + _this9._scrollbarWidth + \"px\");\n        }); // Adjust body padding                                                                                     // 2273\n                                                                                                                       // 2274\n        var actualPadding = document.body.style.paddingRight;                                                          // 2275\n        var calculatedPadding = $$$1('body').css('padding-right');                                                     // 2276\n        $$$1('body').data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + this._scrollbarWidth + \"px\");\n      }                                                                                                                // 2278\n    };                                                                                                                 // 2279\n                                                                                                                       // 2280\n    _proto._resetScrollbar = function _resetScrollbar() {                                                              // 2281\n      // Restore fixed content padding                                                                                 // 2282\n      $$$1(Selector.FIXED_CONTENT).each(function (index, element) {                                                    // 2283\n        var padding = $$$1(element).data('padding-right');                                                             // 2284\n                                                                                                                       // 2285\n        if (typeof padding !== 'undefined') {                                                                          // 2286\n          $$$1(element).css('padding-right', padding).removeData('padding-right');                                     // 2287\n        }                                                                                                              // 2288\n      }); // Restore sticky content and navbar-toggler margin                                                          // 2289\n                                                                                                                       // 2290\n      $$$1(Selector.STICKY_CONTENT + \", \" + Selector.NAVBAR_TOGGLER).each(function (index, element) {                  // 2291\n        var margin = $$$1(element).data('margin-right');                                                               // 2292\n                                                                                                                       // 2293\n        if (typeof margin !== 'undefined') {                                                                           // 2294\n          $$$1(element).css('margin-right', margin).removeData('margin-right');                                        // 2295\n        }                                                                                                              // 2296\n      }); // Restore body padding                                                                                      // 2297\n                                                                                                                       // 2298\n      var padding = $$$1('body').data('padding-right');                                                                // 2299\n                                                                                                                       // 2300\n      if (typeof padding !== 'undefined') {                                                                            // 2301\n        $$$1('body').css('padding-right', padding).removeData('padding-right');                                        // 2302\n      }                                                                                                                // 2303\n    };                                                                                                                 // 2304\n                                                                                                                       // 2305\n    _proto._getScrollbarWidth = function _getScrollbarWidth() {                                                        // 2306\n      // thx d.walsh                                                                                                   // 2307\n      var scrollDiv = document.createElement('div');                                                                   // 2308\n      scrollDiv.className = ClassName.SCROLLBAR_MEASURER;                                                              // 2309\n      document.body.appendChild(scrollDiv);                                                                            // 2310\n      var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;                            // 2311\n      document.body.removeChild(scrollDiv);                                                                            // 2312\n      return scrollbarWidth;                                                                                           // 2313\n    }; // static                                                                                                       // 2314\n                                                                                                                       // 2315\n                                                                                                                       // 2316\n    Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {                                        // 2317\n      return this.each(function () {                                                                                   // 2318\n        var data = $$$1(this).data(DATA_KEY);                                                                          // 2319\n                                                                                                                       // 2320\n        var _config = $$$1.extend({}, Modal.Default, $$$1(this).data(), typeof config === 'object' && config);         // 2321\n                                                                                                                       // 2322\n        if (!data) {                                                                                                   // 2323\n          data = new Modal(this, _config);                                                                             // 2324\n          $$$1(this).data(DATA_KEY, data);                                                                             // 2325\n        }                                                                                                              // 2326\n                                                                                                                       // 2327\n        if (typeof config === 'string') {                                                                              // 2328\n          if (typeof data[config] === 'undefined') {                                                                   // 2329\n            throw new Error(\"No method named \\\"\" + config + \"\\\"\");                                                     // 2330\n          }                                                                                                            // 2331\n                                                                                                                       // 2332\n          data[config](relatedTarget);                                                                                 // 2333\n        } else if (_config.show) {                                                                                     // 2334\n          data.show(relatedTarget);                                                                                    // 2335\n        }                                                                                                              // 2336\n      });                                                                                                              // 2337\n    };                                                                                                                 // 2338\n                                                                                                                       // 2339\n    createClass(Modal, null, [{                                                                                        // 2340\n      key: \"VERSION\",                                                                                                  // 2341\n      get: function get() {                                                                                            // 2342\n        return VERSION;                                                                                                // 2343\n      }                                                                                                                // 2344\n    }, {                                                                                                               // 2345\n      key: \"Default\",                                                                                                  // 2346\n      get: function get() {                                                                                            // 2347\n        return Default;                                                                                                // 2348\n      }                                                                                                                // 2349\n    }]);                                                                                                               // 2350\n    return Modal;                                                                                                      // 2351\n  }();                                                                                                                 // 2352\n  /**                                                                                                                  // 2353\n   * ------------------------------------------------------------------------                                          // 2354\n   * Data Api implementation                                                                                           // 2355\n   * ------------------------------------------------------------------------                                          // 2356\n   */                                                                                                                  // 2357\n                                                                                                                       // 2358\n                                                                                                                       // 2359\n  $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {                                     // 2360\n    var _this10 = this;                                                                                                // 2361\n                                                                                                                       // 2362\n    var target;                                                                                                        // 2363\n    var selector = Util.getSelectorFromElement(this);                                                                  // 2364\n                                                                                                                       // 2365\n    if (selector) {                                                                                                    // 2366\n      target = $$$1(selector)[0];                                                                                      // 2367\n    }                                                                                                                  // 2368\n                                                                                                                       // 2369\n    var config = $$$1(target).data(DATA_KEY) ? 'toggle' : $$$1.extend({}, $$$1(target).data(), $$$1(this).data());     // 2370\n                                                                                                                       // 2371\n    if (this.tagName === 'A' || this.tagName === 'AREA') {                                                             // 2372\n      event.preventDefault();                                                                                          // 2373\n    }                                                                                                                  // 2374\n                                                                                                                       // 2375\n    var $target = $$$1(target).one(Event.SHOW, function (showEvent) {                                                  // 2376\n      if (showEvent.isDefaultPrevented()) {                                                                            // 2377\n        // only register focus restorer if modal will actually get shown                                               // 2378\n        return;                                                                                                        // 2379\n      }                                                                                                                // 2380\n                                                                                                                       // 2381\n      $target.one(Event.HIDDEN, function () {                                                                          // 2382\n        if ($$$1(_this10).is(':visible')) {                                                                            // 2383\n          _this10.focus();                                                                                             // 2384\n        }                                                                                                              // 2385\n      });                                                                                                              // 2386\n    });                                                                                                                // 2387\n                                                                                                                       // 2388\n    Modal._jQueryInterface.call($$$1(target), config, this);                                                           // 2389\n  });                                                                                                                  // 2390\n  /**                                                                                                                  // 2391\n   * ------------------------------------------------------------------------                                          // 2392\n   * jQuery                                                                                                            // 2393\n   * ------------------------------------------------------------------------                                          // 2394\n   */                                                                                                                  // 2395\n                                                                                                                       // 2396\n  $$$1.fn[NAME] = Modal._jQueryInterface;                                                                              // 2397\n  $$$1.fn[NAME].Constructor = Modal;                                                                                   // 2398\n                                                                                                                       // 2399\n  $$$1.fn[NAME].noConflict = function () {                                                                             // 2400\n    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;                                                                                // 2401\n    return Modal._jQueryInterface;                                                                                     // 2402\n  };                                                                                                                   // 2403\n                                                                                                                       // 2404\n  return Modal;                                                                                                        // 2405\n}($);                                                                                                                  // 2406\n                                                                                                                       // 2407\n/**                                                                                                                    // 2408\n * --------------------------------------------------------------------------                                          // 2409\n * Bootstrap (v4.0.0-beta.2): tooltip.js                                                                               // 2410\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 2411\n * --------------------------------------------------------------------------                                          // 2412\n */                                                                                                                    // 2413\n                                                                                                                       // 2414\nvar Tooltip = function ($$$1) {                                                                                        // 2415\n  /**                                                                                                                  // 2416\n   * ------------------------------------------------------------------------                                          // 2417\n   * Constants                                                                                                         // 2418\n   * ------------------------------------------------------------------------                                          // 2419\n   */                                                                                                                  // 2420\n  var NAME = 'tooltip';                                                                                                // 2421\n  var VERSION = '4.0.0-beta.2';                                                                                        // 2422\n  var DATA_KEY = 'bs.tooltip';                                                                                         // 2423\n  var EVENT_KEY = \".\" + DATA_KEY;                                                                                      // 2424\n  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];                                                                              // 2425\n  var TRANSITION_DURATION = 150;                                                                                       // 2426\n  var CLASS_PREFIX = 'bs-tooltip';                                                                                     // 2427\n  var BSCLS_PREFIX_REGEX = new RegExp(\"(^|\\\\s)\" + CLASS_PREFIX + \"\\\\S+\", 'g');                                         // 2428\n  var DefaultType = {                                                                                                  // 2429\n    animation: 'boolean',                                                                                              // 2430\n    template: 'string',                                                                                                // 2431\n    title: '(string|element|function)',                                                                                // 2432\n    trigger: 'string',                                                                                                 // 2433\n    delay: '(number|object)',                                                                                          // 2434\n    html: 'boolean',                                                                                                   // 2435\n    selector: '(string|boolean)',                                                                                      // 2436\n    placement: '(string|function)',                                                                                    // 2437\n    offset: '(number|string)',                                                                                         // 2438\n    container: '(string|element|boolean)',                                                                             // 2439\n    fallbackPlacement: '(string|array)'                                                                                // 2440\n  };                                                                                                                   // 2441\n  var AttachmentMap = {                                                                                                // 2442\n    AUTO: 'auto',                                                                                                      // 2443\n    TOP: 'top',                                                                                                        // 2444\n    RIGHT: 'right',                                                                                                    // 2445\n    BOTTOM: 'bottom',                                                                                                  // 2446\n    LEFT: 'left'                                                                                                       // 2447\n  };                                                                                                                   // 2448\n  var Default = {                                                                                                      // 2449\n    animation: true,                                                                                                   // 2450\n    template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',                                                                                            // 2452\n    title: '',                                                                                                         // 2453\n    delay: 0,                                                                                                          // 2454\n    html: false,                                                                                                       // 2455\n    selector: false,                                                                                                   // 2456\n    placement: 'top',                                                                                                  // 2457\n    offset: 0,                                                                                                         // 2458\n    container: false,                                                                                                  // 2459\n    fallbackPlacement: 'flip'                                                                                          // 2460\n  };                                                                                                                   // 2461\n  var HoverState = {                                                                                                   // 2462\n    SHOW: 'show',                                                                                                      // 2463\n    OUT: 'out'                                                                                                         // 2464\n  };                                                                                                                   // 2465\n  var Event = {                                                                                                        // 2466\n    HIDE: \"hide\" + EVENT_KEY,                                                                                          // 2467\n    HIDDEN: \"hidden\" + EVENT_KEY,                                                                                      // 2468\n    SHOW: \"show\" + EVENT_KEY,                                                                                          // 2469\n    SHOWN: \"shown\" + EVENT_KEY,                                                                                        // 2470\n    INSERTED: \"inserted\" + EVENT_KEY,                                                                                  // 2471\n    CLICK: \"click\" + EVENT_KEY,                                                                                        // 2472\n    FOCUSIN: \"focusin\" + EVENT_KEY,                                                                                    // 2473\n    FOCUSOUT: \"focusout\" + EVENT_KEY,                                                                                  // 2474\n    MOUSEENTER: \"mouseenter\" + EVENT_KEY,                                                                              // 2475\n    MOUSELEAVE: \"mouseleave\" + EVENT_KEY                                                                               // 2476\n  };                                                                                                                   // 2477\n  var ClassName = {                                                                                                    // 2478\n    FADE: 'fade',                                                                                                      // 2479\n    SHOW: 'show'                                                                                                       // 2480\n  };                                                                                                                   // 2481\n  var Selector = {                                                                                                     // 2482\n    TOOLTIP: '.tooltip',                                                                                               // 2483\n    TOOLTIP_INNER: '.tooltip-inner',                                                                                   // 2484\n    ARROW: '.arrow'                                                                                                    // 2485\n  };                                                                                                                   // 2486\n  var Trigger = {                                                                                                      // 2487\n    HOVER: 'hover',                                                                                                    // 2488\n    FOCUS: 'focus',                                                                                                    // 2489\n    CLICK: 'click',                                                                                                    // 2490\n    MANUAL: 'manual'                                                                                                   // 2491\n    /**                                                                                                                // 2492\n     * ------------------------------------------------------------------------                                        // 2493\n     * Class Definition                                                                                                // 2494\n     * ------------------------------------------------------------------------                                        // 2495\n     */                                                                                                                // 2496\n                                                                                                                       // 2497\n  };                                                                                                                   // 2498\n                                                                                                                       // 2499\n  var Tooltip =                                                                                                        // 2500\n  /*#__PURE__*/                                                                                                        // 2501\n  function () {                                                                                                        // 2502\n    function Tooltip(element, config) {                                                                                // 2503\n      /**                                                                                                              // 2504\n       * Check for Popper dependency                                                                                   // 2505\n       * Popper - https://popper.js.org                                                                                // 2506\n       */                                                                                                              // 2507\n      if (typeof Popper === 'undefined') {                                                                             // 2508\n        throw new Error('Bootstrap tooltips require Popper.js (https://popper.js.org)');                               // 2509\n      } // private                                                                                                     // 2510\n                                                                                                                       // 2511\n                                                                                                                       // 2512\n      this._isEnabled = true;                                                                                          // 2513\n      this._timeout = 0;                                                                                               // 2514\n      this._hoverState = '';                                                                                           // 2515\n      this._activeTrigger = {};                                                                                        // 2516\n      this._popper = null; // protected                                                                                // 2517\n                                                                                                                       // 2518\n      this.element = element;                                                                                          // 2519\n      this.config = this._getConfig(config);                                                                           // 2520\n      this.tip = null;                                                                                                 // 2521\n                                                                                                                       // 2522\n      this._setListeners();                                                                                            // 2523\n    } // getters                                                                                                       // 2524\n                                                                                                                       // 2525\n                                                                                                                       // 2526\n    var _proto = Tooltip.prototype;                                                                                    // 2527\n                                                                                                                       // 2528\n    // public                                                                                                          // 2529\n    _proto.enable = function enable() {                                                                                // 2530\n      this._isEnabled = true;                                                                                          // 2531\n    };                                                                                                                 // 2532\n                                                                                                                       // 2533\n    _proto.disable = function disable() {                                                                              // 2534\n      this._isEnabled = false;                                                                                         // 2535\n    };                                                                                                                 // 2536\n                                                                                                                       // 2537\n    _proto.toggleEnabled = function toggleEnabled() {                                                                  // 2538\n      this._isEnabled = !this._isEnabled;                                                                              // 2539\n    };                                                                                                                 // 2540\n                                                                                                                       // 2541\n    _proto.toggle = function toggle(event) {                                                                           // 2542\n      if (!this._isEnabled) {                                                                                          // 2543\n        return;                                                                                                        // 2544\n      }                                                                                                                // 2545\n                                                                                                                       // 2546\n      if (event) {                                                                                                     // 2547\n        var dataKey = this.constructor.DATA_KEY;                                                                       // 2548\n        var context = $$$1(event.currentTarget).data(dataKey);                                                         // 2549\n                                                                                                                       // 2550\n        if (!context) {                                                                                                // 2551\n          context = new this.constructor(event.currentTarget, this._getDelegateConfig());                              // 2552\n          $$$1(event.currentTarget).data(dataKey, context);                                                            // 2553\n        }                                                                                                              // 2554\n                                                                                                                       // 2555\n        context._activeTrigger.click = !context._activeTrigger.click;                                                  // 2556\n                                                                                                                       // 2557\n        if (context._isWithActiveTrigger()) {                                                                          // 2558\n          context._enter(null, context);                                                                               // 2559\n        } else {                                                                                                       // 2560\n          context._leave(null, context);                                                                               // 2561\n        }                                                                                                              // 2562\n      } else {                                                                                                         // 2563\n        if ($$$1(this.getTipElement()).hasClass(ClassName.SHOW)) {                                                     // 2564\n          this._leave(null, this);                                                                                     // 2565\n                                                                                                                       // 2566\n          return;                                                                                                      // 2567\n        }                                                                                                              // 2568\n                                                                                                                       // 2569\n        this._enter(null, this);                                                                                       // 2570\n      }                                                                                                                // 2571\n    };                                                                                                                 // 2572\n                                                                                                                       // 2573\n    _proto.dispose = function dispose() {                                                                              // 2574\n      clearTimeout(this._timeout);                                                                                     // 2575\n      $$$1.removeData(this.element, this.constructor.DATA_KEY);                                                        // 2576\n      $$$1(this.element).off(this.constructor.EVENT_KEY);                                                              // 2577\n      $$$1(this.element).closest('.modal').off('hide.bs.modal');                                                       // 2578\n                                                                                                                       // 2579\n      if (this.tip) {                                                                                                  // 2580\n        $$$1(this.tip).remove();                                                                                       // 2581\n      }                                                                                                                // 2582\n                                                                                                                       // 2583\n      this._isEnabled = null;                                                                                          // 2584\n      this._timeout = null;                                                                                            // 2585\n      this._hoverState = null;                                                                                         // 2586\n      this._activeTrigger = null;                                                                                      // 2587\n                                                                                                                       // 2588\n      if (this._popper !== null) {                                                                                     // 2589\n        this._popper.destroy();                                                                                        // 2590\n      }                                                                                                                // 2591\n                                                                                                                       // 2592\n      this._popper = null;                                                                                             // 2593\n      this.element = null;                                                                                             // 2594\n      this.config = null;                                                                                              // 2595\n      this.tip = null;                                                                                                 // 2596\n    };                                                                                                                 // 2597\n                                                                                                                       // 2598\n    _proto.show = function show() {                                                                                    // 2599\n      var _this = this;                                                                                                // 2600\n                                                                                                                       // 2601\n      if ($$$1(this.element).css('display') === 'none') {                                                              // 2602\n        throw new Error('Please use show on visible elements');                                                        // 2603\n      }                                                                                                                // 2604\n                                                                                                                       // 2605\n      var showEvent = $$$1.Event(this.constructor.Event.SHOW);                                                         // 2606\n                                                                                                                       // 2607\n      if (this.isWithContent() && this._isEnabled) {                                                                   // 2608\n        $$$1(this.element).trigger(showEvent);                                                                         // 2609\n        var isInTheDom = $$$1.contains(this.element.ownerDocument.documentElement, this.element);                      // 2610\n                                                                                                                       // 2611\n        if (showEvent.isDefaultPrevented() || !isInTheDom) {                                                           // 2612\n          return;                                                                                                      // 2613\n        }                                                                                                              // 2614\n                                                                                                                       // 2615\n        var tip = this.getTipElement();                                                                                // 2616\n        var tipId = Util.getUID(this.constructor.NAME);                                                                // 2617\n        tip.setAttribute('id', tipId);                                                                                 // 2618\n        this.element.setAttribute('aria-describedby', tipId);                                                          // 2619\n        this.setContent();                                                                                             // 2620\n                                                                                                                       // 2621\n        if (this.config.animation) {                                                                                   // 2622\n          $$$1(tip).addClass(ClassName.FADE);                                                                          // 2623\n        }                                                                                                              // 2624\n                                                                                                                       // 2625\n        var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\n                                                                                                                       // 2627\n        var attachment = this._getAttachment(placement);                                                               // 2628\n                                                                                                                       // 2629\n        this.addAttachmentClass(attachment);                                                                           // 2630\n        var container = this.config.container === false ? document.body : $$$1(this.config.container);                 // 2631\n        $$$1(tip).data(this.constructor.DATA_KEY, this);                                                               // 2632\n                                                                                                                       // 2633\n        if (!$$$1.contains(this.element.ownerDocument.documentElement, this.tip)) {                                    // 2634\n          $$$1(tip).appendTo(container);                                                                               // 2635\n        }                                                                                                              // 2636\n                                                                                                                       // 2637\n        $$$1(this.element).trigger(this.constructor.Event.INSERTED);                                                   // 2638\n        this._popper = new Popper(this.element, tip, {                                                                 // 2639\n          placement: attachment,                                                                                       // 2640\n          modifiers: {                                                                                                 // 2641\n            offset: {                                                                                                  // 2642\n              offset: this.config.offset                                                                               // 2643\n            },                                                                                                         // 2644\n            flip: {                                                                                                    // 2645\n              behavior: this.config.fallbackPlacement                                                                  // 2646\n            },                                                                                                         // 2647\n            arrow: {                                                                                                   // 2648\n              element: Selector.ARROW                                                                                  // 2649\n            }                                                                                                          // 2650\n          },                                                                                                           // 2651\n          onCreate: function onCreate(data) {                                                                          // 2652\n            if (data.originalPlacement !== data.placement) {                                                           // 2653\n              _this._handlePopperPlacementChange(data);                                                                // 2654\n            }                                                                                                          // 2655\n          },                                                                                                           // 2656\n          onUpdate: function onUpdate(data) {                                                                          // 2657\n            _this._handlePopperPlacementChange(data);                                                                  // 2658\n          }                                                                                                            // 2659\n        });                                                                                                            // 2660\n        $$$1(tip).addClass(ClassName.SHOW); // if this is a touch-enabled device we add extra                          // 2661\n        // empty mouseover listeners to the body's immediate children;                                                 // 2662\n        // only needed because of broken event delegation on iOS                                                       // 2663\n        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html                                       // 2664\n                                                                                                                       // 2665\n        if ('ontouchstart' in document.documentElement) {                                                              // 2666\n          $$$1('body').children().on('mouseover', null, $$$1.noop);                                                    // 2667\n        }                                                                                                              // 2668\n                                                                                                                       // 2669\n        var complete = function complete() {                                                                           // 2670\n          if (_this.config.animation) {                                                                                // 2671\n            _this._fixTransition();                                                                                    // 2672\n          }                                                                                                            // 2673\n                                                                                                                       // 2674\n          var prevHoverState = _this._hoverState;                                                                      // 2675\n          _this._hoverState = null;                                                                                    // 2676\n          $$$1(_this.element).trigger(_this.constructor.Event.SHOWN);                                                  // 2677\n                                                                                                                       // 2678\n          if (prevHoverState === HoverState.OUT) {                                                                     // 2679\n            _this._leave(null, _this);                                                                                 // 2680\n          }                                                                                                            // 2681\n        };                                                                                                             // 2682\n                                                                                                                       // 2683\n        if (Util.supportsTransitionEnd() && $$$1(this.tip).hasClass(ClassName.FADE)) {                                 // 2684\n          $$$1(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(Tooltip._TRANSITION_DURATION);        // 2685\n        } else {                                                                                                       // 2686\n          complete();                                                                                                  // 2687\n        }                                                                                                              // 2688\n      }                                                                                                                // 2689\n    };                                                                                                                 // 2690\n                                                                                                                       // 2691\n    _proto.hide = function hide(callback) {                                                                            // 2692\n      var _this2 = this;                                                                                               // 2693\n                                                                                                                       // 2694\n      var tip = this.getTipElement();                                                                                  // 2695\n      var hideEvent = $$$1.Event(this.constructor.Event.HIDE);                                                         // 2696\n                                                                                                                       // 2697\n      var complete = function complete() {                                                                             // 2698\n        if (_this2._hoverState !== HoverState.SHOW && tip.parentNode) {                                                // 2699\n          tip.parentNode.removeChild(tip);                                                                             // 2700\n        }                                                                                                              // 2701\n                                                                                                                       // 2702\n        _this2._cleanTipClass();                                                                                       // 2703\n                                                                                                                       // 2704\n        _this2.element.removeAttribute('aria-describedby');                                                            // 2705\n                                                                                                                       // 2706\n        $$$1(_this2.element).trigger(_this2.constructor.Event.HIDDEN);                                                 // 2707\n                                                                                                                       // 2708\n        if (_this2._popper !== null) {                                                                                 // 2709\n          _this2._popper.destroy();                                                                                    // 2710\n        }                                                                                                              // 2711\n                                                                                                                       // 2712\n        if (callback) {                                                                                                // 2713\n          callback();                                                                                                  // 2714\n        }                                                                                                              // 2715\n      };                                                                                                               // 2716\n                                                                                                                       // 2717\n      $$$1(this.element).trigger(hideEvent);                                                                           // 2718\n                                                                                                                       // 2719\n      if (hideEvent.isDefaultPrevented()) {                                                                            // 2720\n        return;                                                                                                        // 2721\n      }                                                                                                                // 2722\n                                                                                                                       // 2723\n      $$$1(tip).removeClass(ClassName.SHOW); // if this is a touch-enabled device we remove the extra                  // 2724\n      // empty mouseover listeners we added for iOS support                                                            // 2725\n                                                                                                                       // 2726\n      if ('ontouchstart' in document.documentElement) {                                                                // 2727\n        $$$1('body').children().off('mouseover', null, $$$1.noop);                                                     // 2728\n      }                                                                                                                // 2729\n                                                                                                                       // 2730\n      this._activeTrigger[Trigger.CLICK] = false;                                                                      // 2731\n      this._activeTrigger[Trigger.FOCUS] = false;                                                                      // 2732\n      this._activeTrigger[Trigger.HOVER] = false;                                                                      // 2733\n                                                                                                                       // 2734\n      if (Util.supportsTransitionEnd() && $$$1(this.tip).hasClass(ClassName.FADE)) {                                   // 2735\n        $$$1(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);                        // 2736\n      } else {                                                                                                         // 2737\n        complete();                                                                                                    // 2738\n      }                                                                                                                // 2739\n                                                                                                                       // 2740\n      this._hoverState = '';                                                                                           // 2741\n    };                                                                                                                 // 2742\n                                                                                                                       // 2743\n    _proto.update = function update() {                                                                                // 2744\n      if (this._popper !== null) {                                                                                     // 2745\n        this._popper.scheduleUpdate();                                                                                 // 2746\n      }                                                                                                                // 2747\n    }; // protected                                                                                                    // 2748\n                                                                                                                       // 2749\n                                                                                                                       // 2750\n    _proto.isWithContent = function isWithContent() {                                                                  // 2751\n      return Boolean(this.getTitle());                                                                                 // 2752\n    };                                                                                                                 // 2753\n                                                                                                                       // 2754\n    _proto.addAttachmentClass = function addAttachmentClass(attachment) {                                              // 2755\n      $$$1(this.getTipElement()).addClass(CLASS_PREFIX + \"-\" + attachment);                                            // 2756\n    };                                                                                                                 // 2757\n                                                                                                                       // 2758\n    _proto.getTipElement = function getTipElement() {                                                                  // 2759\n      this.tip = this.tip || $$$1(this.config.template)[0];                                                            // 2760\n      return this.tip;                                                                                                 // 2761\n    };                                                                                                                 // 2762\n                                                                                                                       // 2763\n    _proto.setContent = function setContent() {                                                                        // 2764\n      var $tip = $$$1(this.getTipElement());                                                                           // 2765\n      this.setElementContent($tip.find(Selector.TOOLTIP_INNER), this.getTitle());                                      // 2766\n      $tip.removeClass(ClassName.FADE + \" \" + ClassName.SHOW);                                                         // 2767\n    };                                                                                                                 // 2768\n                                                                                                                       // 2769\n    _proto.setElementContent = function setElementContent($element, content) {                                         // 2770\n      var html = this.config.html;                                                                                     // 2771\n                                                                                                                       // 2772\n      if (typeof content === 'object' && (content.nodeType || content.jquery)) {                                       // 2773\n        // content is a DOM node or a jQuery                                                                           // 2774\n        if (html) {                                                                                                    // 2775\n          if (!$$$1(content).parent().is($element)) {                                                                  // 2776\n            $element.empty().append(content);                                                                          // 2777\n          }                                                                                                            // 2778\n        } else {                                                                                                       // 2779\n          $element.text($$$1(content).text());                                                                         // 2780\n        }                                                                                                              // 2781\n      } else {                                                                                                         // 2782\n        $element[html ? 'html' : 'text'](content);                                                                     // 2783\n      }                                                                                                                // 2784\n    };                                                                                                                 // 2785\n                                                                                                                       // 2786\n    _proto.getTitle = function getTitle() {                                                                            // 2787\n      var title = this.element.getAttribute('data-original-title');                                                    // 2788\n                                                                                                                       // 2789\n      if (!title) {                                                                                                    // 2790\n        title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;    // 2791\n      }                                                                                                                // 2792\n                                                                                                                       // 2793\n      return title;                                                                                                    // 2794\n    }; // private                                                                                                      // 2795\n                                                                                                                       // 2796\n                                                                                                                       // 2797\n    _proto._getAttachment = function _getAttachment(placement) {                                                       // 2798\n      return AttachmentMap[placement.toUpperCase()];                                                                   // 2799\n    };                                                                                                                 // 2800\n                                                                                                                       // 2801\n    _proto._setListeners = function _setListeners() {                                                                  // 2802\n      var _this3 = this;                                                                                               // 2803\n                                                                                                                       // 2804\n      var triggers = this.config.trigger.split(' ');                                                                   // 2805\n      triggers.forEach(function (trigger) {                                                                            // 2806\n        if (trigger === 'click') {                                                                                     // 2807\n          $$$1(_this3.element).on(_this3.constructor.Event.CLICK, _this3.config.selector, function (event) {           // 2808\n            return _this3.toggle(event);                                                                               // 2809\n          });                                                                                                          // 2810\n        } else if (trigger !== Trigger.MANUAL) {                                                                       // 2811\n          var eventIn = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSEENTER : _this3.constructor.Event.FOCUSIN;\n          var eventOut = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSELEAVE : _this3.constructor.Event.FOCUSOUT;\n          $$$1(_this3.element).on(eventIn, _this3.config.selector, function (event) {                                  // 2814\n            return _this3._enter(event);                                                                               // 2815\n          }).on(eventOut, _this3.config.selector, function (event) {                                                   // 2816\n            return _this3._leave(event);                                                                               // 2817\n          });                                                                                                          // 2818\n        }                                                                                                              // 2819\n                                                                                                                       // 2820\n        $$$1(_this3.element).closest('.modal').on('hide.bs.modal', function () {                                       // 2821\n          return _this3.hide();                                                                                        // 2822\n        });                                                                                                            // 2823\n      });                                                                                                              // 2824\n                                                                                                                       // 2825\n      if (this.config.selector) {                                                                                      // 2826\n        this.config = $$$1.extend({}, this.config, {                                                                   // 2827\n          trigger: 'manual',                                                                                           // 2828\n          selector: ''                                                                                                 // 2829\n        });                                                                                                            // 2830\n      } else {                                                                                                         // 2831\n        this._fixTitle();                                                                                              // 2832\n      }                                                                                                                // 2833\n    };                                                                                                                 // 2834\n                                                                                                                       // 2835\n    _proto._fixTitle = function _fixTitle() {                                                                          // 2836\n      var titleType = typeof this.element.getAttribute('data-original-title');                                         // 2837\n                                                                                                                       // 2838\n      if (this.element.getAttribute('title') || titleType !== 'string') {                                              // 2839\n        this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');                    // 2840\n        this.element.setAttribute('title', '');                                                                        // 2841\n      }                                                                                                                // 2842\n    };                                                                                                                 // 2843\n                                                                                                                       // 2844\n    _proto._enter = function _enter(event, context) {                                                                  // 2845\n      var dataKey = this.constructor.DATA_KEY;                                                                         // 2846\n      context = context || $$$1(event.currentTarget).data(dataKey);                                                    // 2847\n                                                                                                                       // 2848\n      if (!context) {                                                                                                  // 2849\n        context = new this.constructor(event.currentTarget, this._getDelegateConfig());                                // 2850\n        $$$1(event.currentTarget).data(dataKey, context);                                                              // 2851\n      }                                                                                                                // 2852\n                                                                                                                       // 2853\n      if (event) {                                                                                                     // 2854\n        context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;                       // 2855\n      }                                                                                                                // 2856\n                                                                                                                       // 2857\n      if ($$$1(context.getTipElement()).hasClass(ClassName.SHOW) || context._hoverState === HoverState.SHOW) {         // 2858\n        context._hoverState = HoverState.SHOW;                                                                         // 2859\n        return;                                                                                                        // 2860\n      }                                                                                                                // 2861\n                                                                                                                       // 2862\n      clearTimeout(context._timeout);                                                                                  // 2863\n      context._hoverState = HoverState.SHOW;                                                                           // 2864\n                                                                                                                       // 2865\n      if (!context.config.delay || !context.config.delay.show) {                                                       // 2866\n        context.show();                                                                                                // 2867\n        return;                                                                                                        // 2868\n      }                                                                                                                // 2869\n                                                                                                                       // 2870\n      context._timeout = setTimeout(function () {                                                                      // 2871\n        if (context._hoverState === HoverState.SHOW) {                                                                 // 2872\n          context.show();                                                                                              // 2873\n        }                                                                                                              // 2874\n      }, context.config.delay.show);                                                                                   // 2875\n    };                                                                                                                 // 2876\n                                                                                                                       // 2877\n    _proto._leave = function _leave(event, context) {                                                                  // 2878\n      var dataKey = this.constructor.DATA_KEY;                                                                         // 2879\n      context = context || $$$1(event.currentTarget).data(dataKey);                                                    // 2880\n                                                                                                                       // 2881\n      if (!context) {                                                                                                  // 2882\n        context = new this.constructor(event.currentTarget, this._getDelegateConfig());                                // 2883\n        $$$1(event.currentTarget).data(dataKey, context);                                                              // 2884\n      }                                                                                                                // 2885\n                                                                                                                       // 2886\n      if (event) {                                                                                                     // 2887\n        context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;                     // 2888\n      }                                                                                                                // 2889\n                                                                                                                       // 2890\n      if (context._isWithActiveTrigger()) {                                                                            // 2891\n        return;                                                                                                        // 2892\n      }                                                                                                                // 2893\n                                                                                                                       // 2894\n      clearTimeout(context._timeout);                                                                                  // 2895\n      context._hoverState = HoverState.OUT;                                                                            // 2896\n                                                                                                                       // 2897\n      if (!context.config.delay || !context.config.delay.hide) {                                                       // 2898\n        context.hide();                                                                                                // 2899\n        return;                                                                                                        // 2900\n      }                                                                                                                // 2901\n                                                                                                                       // 2902\n      context._timeout = setTimeout(function () {                                                                      // 2903\n        if (context._hoverState === HoverState.OUT) {                                                                  // 2904\n          context.hide();                                                                                              // 2905\n        }                                                                                                              // 2906\n      }, context.config.delay.hide);                                                                                   // 2907\n    };                                                                                                                 // 2908\n                                                                                                                       // 2909\n    _proto._isWithActiveTrigger = function _isWithActiveTrigger() {                                                    // 2910\n      for (var trigger in this._activeTrigger) {                                                                       // 2911\n        if (this._activeTrigger[trigger]) {                                                                            // 2912\n          return true;                                                                                                 // 2913\n        }                                                                                                              // 2914\n      }                                                                                                                // 2915\n                                                                                                                       // 2916\n      return false;                                                                                                    // 2917\n    };                                                                                                                 // 2918\n                                                                                                                       // 2919\n    _proto._getConfig = function _getConfig(config) {                                                                  // 2920\n      config = $$$1.extend({}, this.constructor.Default, $$$1(this.element).data(), config);                           // 2921\n                                                                                                                       // 2922\n      if (typeof config.delay === 'number') {                                                                          // 2923\n        config.delay = {                                                                                               // 2924\n          show: config.delay,                                                                                          // 2925\n          hide: config.delay                                                                                           // 2926\n        };                                                                                                             // 2927\n      }                                                                                                                // 2928\n                                                                                                                       // 2929\n      if (typeof config.title === 'number') {                                                                          // 2930\n        config.title = config.title.toString();                                                                        // 2931\n      }                                                                                                                // 2932\n                                                                                                                       // 2933\n      if (typeof config.content === 'number') {                                                                        // 2934\n        config.content = config.content.toString();                                                                    // 2935\n      }                                                                                                                // 2936\n                                                                                                                       // 2937\n      Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);                                                // 2938\n      return config;                                                                                                   // 2939\n    };                                                                                                                 // 2940\n                                                                                                                       // 2941\n    _proto._getDelegateConfig = function _getDelegateConfig() {                                                        // 2942\n      var config = {};                                                                                                 // 2943\n                                                                                                                       // 2944\n      if (this.config) {                                                                                               // 2945\n        for (var key in this.config) {                                                                                 // 2946\n          if (this.constructor.Default[key] !== this.config[key]) {                                                    // 2947\n            config[key] = this.config[key];                                                                            // 2948\n          }                                                                                                            // 2949\n        }                                                                                                              // 2950\n      }                                                                                                                // 2951\n                                                                                                                       // 2952\n      return config;                                                                                                   // 2953\n    };                                                                                                                 // 2954\n                                                                                                                       // 2955\n    _proto._cleanTipClass = function _cleanTipClass() {                                                                // 2956\n      var $tip = $$$1(this.getTipElement());                                                                           // 2957\n      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);                                                     // 2958\n                                                                                                                       // 2959\n      if (tabClass !== null && tabClass.length > 0) {                                                                  // 2960\n        $tip.removeClass(tabClass.join(''));                                                                           // 2961\n      }                                                                                                                // 2962\n    };                                                                                                                 // 2963\n                                                                                                                       // 2964\n    _proto._handlePopperPlacementChange = function _handlePopperPlacementChange(data) {                                // 2965\n      this._cleanTipClass();                                                                                           // 2966\n                                                                                                                       // 2967\n      this.addAttachmentClass(this._getAttachment(data.placement));                                                    // 2968\n    };                                                                                                                 // 2969\n                                                                                                                       // 2970\n    _proto._fixTransition = function _fixTransition() {                                                                // 2971\n      var tip = this.getTipElement();                                                                                  // 2972\n      var initConfigAnimation = this.config.animation;                                                                 // 2973\n                                                                                                                       // 2974\n      if (tip.getAttribute('x-placement') !== null) {                                                                  // 2975\n        return;                                                                                                        // 2976\n      }                                                                                                                // 2977\n                                                                                                                       // 2978\n      $$$1(tip).removeClass(ClassName.FADE);                                                                           // 2979\n      this.config.animation = false;                                                                                   // 2980\n      this.hide();                                                                                                     // 2981\n      this.show();                                                                                                     // 2982\n      this.config.animation = initConfigAnimation;                                                                     // 2983\n    }; // static                                                                                                       // 2984\n                                                                                                                       // 2985\n                                                                                                                       // 2986\n    Tooltip._jQueryInterface = function _jQueryInterface(config) {                                                     // 2987\n      return this.each(function () {                                                                                   // 2988\n        var data = $$$1(this).data(DATA_KEY);                                                                          // 2989\n                                                                                                                       // 2990\n        var _config = typeof config === 'object' && config;                                                            // 2991\n                                                                                                                       // 2992\n        if (!data && /dispose|hide/.test(config)) {                                                                    // 2993\n          return;                                                                                                      // 2994\n        }                                                                                                              // 2995\n                                                                                                                       // 2996\n        if (!data) {                                                                                                   // 2997\n          data = new Tooltip(this, _config);                                                                           // 2998\n          $$$1(this).data(DATA_KEY, data);                                                                             // 2999\n        }                                                                                                              // 3000\n                                                                                                                       // 3001\n        if (typeof config === 'string') {                                                                              // 3002\n          if (typeof data[config] === 'undefined') {                                                                   // 3003\n            throw new Error(\"No method named \\\"\" + config + \"\\\"\");                                                     // 3004\n          }                                                                                                            // 3005\n                                                                                                                       // 3006\n          data[config]();                                                                                              // 3007\n        }                                                                                                              // 3008\n      });                                                                                                              // 3009\n    };                                                                                                                 // 3010\n                                                                                                                       // 3011\n    createClass(Tooltip, null, [{                                                                                      // 3012\n      key: \"VERSION\",                                                                                                  // 3013\n      get: function get() {                                                                                            // 3014\n        return VERSION;                                                                                                // 3015\n      }                                                                                                                // 3016\n    }, {                                                                                                               // 3017\n      key: \"Default\",                                                                                                  // 3018\n      get: function get() {                                                                                            // 3019\n        return Default;                                                                                                // 3020\n      }                                                                                                                // 3021\n    }, {                                                                                                               // 3022\n      key: \"NAME\",                                                                                                     // 3023\n      get: function get() {                                                                                            // 3024\n        return NAME;                                                                                                   // 3025\n      }                                                                                                                // 3026\n    }, {                                                                                                               // 3027\n      key: \"DATA_KEY\",                                                                                                 // 3028\n      get: function get() {                                                                                            // 3029\n        return DATA_KEY;                                                                                               // 3030\n      }                                                                                                                // 3031\n    }, {                                                                                                               // 3032\n      key: \"Event\",                                                                                                    // 3033\n      get: function get() {                                                                                            // 3034\n        return Event;                                                                                                  // 3035\n      }                                                                                                                // 3036\n    }, {                                                                                                               // 3037\n      key: \"EVENT_KEY\",                                                                                                // 3038\n      get: function get() {                                                                                            // 3039\n        return EVENT_KEY;                                                                                              // 3040\n      }                                                                                                                // 3041\n    }, {                                                                                                               // 3042\n      key: \"DefaultType\",                                                                                              // 3043\n      get: function get() {                                                                                            // 3044\n        return DefaultType;                                                                                            // 3045\n      }                                                                                                                // 3046\n    }]);                                                                                                               // 3047\n    return Tooltip;                                                                                                    // 3048\n  }();                                                                                                                 // 3049\n  /**                                                                                                                  // 3050\n   * ------------------------------------------------------------------------                                          // 3051\n   * jQuery                                                                                                            // 3052\n   * ------------------------------------------------------------------------                                          // 3053\n   */                                                                                                                  // 3054\n                                                                                                                       // 3055\n                                                                                                                       // 3056\n  $$$1.fn[NAME] = Tooltip._jQueryInterface;                                                                            // 3057\n  $$$1.fn[NAME].Constructor = Tooltip;                                                                                 // 3058\n                                                                                                                       // 3059\n  $$$1.fn[NAME].noConflict = function () {                                                                             // 3060\n    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;                                                                                // 3061\n    return Tooltip._jQueryInterface;                                                                                   // 3062\n  };                                                                                                                   // 3063\n                                                                                                                       // 3064\n  return Tooltip;                                                                                                      // 3065\n}($, Popper);                                                                                                          // 3066\n                                                                                                                       // 3067\n/**                                                                                                                    // 3068\n * --------------------------------------------------------------------------                                          // 3069\n * Bootstrap (v4.0.0-beta.2): popover.js                                                                               // 3070\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 3071\n * --------------------------------------------------------------------------                                          // 3072\n */                                                                                                                    // 3073\n                                                                                                                       // 3074\nvar Popover = function ($$$1) {                                                                                        // 3075\n  /**                                                                                                                  // 3076\n   * ------------------------------------------------------------------------                                          // 3077\n   * Constants                                                                                                         // 3078\n   * ------------------------------------------------------------------------                                          // 3079\n   */                                                                                                                  // 3080\n  var NAME = 'popover';                                                                                                // 3081\n  var VERSION = '4.0.0-beta.2';                                                                                        // 3082\n  var DATA_KEY = 'bs.popover';                                                                                         // 3083\n  var EVENT_KEY = \".\" + DATA_KEY;                                                                                      // 3084\n  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];                                                                              // 3085\n  var CLASS_PREFIX = 'bs-popover';                                                                                     // 3086\n  var BSCLS_PREFIX_REGEX = new RegExp(\"(^|\\\\s)\" + CLASS_PREFIX + \"\\\\S+\", 'g');                                         // 3087\n  var Default = $$$1.extend({}, Tooltip.Default, {                                                                     // 3088\n    placement: 'right',                                                                                                // 3089\n    trigger: 'click',                                                                                                  // 3090\n    content: '',                                                                                                       // 3091\n    template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div></div>'\n  });                                                                                                                  // 3093\n  var DefaultType = $$$1.extend({}, Tooltip.DefaultType, {                                                             // 3094\n    content: '(string|element|function)'                                                                               // 3095\n  });                                                                                                                  // 3096\n  var ClassName = {                                                                                                    // 3097\n    FADE: 'fade',                                                                                                      // 3098\n    SHOW: 'show'                                                                                                       // 3099\n  };                                                                                                                   // 3100\n  var Selector = {                                                                                                     // 3101\n    TITLE: '.popover-header',                                                                                          // 3102\n    CONTENT: '.popover-body'                                                                                           // 3103\n  };                                                                                                                   // 3104\n  var Event = {                                                                                                        // 3105\n    HIDE: \"hide\" + EVENT_KEY,                                                                                          // 3106\n    HIDDEN: \"hidden\" + EVENT_KEY,                                                                                      // 3107\n    SHOW: \"show\" + EVENT_KEY,                                                                                          // 3108\n    SHOWN: \"shown\" + EVENT_KEY,                                                                                        // 3109\n    INSERTED: \"inserted\" + EVENT_KEY,                                                                                  // 3110\n    CLICK: \"click\" + EVENT_KEY,                                                                                        // 3111\n    FOCUSIN: \"focusin\" + EVENT_KEY,                                                                                    // 3112\n    FOCUSOUT: \"focusout\" + EVENT_KEY,                                                                                  // 3113\n    MOUSEENTER: \"mouseenter\" + EVENT_KEY,                                                                              // 3114\n    MOUSELEAVE: \"mouseleave\" + EVENT_KEY                                                                               // 3115\n    /**                                                                                                                // 3116\n     * ------------------------------------------------------------------------                                        // 3117\n     * Class Definition                                                                                                // 3118\n     * ------------------------------------------------------------------------                                        // 3119\n     */                                                                                                                // 3120\n                                                                                                                       // 3121\n  };                                                                                                                   // 3122\n                                                                                                                       // 3123\n  var Popover =                                                                                                        // 3124\n  /*#__PURE__*/                                                                                                        // 3125\n  function (_Tooltip) {                                                                                                // 3126\n    inheritsLoose(Popover, _Tooltip);                                                                                  // 3127\n                                                                                                                       // 3128\n    function Popover() {                                                                                               // 3129\n      return _Tooltip.apply(this, arguments) || this;                                                                  // 3130\n    }                                                                                                                  // 3131\n                                                                                                                       // 3132\n    var _proto = Popover.prototype;                                                                                    // 3133\n                                                                                                                       // 3134\n    // overrides                                                                                                       // 3135\n    _proto.isWithContent = function isWithContent() {                                                                  // 3136\n      return this.getTitle() || this._getContent();                                                                    // 3137\n    };                                                                                                                 // 3138\n                                                                                                                       // 3139\n    _proto.addAttachmentClass = function addAttachmentClass(attachment) {                                              // 3140\n      $$$1(this.getTipElement()).addClass(CLASS_PREFIX + \"-\" + attachment);                                            // 3141\n    };                                                                                                                 // 3142\n                                                                                                                       // 3143\n    _proto.getTipElement = function getTipElement() {                                                                  // 3144\n      this.tip = this.tip || $$$1(this.config.template)[0];                                                            // 3145\n      return this.tip;                                                                                                 // 3146\n    };                                                                                                                 // 3147\n                                                                                                                       // 3148\n    _proto.setContent = function setContent() {                                                                        // 3149\n      var $tip = $$$1(this.getTipElement()); // we use append for html objects to maintain js events                   // 3150\n                                                                                                                       // 3151\n      this.setElementContent($tip.find(Selector.TITLE), this.getTitle());                                              // 3152\n      this.setElementContent($tip.find(Selector.CONTENT), this._getContent());                                         // 3153\n      $tip.removeClass(ClassName.FADE + \" \" + ClassName.SHOW);                                                         // 3154\n    }; // private                                                                                                      // 3155\n                                                                                                                       // 3156\n                                                                                                                       // 3157\n    _proto._getContent = function _getContent() {                                                                      // 3158\n      return this.element.getAttribute('data-content') || (typeof this.config.content === 'function' ? this.config.content.call(this.element) : this.config.content);\n    };                                                                                                                 // 3160\n                                                                                                                       // 3161\n    _proto._cleanTipClass = function _cleanTipClass() {                                                                // 3162\n      var $tip = $$$1(this.getTipElement());                                                                           // 3163\n      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);                                                     // 3164\n                                                                                                                       // 3165\n      if (tabClass !== null && tabClass.length > 0) {                                                                  // 3166\n        $tip.removeClass(tabClass.join(''));                                                                           // 3167\n      }                                                                                                                // 3168\n    }; // static                                                                                                       // 3169\n                                                                                                                       // 3170\n                                                                                                                       // 3171\n    Popover._jQueryInterface = function _jQueryInterface(config) {                                                     // 3172\n      return this.each(function () {                                                                                   // 3173\n        var data = $$$1(this).data(DATA_KEY);                                                                          // 3174\n                                                                                                                       // 3175\n        var _config = typeof config === 'object' ? config : null;                                                      // 3176\n                                                                                                                       // 3177\n        if (!data && /destroy|hide/.test(config)) {                                                                    // 3178\n          return;                                                                                                      // 3179\n        }                                                                                                              // 3180\n                                                                                                                       // 3181\n        if (!data) {                                                                                                   // 3182\n          data = new Popover(this, _config);                                                                           // 3183\n          $$$1(this).data(DATA_KEY, data);                                                                             // 3184\n        }                                                                                                              // 3185\n                                                                                                                       // 3186\n        if (typeof config === 'string') {                                                                              // 3187\n          if (typeof data[config] === 'undefined') {                                                                   // 3188\n            throw new Error(\"No method named \\\"\" + config + \"\\\"\");                                                     // 3189\n          }                                                                                                            // 3190\n                                                                                                                       // 3191\n          data[config]();                                                                                              // 3192\n        }                                                                                                              // 3193\n      });                                                                                                              // 3194\n    };                                                                                                                 // 3195\n                                                                                                                       // 3196\n    createClass(Popover, null, [{                                                                                      // 3197\n      key: \"VERSION\",                                                                                                  // 3198\n      // getters                                                                                                       // 3199\n      get: function get() {                                                                                            // 3200\n        return VERSION;                                                                                                // 3201\n      }                                                                                                                // 3202\n    }, {                                                                                                               // 3203\n      key: \"Default\",                                                                                                  // 3204\n      get: function get() {                                                                                            // 3205\n        return Default;                                                                                                // 3206\n      }                                                                                                                // 3207\n    }, {                                                                                                               // 3208\n      key: \"NAME\",                                                                                                     // 3209\n      get: function get() {                                                                                            // 3210\n        return NAME;                                                                                                   // 3211\n      }                                                                                                                // 3212\n    }, {                                                                                                               // 3213\n      key: \"DATA_KEY\",                                                                                                 // 3214\n      get: function get() {                                                                                            // 3215\n        return DATA_KEY;                                                                                               // 3216\n      }                                                                                                                // 3217\n    }, {                                                                                                               // 3218\n      key: \"Event\",                                                                                                    // 3219\n      get: function get() {                                                                                            // 3220\n        return Event;                                                                                                  // 3221\n      }                                                                                                                // 3222\n    }, {                                                                                                               // 3223\n      key: \"EVENT_KEY\",                                                                                                // 3224\n      get: function get() {                                                                                            // 3225\n        return EVENT_KEY;                                                                                              // 3226\n      }                                                                                                                // 3227\n    }, {                                                                                                               // 3228\n      key: \"DefaultType\",                                                                                              // 3229\n      get: function get() {                                                                                            // 3230\n        return DefaultType;                                                                                            // 3231\n      }                                                                                                                // 3232\n    }]);                                                                                                               // 3233\n    return Popover;                                                                                                    // 3234\n  }(Tooltip);                                                                                                          // 3235\n  /**                                                                                                                  // 3236\n   * ------------------------------------------------------------------------                                          // 3237\n   * jQuery                                                                                                            // 3238\n   * ------------------------------------------------------------------------                                          // 3239\n   */                                                                                                                  // 3240\n                                                                                                                       // 3241\n                                                                                                                       // 3242\n  $$$1.fn[NAME] = Popover._jQueryInterface;                                                                            // 3243\n  $$$1.fn[NAME].Constructor = Popover;                                                                                 // 3244\n                                                                                                                       // 3245\n  $$$1.fn[NAME].noConflict = function () {                                                                             // 3246\n    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;                                                                                // 3247\n    return Popover._jQueryInterface;                                                                                   // 3248\n  };                                                                                                                   // 3249\n                                                                                                                       // 3250\n  return Popover;                                                                                                      // 3251\n}($);                                                                                                                  // 3252\n                                                                                                                       // 3253\n/**                                                                                                                    // 3254\n * --------------------------------------------------------------------------                                          // 3255\n * Bootstrap (v4.0.0-beta.2): scrollspy.js                                                                             // 3256\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 3257\n * --------------------------------------------------------------------------                                          // 3258\n */                                                                                                                    // 3259\n                                                                                                                       // 3260\nvar ScrollSpy = function ($$$1) {                                                                                      // 3261\n  /**                                                                                                                  // 3262\n   * ------------------------------------------------------------------------                                          // 3263\n   * Constants                                                                                                         // 3264\n   * ------------------------------------------------------------------------                                          // 3265\n   */                                                                                                                  // 3266\n  var NAME = 'scrollspy';                                                                                              // 3267\n  var VERSION = '4.0.0-beta.2';                                                                                        // 3268\n  var DATA_KEY = 'bs.scrollspy';                                                                                       // 3269\n  var EVENT_KEY = \".\" + DATA_KEY;                                                                                      // 3270\n  var DATA_API_KEY = '.data-api';                                                                                      // 3271\n  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];                                                                              // 3272\n  var Default = {                                                                                                      // 3273\n    offset: 10,                                                                                                        // 3274\n    method: 'auto',                                                                                                    // 3275\n    target: ''                                                                                                         // 3276\n  };                                                                                                                   // 3277\n  var DefaultType = {                                                                                                  // 3278\n    offset: 'number',                                                                                                  // 3279\n    method: 'string',                                                                                                  // 3280\n    target: '(string|element)'                                                                                         // 3281\n  };                                                                                                                   // 3282\n  var Event = {                                                                                                        // 3283\n    ACTIVATE: \"activate\" + EVENT_KEY,                                                                                  // 3284\n    SCROLL: \"scroll\" + EVENT_KEY,                                                                                      // 3285\n    LOAD_DATA_API: \"load\" + EVENT_KEY + DATA_API_KEY                                                                   // 3286\n  };                                                                                                                   // 3287\n  var ClassName = {                                                                                                    // 3288\n    DROPDOWN_ITEM: 'dropdown-item',                                                                                    // 3289\n    DROPDOWN_MENU: 'dropdown-menu',                                                                                    // 3290\n    ACTIVE: 'active'                                                                                                   // 3291\n  };                                                                                                                   // 3292\n  var Selector = {                                                                                                     // 3293\n    DATA_SPY: '[data-spy=\"scroll\"]',                                                                                   // 3294\n    ACTIVE: '.active',                                                                                                 // 3295\n    NAV_LIST_GROUP: '.nav, .list-group',                                                                               // 3296\n    NAV_LINKS: '.nav-link',                                                                                            // 3297\n    NAV_ITEMS: '.nav-item',                                                                                            // 3298\n    LIST_ITEMS: '.list-group-item',                                                                                    // 3299\n    DROPDOWN: '.dropdown',                                                                                             // 3300\n    DROPDOWN_ITEMS: '.dropdown-item',                                                                                  // 3301\n    DROPDOWN_TOGGLE: '.dropdown-toggle'                                                                                // 3302\n  };                                                                                                                   // 3303\n  var OffsetMethod = {                                                                                                 // 3304\n    OFFSET: 'offset',                                                                                                  // 3305\n    POSITION: 'position'                                                                                               // 3306\n    /**                                                                                                                // 3307\n     * ------------------------------------------------------------------------                                        // 3308\n     * Class Definition                                                                                                // 3309\n     * ------------------------------------------------------------------------                                        // 3310\n     */                                                                                                                // 3311\n                                                                                                                       // 3312\n  };                                                                                                                   // 3313\n                                                                                                                       // 3314\n  var ScrollSpy =                                                                                                      // 3315\n  /*#__PURE__*/                                                                                                        // 3316\n  function () {                                                                                                        // 3317\n    function ScrollSpy(element, config) {                                                                              // 3318\n      var _this = this;                                                                                                // 3319\n                                                                                                                       // 3320\n      this._element = element;                                                                                         // 3321\n      this._scrollElement = element.tagName === 'BODY' ? window : element;                                             // 3322\n      this._config = this._getConfig(config);                                                                          // 3323\n      this._selector = this._config.target + \" \" + Selector.NAV_LINKS + \",\" + (this._config.target + \" \" + Selector.LIST_ITEMS + \",\") + (this._config.target + \" \" + Selector.DROPDOWN_ITEMS);\n      this._offsets = [];                                                                                              // 3325\n      this._targets = [];                                                                                              // 3326\n      this._activeTarget = null;                                                                                       // 3327\n      this._scrollHeight = 0;                                                                                          // 3328\n      $$$1(this._scrollElement).on(Event.SCROLL, function (event) {                                                    // 3329\n        return _this._process(event);                                                                                  // 3330\n      });                                                                                                              // 3331\n      this.refresh();                                                                                                  // 3332\n                                                                                                                       // 3333\n      this._process();                                                                                                 // 3334\n    } // getters                                                                                                       // 3335\n                                                                                                                       // 3336\n                                                                                                                       // 3337\n    var _proto = ScrollSpy.prototype;                                                                                  // 3338\n                                                                                                                       // 3339\n    // public                                                                                                          // 3340\n    _proto.refresh = function refresh() {                                                                              // 3341\n      var _this2 = this;                                                                                               // 3342\n                                                                                                                       // 3343\n      var autoMethod = this._scrollElement !== this._scrollElement.window ? OffsetMethod.POSITION : OffsetMethod.OFFSET;\n      var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;                            // 3345\n      var offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;                              // 3346\n      this._offsets = [];                                                                                              // 3347\n      this._targets = [];                                                                                              // 3348\n      this._scrollHeight = this._getScrollHeight();                                                                    // 3349\n      var targets = $$$1.makeArray($$$1(this._selector));                                                              // 3350\n      targets.map(function (element) {                                                                                 // 3351\n        var target;                                                                                                    // 3352\n        var targetSelector = Util.getSelectorFromElement(element);                                                     // 3353\n                                                                                                                       // 3354\n        if (targetSelector) {                                                                                          // 3355\n          target = $$$1(targetSelector)[0];                                                                            // 3356\n        }                                                                                                              // 3357\n                                                                                                                       // 3358\n        if (target) {                                                                                                  // 3359\n          var targetBCR = target.getBoundingClientRect();                                                              // 3360\n                                                                                                                       // 3361\n          if (targetBCR.width || targetBCR.height) {                                                                   // 3362\n            // todo (fat): remove sketch reliance on jQuery position/offset                                            // 3363\n            return [$$$1(target)[offsetMethod]().top + offsetBase, targetSelector];                                    // 3364\n          }                                                                                                            // 3365\n        }                                                                                                              // 3366\n                                                                                                                       // 3367\n        return null;                                                                                                   // 3368\n      }).filter(function (item) {                                                                                      // 3369\n        return item;                                                                                                   // 3370\n      }).sort(function (a, b) {                                                                                        // 3371\n        return a[0] - b[0];                                                                                            // 3372\n      }).forEach(function (item) {                                                                                     // 3373\n        _this2._offsets.push(item[0]);                                                                                 // 3374\n                                                                                                                       // 3375\n        _this2._targets.push(item[1]);                                                                                 // 3376\n      });                                                                                                              // 3377\n    };                                                                                                                 // 3378\n                                                                                                                       // 3379\n    _proto.dispose = function dispose() {                                                                              // 3380\n      $$$1.removeData(this._element, DATA_KEY);                                                                        // 3381\n      $$$1(this._scrollElement).off(EVENT_KEY);                                                                        // 3382\n      this._element = null;                                                                                            // 3383\n      this._scrollElement = null;                                                                                      // 3384\n      this._config = null;                                                                                             // 3385\n      this._selector = null;                                                                                           // 3386\n      this._offsets = null;                                                                                            // 3387\n      this._targets = null;                                                                                            // 3388\n      this._activeTarget = null;                                                                                       // 3389\n      this._scrollHeight = null;                                                                                       // 3390\n    }; // private                                                                                                      // 3391\n                                                                                                                       // 3392\n                                                                                                                       // 3393\n    _proto._getConfig = function _getConfig(config) {                                                                  // 3394\n      config = $$$1.extend({}, Default, config);                                                                       // 3395\n                                                                                                                       // 3396\n      if (typeof config.target !== 'string') {                                                                         // 3397\n        var id = $$$1(config.target).attr('id');                                                                       // 3398\n                                                                                                                       // 3399\n        if (!id) {                                                                                                     // 3400\n          id = Util.getUID(NAME);                                                                                      // 3401\n          $$$1(config.target).attr('id', id);                                                                          // 3402\n        }                                                                                                              // 3403\n                                                                                                                       // 3404\n        config.target = \"#\" + id;                                                                                      // 3405\n      }                                                                                                                // 3406\n                                                                                                                       // 3407\n      Util.typeCheckConfig(NAME, config, DefaultType);                                                                 // 3408\n      return config;                                                                                                   // 3409\n    };                                                                                                                 // 3410\n                                                                                                                       // 3411\n    _proto._getScrollTop = function _getScrollTop() {                                                                  // 3412\n      return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;         // 3413\n    };                                                                                                                 // 3414\n                                                                                                                       // 3415\n    _proto._getScrollHeight = function _getScrollHeight() {                                                            // 3416\n      return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\n    };                                                                                                                 // 3418\n                                                                                                                       // 3419\n    _proto._getOffsetHeight = function _getOffsetHeight() {                                                            // 3420\n      return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;\n    };                                                                                                                 // 3422\n                                                                                                                       // 3423\n    _proto._process = function _process() {                                                                            // 3424\n      var scrollTop = this._getScrollTop() + this._config.offset;                                                      // 3425\n                                                                                                                       // 3426\n      var scrollHeight = this._getScrollHeight();                                                                      // 3427\n                                                                                                                       // 3428\n      var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();                                    // 3429\n                                                                                                                       // 3430\n      if (this._scrollHeight !== scrollHeight) {                                                                       // 3431\n        this.refresh();                                                                                                // 3432\n      }                                                                                                                // 3433\n                                                                                                                       // 3434\n      if (scrollTop >= maxScroll) {                                                                                    // 3435\n        var target = this._targets[this._targets.length - 1];                                                          // 3436\n                                                                                                                       // 3437\n        if (this._activeTarget !== target) {                                                                           // 3438\n          this._activate(target);                                                                                      // 3439\n        }                                                                                                              // 3440\n                                                                                                                       // 3441\n        return;                                                                                                        // 3442\n      }                                                                                                                // 3443\n                                                                                                                       // 3444\n      if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {                                // 3445\n        this._activeTarget = null;                                                                                     // 3446\n                                                                                                                       // 3447\n        this._clear();                                                                                                 // 3448\n                                                                                                                       // 3449\n        return;                                                                                                        // 3450\n      }                                                                                                                // 3451\n                                                                                                                       // 3452\n      for (var i = this._offsets.length; i--;) {                                                                       // 3453\n        var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);\n                                                                                                                       // 3455\n        if (isActiveTarget) {                                                                                          // 3456\n          this._activate(this._targets[i]);                                                                            // 3457\n        }                                                                                                              // 3458\n      }                                                                                                                // 3459\n    };                                                                                                                 // 3460\n                                                                                                                       // 3461\n    _proto._activate = function _activate(target) {                                                                    // 3462\n      this._activeTarget = target;                                                                                     // 3463\n                                                                                                                       // 3464\n      this._clear();                                                                                                   // 3465\n                                                                                                                       // 3466\n      var queries = this._selector.split(','); // eslint-disable-next-line arrow-body-style                            // 3467\n                                                                                                                       // 3468\n                                                                                                                       // 3469\n      queries = queries.map(function (selector) {                                                                      // 3470\n        return selector + \"[data-target=\\\"\" + target + \"\\\"],\" + (selector + \"[href=\\\"\" + target + \"\\\"]\");              // 3471\n      });                                                                                                              // 3472\n      var $link = $$$1(queries.join(','));                                                                             // 3473\n                                                                                                                       // 3474\n      if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {                                                                   // 3475\n        $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);                    // 3476\n        $link.addClass(ClassName.ACTIVE);                                                                              // 3477\n      } else {                                                                                                         // 3478\n        // Set triggered link as active                                                                                // 3479\n        $link.addClass(ClassName.ACTIVE); // Set triggered links parents as active                                     // 3480\n        // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor                        // 3481\n                                                                                                                       // 3482\n        $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_LINKS + \", \" + Selector.LIST_ITEMS).addClass(ClassName.ACTIVE); // Handle special case when .nav-link is inside .nav-item\n                                                                                                                       // 3484\n        $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_ITEMS).children(Selector.NAV_LINKS).addClass(ClassName.ACTIVE);\n      }                                                                                                                // 3486\n                                                                                                                       // 3487\n      $$$1(this._scrollElement).trigger(Event.ACTIVATE, {                                                              // 3488\n        relatedTarget: target                                                                                          // 3489\n      });                                                                                                              // 3490\n    };                                                                                                                 // 3491\n                                                                                                                       // 3492\n    _proto._clear = function _clear() {                                                                                // 3493\n      $$$1(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE);                                      // 3494\n    }; // static                                                                                                       // 3495\n                                                                                                                       // 3496\n                                                                                                                       // 3497\n    ScrollSpy._jQueryInterface = function _jQueryInterface(config) {                                                   // 3498\n      return this.each(function () {                                                                                   // 3499\n        var data = $$$1(this).data(DATA_KEY);                                                                          // 3500\n                                                                                                                       // 3501\n        var _config = typeof config === 'object' && config;                                                            // 3502\n                                                                                                                       // 3503\n        if (!data) {                                                                                                   // 3504\n          data = new ScrollSpy(this, _config);                                                                         // 3505\n          $$$1(this).data(DATA_KEY, data);                                                                             // 3506\n        }                                                                                                              // 3507\n                                                                                                                       // 3508\n        if (typeof config === 'string') {                                                                              // 3509\n          if (typeof data[config] === 'undefined') {                                                                   // 3510\n            throw new Error(\"No method named \\\"\" + config + \"\\\"\");                                                     // 3511\n          }                                                                                                            // 3512\n                                                                                                                       // 3513\n          data[config]();                                                                                              // 3514\n        }                                                                                                              // 3515\n      });                                                                                                              // 3516\n    };                                                                                                                 // 3517\n                                                                                                                       // 3518\n    createClass(ScrollSpy, null, [{                                                                                    // 3519\n      key: \"VERSION\",                                                                                                  // 3520\n      get: function get() {                                                                                            // 3521\n        return VERSION;                                                                                                // 3522\n      }                                                                                                                // 3523\n    }, {                                                                                                               // 3524\n      key: \"Default\",                                                                                                  // 3525\n      get: function get() {                                                                                            // 3526\n        return Default;                                                                                                // 3527\n      }                                                                                                                // 3528\n    }]);                                                                                                               // 3529\n    return ScrollSpy;                                                                                                  // 3530\n  }();                                                                                                                 // 3531\n  /**                                                                                                                  // 3532\n   * ------------------------------------------------------------------------                                          // 3533\n   * Data Api implementation                                                                                           // 3534\n   * ------------------------------------------------------------------------                                          // 3535\n   */                                                                                                                  // 3536\n                                                                                                                       // 3537\n                                                                                                                       // 3538\n  $$$1(window).on(Event.LOAD_DATA_API, function () {                                                                   // 3539\n    var scrollSpys = $$$1.makeArray($$$1(Selector.DATA_SPY));                                                          // 3540\n                                                                                                                       // 3541\n    for (var i = scrollSpys.length; i--;) {                                                                            // 3542\n      var $spy = $$$1(scrollSpys[i]);                                                                                  // 3543\n                                                                                                                       // 3544\n      ScrollSpy._jQueryInterface.call($spy, $spy.data());                                                              // 3545\n    }                                                                                                                  // 3546\n  });                                                                                                                  // 3547\n  /**                                                                                                                  // 3548\n   * ------------------------------------------------------------------------                                          // 3549\n   * jQuery                                                                                                            // 3550\n   * ------------------------------------------------------------------------                                          // 3551\n   */                                                                                                                  // 3552\n                                                                                                                       // 3553\n  $$$1.fn[NAME] = ScrollSpy._jQueryInterface;                                                                          // 3554\n  $$$1.fn[NAME].Constructor = ScrollSpy;                                                                               // 3555\n                                                                                                                       // 3556\n  $$$1.fn[NAME].noConflict = function () {                                                                             // 3557\n    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;                                                                                // 3558\n    return ScrollSpy._jQueryInterface;                                                                                 // 3559\n  };                                                                                                                   // 3560\n                                                                                                                       // 3561\n  return ScrollSpy;                                                                                                    // 3562\n}($);                                                                                                                  // 3563\n                                                                                                                       // 3564\n/**                                                                                                                    // 3565\n * --------------------------------------------------------------------------                                          // 3566\n * Bootstrap (v4.0.0-beta.2): tab.js                                                                                   // 3567\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 3568\n * --------------------------------------------------------------------------                                          // 3569\n */                                                                                                                    // 3570\n                                                                                                                       // 3571\nvar Tab = function ($$$1) {                                                                                            // 3572\n  /**                                                                                                                  // 3573\n   * ------------------------------------------------------------------------                                          // 3574\n   * Constants                                                                                                         // 3575\n   * ------------------------------------------------------------------------                                          // 3576\n   */                                                                                                                  // 3577\n  var NAME = 'tab';                                                                                                    // 3578\n  var VERSION = '4.0.0-beta.2';                                                                                        // 3579\n  var DATA_KEY = 'bs.tab';                                                                                             // 3580\n  var EVENT_KEY = \".\" + DATA_KEY;                                                                                      // 3581\n  var DATA_API_KEY = '.data-api';                                                                                      // 3582\n  var JQUERY_NO_CONFLICT = $$$1.fn[NAME];                                                                              // 3583\n  var TRANSITION_DURATION = 150;                                                                                       // 3584\n  var Event = {                                                                                                        // 3585\n    HIDE: \"hide\" + EVENT_KEY,                                                                                          // 3586\n    HIDDEN: \"hidden\" + EVENT_KEY,                                                                                      // 3587\n    SHOW: \"show\" + EVENT_KEY,                                                                                          // 3588\n    SHOWN: \"shown\" + EVENT_KEY,                                                                                        // 3589\n    CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY                                                                 // 3590\n  };                                                                                                                   // 3591\n  var ClassName = {                                                                                                    // 3592\n    DROPDOWN_MENU: 'dropdown-menu',                                                                                    // 3593\n    ACTIVE: 'active',                                                                                                  // 3594\n    DISABLED: 'disabled',                                                                                              // 3595\n    FADE: 'fade',                                                                                                      // 3596\n    SHOW: 'show'                                                                                                       // 3597\n  };                                                                                                                   // 3598\n  var Selector = {                                                                                                     // 3599\n    DROPDOWN: '.dropdown',                                                                                             // 3600\n    NAV_LIST_GROUP: '.nav, .list-group',                                                                               // 3601\n    ACTIVE: '.active',                                                                                                 // 3602\n    ACTIVE_UL: '> li > .active',                                                                                       // 3603\n    DATA_TOGGLE: '[data-toggle=\"tab\"], [data-toggle=\"pill\"], [data-toggle=\"list\"]',                                    // 3604\n    DROPDOWN_TOGGLE: '.dropdown-toggle',                                                                               // 3605\n    DROPDOWN_ACTIVE_CHILD: '> .dropdown-menu .active'                                                                  // 3606\n    /**                                                                                                                // 3607\n     * ------------------------------------------------------------------------                                        // 3608\n     * Class Definition                                                                                                // 3609\n     * ------------------------------------------------------------------------                                        // 3610\n     */                                                                                                                // 3611\n                                                                                                                       // 3612\n  };                                                                                                                   // 3613\n                                                                                                                       // 3614\n  var Tab =                                                                                                            // 3615\n  /*#__PURE__*/                                                                                                        // 3616\n  function () {                                                                                                        // 3617\n    function Tab(element) {                                                                                            // 3618\n      this._element = element;                                                                                         // 3619\n    } // getters                                                                                                       // 3620\n                                                                                                                       // 3621\n                                                                                                                       // 3622\n    var _proto = Tab.prototype;                                                                                        // 3623\n                                                                                                                       // 3624\n    // public                                                                                                          // 3625\n    _proto.show = function show() {                                                                                    // 3626\n      var _this = this;                                                                                                // 3627\n                                                                                                                       // 3628\n      if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $$$1(this._element).hasClass(ClassName.ACTIVE) || $$$1(this._element).hasClass(ClassName.DISABLED)) {\n        return;                                                                                                        // 3630\n      }                                                                                                                // 3631\n                                                                                                                       // 3632\n      var target;                                                                                                      // 3633\n      var previous;                                                                                                    // 3634\n      var listElement = $$$1(this._element).closest(Selector.NAV_LIST_GROUP)[0];                                       // 3635\n      var selector = Util.getSelectorFromElement(this._element);                                                       // 3636\n                                                                                                                       // 3637\n      if (listElement) {                                                                                               // 3638\n        var itemSelector = listElement.nodeName === 'UL' ? Selector.ACTIVE_UL : Selector.ACTIVE;                       // 3639\n        previous = $$$1.makeArray($$$1(listElement).find(itemSelector));                                               // 3640\n        previous = previous[previous.length - 1];                                                                      // 3641\n      }                                                                                                                // 3642\n                                                                                                                       // 3643\n      var hideEvent = $$$1.Event(Event.HIDE, {                                                                         // 3644\n        relatedTarget: this._element                                                                                   // 3645\n      });                                                                                                              // 3646\n      var showEvent = $$$1.Event(Event.SHOW, {                                                                         // 3647\n        relatedTarget: previous                                                                                        // 3648\n      });                                                                                                              // 3649\n                                                                                                                       // 3650\n      if (previous) {                                                                                                  // 3651\n        $$$1(previous).trigger(hideEvent);                                                                             // 3652\n      }                                                                                                                // 3653\n                                                                                                                       // 3654\n      $$$1(this._element).trigger(showEvent);                                                                          // 3655\n                                                                                                                       // 3656\n      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {                                          // 3657\n        return;                                                                                                        // 3658\n      }                                                                                                                // 3659\n                                                                                                                       // 3660\n      if (selector) {                                                                                                  // 3661\n        target = $$$1(selector)[0];                                                                                    // 3662\n      }                                                                                                                // 3663\n                                                                                                                       // 3664\n      this._activate(this._element, listElement);                                                                      // 3665\n                                                                                                                       // 3666\n      var complete = function complete() {                                                                             // 3667\n        var hiddenEvent = $$$1.Event(Event.HIDDEN, {                                                                   // 3668\n          relatedTarget: _this._element                                                                                // 3669\n        });                                                                                                            // 3670\n        var shownEvent = $$$1.Event(Event.SHOWN, {                                                                     // 3671\n          relatedTarget: previous                                                                                      // 3672\n        });                                                                                                            // 3673\n        $$$1(previous).trigger(hiddenEvent);                                                                           // 3674\n        $$$1(_this._element).trigger(shownEvent);                                                                      // 3675\n      };                                                                                                               // 3676\n                                                                                                                       // 3677\n      if (target) {                                                                                                    // 3678\n        this._activate(target, target.parentNode, complete);                                                           // 3679\n      } else {                                                                                                         // 3680\n        complete();                                                                                                    // 3681\n      }                                                                                                                // 3682\n    };                                                                                                                 // 3683\n                                                                                                                       // 3684\n    _proto.dispose = function dispose() {                                                                              // 3685\n      $$$1.removeData(this._element, DATA_KEY);                                                                        // 3686\n      this._element = null;                                                                                            // 3687\n    }; // private                                                                                                      // 3688\n                                                                                                                       // 3689\n                                                                                                                       // 3690\n    _proto._activate = function _activate(element, container, callback) {                                              // 3691\n      var _this2 = this;                                                                                               // 3692\n                                                                                                                       // 3693\n      var activeElements;                                                                                              // 3694\n                                                                                                                       // 3695\n      if (container.nodeName === 'UL') {                                                                               // 3696\n        activeElements = $$$1(container).find(Selector.ACTIVE_UL);                                                     // 3697\n      } else {                                                                                                         // 3698\n        activeElements = $$$1(container).children(Selector.ACTIVE);                                                    // 3699\n      }                                                                                                                // 3700\n                                                                                                                       // 3701\n      var active = activeElements[0];                                                                                  // 3702\n      var isTransitioning = callback && Util.supportsTransitionEnd() && active && $$$1(active).hasClass(ClassName.FADE);\n                                                                                                                       // 3704\n      var complete = function complete() {                                                                             // 3705\n        return _this2._transitionComplete(element, active, isTransitioning, callback);                                 // 3706\n      };                                                                                                               // 3707\n                                                                                                                       // 3708\n      if (active && isTransitioning) {                                                                                 // 3709\n        $$$1(active).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);                     // 3710\n      } else {                                                                                                         // 3711\n        complete();                                                                                                    // 3712\n      }                                                                                                                // 3713\n                                                                                                                       // 3714\n      if (active) {                                                                                                    // 3715\n        $$$1(active).removeClass(ClassName.SHOW);                                                                      // 3716\n      }                                                                                                                // 3717\n    };                                                                                                                 // 3718\n                                                                                                                       // 3719\n    _proto._transitionComplete = function _transitionComplete(element, active, isTransitioning, callback) {            // 3720\n      if (active) {                                                                                                    // 3721\n        $$$1(active).removeClass(ClassName.ACTIVE);                                                                    // 3722\n        var dropdownChild = $$$1(active.parentNode).find(Selector.DROPDOWN_ACTIVE_CHILD)[0];                           // 3723\n                                                                                                                       // 3724\n        if (dropdownChild) {                                                                                           // 3725\n          $$$1(dropdownChild).removeClass(ClassName.ACTIVE);                                                           // 3726\n        }                                                                                                              // 3727\n                                                                                                                       // 3728\n        if (active.getAttribute('role') === 'tab') {                                                                   // 3729\n          active.setAttribute('aria-selected', false);                                                                 // 3730\n        }                                                                                                              // 3731\n      }                                                                                                                // 3732\n                                                                                                                       // 3733\n      $$$1(element).addClass(ClassName.ACTIVE);                                                                        // 3734\n                                                                                                                       // 3735\n      if (element.getAttribute('role') === 'tab') {                                                                    // 3736\n        element.setAttribute('aria-selected', true);                                                                   // 3737\n      }                                                                                                                // 3738\n                                                                                                                       // 3739\n      if (isTransitioning) {                                                                                           // 3740\n        Util.reflow(element);                                                                                          // 3741\n        $$$1(element).addClass(ClassName.SHOW);                                                                        // 3742\n      } else {                                                                                                         // 3743\n        $$$1(element).removeClass(ClassName.FADE);                                                                     // 3744\n      }                                                                                                                // 3745\n                                                                                                                       // 3746\n      if (element.parentNode && $$$1(element.parentNode).hasClass(ClassName.DROPDOWN_MENU)) {                          // 3747\n        var dropdownElement = $$$1(element).closest(Selector.DROPDOWN)[0];                                             // 3748\n                                                                                                                       // 3749\n        if (dropdownElement) {                                                                                         // 3750\n          $$$1(dropdownElement).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);                             // 3751\n        }                                                                                                              // 3752\n                                                                                                                       // 3753\n        element.setAttribute('aria-expanded', true);                                                                   // 3754\n      }                                                                                                                // 3755\n                                                                                                                       // 3756\n      if (callback) {                                                                                                  // 3757\n        callback();                                                                                                    // 3758\n      }                                                                                                                // 3759\n    }; // static                                                                                                       // 3760\n                                                                                                                       // 3761\n                                                                                                                       // 3762\n    Tab._jQueryInterface = function _jQueryInterface(config) {                                                         // 3763\n      return this.each(function () {                                                                                   // 3764\n        var $this = $$$1(this);                                                                                        // 3765\n        var data = $this.data(DATA_KEY);                                                                               // 3766\n                                                                                                                       // 3767\n        if (!data) {                                                                                                   // 3768\n          data = new Tab(this);                                                                                        // 3769\n          $this.data(DATA_KEY, data);                                                                                  // 3770\n        }                                                                                                              // 3771\n                                                                                                                       // 3772\n        if (typeof config === 'string') {                                                                              // 3773\n          if (typeof data[config] === 'undefined') {                                                                   // 3774\n            throw new Error(\"No method named \\\"\" + config + \"\\\"\");                                                     // 3775\n          }                                                                                                            // 3776\n                                                                                                                       // 3777\n          data[config]();                                                                                              // 3778\n        }                                                                                                              // 3779\n      });                                                                                                              // 3780\n    };                                                                                                                 // 3781\n                                                                                                                       // 3782\n    createClass(Tab, null, [{                                                                                          // 3783\n      key: \"VERSION\",                                                                                                  // 3784\n      get: function get() {                                                                                            // 3785\n        return VERSION;                                                                                                // 3786\n      }                                                                                                                // 3787\n    }]);                                                                                                               // 3788\n    return Tab;                                                                                                        // 3789\n  }();                                                                                                                 // 3790\n  /**                                                                                                                  // 3791\n   * ------------------------------------------------------------------------                                          // 3792\n   * Data Api implementation                                                                                           // 3793\n   * ------------------------------------------------------------------------                                          // 3794\n   */                                                                                                                  // 3795\n                                                                                                                       // 3796\n                                                                                                                       // 3797\n  $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {                                     // 3798\n    event.preventDefault();                                                                                            // 3799\n                                                                                                                       // 3800\n    Tab._jQueryInterface.call($$$1(this), 'show');                                                                     // 3801\n  });                                                                                                                  // 3802\n  /**                                                                                                                  // 3803\n   * ------------------------------------------------------------------------                                          // 3804\n   * jQuery                                                                                                            // 3805\n   * ------------------------------------------------------------------------                                          // 3806\n   */                                                                                                                  // 3807\n                                                                                                                       // 3808\n  $$$1.fn[NAME] = Tab._jQueryInterface;                                                                                // 3809\n  $$$1.fn[NAME].Constructor = Tab;                                                                                     // 3810\n                                                                                                                       // 3811\n  $$$1.fn[NAME].noConflict = function () {                                                                             // 3812\n    $$$1.fn[NAME] = JQUERY_NO_CONFLICT;                                                                                // 3813\n    return Tab._jQueryInterface;                                                                                       // 3814\n  };                                                                                                                   // 3815\n                                                                                                                       // 3816\n  return Tab;                                                                                                          // 3817\n}($);                                                                                                                  // 3818\n                                                                                                                       // 3819\n/**                                                                                                                    // 3820\n * --------------------------------------------------------------------------                                          // 3821\n * Bootstrap (v4.0.0-alpha.6): index.js                                                                                // 3822\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)                                          // 3823\n * --------------------------------------------------------------------------                                          // 3824\n */                                                                                                                    // 3825\n                                                                                                                       // 3826\n(function ($$$1) {                                                                                                     // 3827\n  if (typeof $$$1 === 'undefined') {                                                                                   // 3828\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\\'s JavaScript.');\n  }                                                                                                                    // 3830\n                                                                                                                       // 3831\n  var version = $$$1.fn.jquery.split(' ')[0].split('.');                                                               // 3832\n  var minMajor = 1;                                                                                                    // 3833\n  var ltMajor = 2;                                                                                                     // 3834\n  var minMinor = 9;                                                                                                    // 3835\n  var minPatch = 1;                                                                                                    // 3836\n  var maxMajor = 4;                                                                                                    // 3837\n                                                                                                                       // 3838\n  if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {\n    throw new Error('Bootstrap\\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0');                   // 3840\n  }                                                                                                                    // 3841\n})($);                                                                                                                 // 3842\n                                                                                                                       // 3843\nexports.Util = Util;                                                                                                   // 3844\nexports.Alert = Alert;                                                                                                 // 3845\nexports.Button = Button;                                                                                               // 3846\nexports.Carousel = Carousel;                                                                                           // 3847\nexports.Collapse = Collapse;                                                                                           // 3848\nexports.Dropdown = Dropdown;                                                                                           // 3849\nexports.Modal = Modal;                                                                                                 // 3850\nexports.Popover = Popover;                                                                                             // 3851\nexports.Scrollspy = ScrollSpy;                                                                                         // 3852\nexports.Tab = Tab;                                                                                                     // 3853\nexports.Tooltip = Tooltip;                                                                                             // 3854\n                                                                                                                       // 3855\nreturn exports;                                                                                                        // 3856\n                                                                                                                       // 3857\n}({},jQuery,Popper));                                                                                                  // 3858\n//# sourceMappingURL=bootstrap.js.map                                                                                  // 3859\n                                                                                                                       // 3860\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['alexwine:bootstrap-4'] = {};\n\n})();\n","servePath":"/packages/alexwine_bootstrap-4.js"}]