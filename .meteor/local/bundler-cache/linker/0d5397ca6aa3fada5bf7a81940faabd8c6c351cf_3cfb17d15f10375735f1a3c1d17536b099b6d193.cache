[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteorMathJax = Package['mrt:mathjax'].MeteorMathJax;\nHelpers = Package['raix:handlebar-helpers'].Helpers;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"problem\":{\"detail.html\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/detail.html                                                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./template.detail.js\"), {                                                                       // 1\n  \"*\": module.makeNsSetter()                                                                                          // 2\n});                                                                                                                   // 3\n                                                                                                                      // 4\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.detail.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/template.detail.js                                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"problem_detail\");                                                                               // 2\nTemplate[\"problem_detail\"] = new Template(\"Template.problem_detail\", (function() {                                    // 3\n  var view = this;                                                                                                    // 4\n  return HTML.DIV({                                                                                                   // 5\n    class: \"card\",                                                                                                    // 6\n    style: function() {                                                                                               // 7\n      return Blaze.Unless(function() {                                                                                // 8\n        return Spacebars.call(Spacebars.dot(view.lookup(\"currentProblemId\"), \"get\"));                                 // 9\n      }, function() {                                                                                                 // 10\n        return \"display:none\";                                                                                        // 11\n      });                                                                                                             // 12\n    }                                                                                                                 // 13\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                             // 14\n    class: \"card-body\"                                                                                                // 15\n  }, \"\\n\\t\\t\\t\", HTML.DIV({                                                                                           // 16\n    class: \"form-group\"                                                                                               // 17\n  }, \"\\n\\t\\t\\t\\t\", HTML.H4({                                                                                          // 18\n    \"data-toggle\": \".title-edit\",                                                                                     // 19\n    class: \"title-view card-title\"                                                                                    // 20\n  }, Blaze.View(\"lookup:currentProblem.title\", function() {                                                           // 21\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"title\"));                                 // 22\n  })), \"\\n\\t\\t\\t\\t\", HTML.INPUT({                                                                                     // 23\n    \"data-toggle\": \".title-view\",                                                                                     // 24\n    class: \"title-edit form-control\",                                                                                 // 25\n    type: \"text\",                                                                                                     // 26\n    name: \"title\",                                                                                                    // 27\n    value: function() {                                                                                               // 28\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"title\"));                               // 29\n    }                                                                                                                 // 30\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\", Blaze.If(function() {                                                                    // 31\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                      // 32\n  }, function() {                                                                                                     // 33\n    return [ \"\\n\\t\\t\\t\", HTML.DIV({                                                                                   // 34\n      class: \"form-group row\"                                                                                         // 35\n    }, \"\\n\\t\\t\\t\\t\", HTML.LABEL({                                                                                     // 36\n      class: \"col-2\"                                                                                                  // 37\n    }, \"\\n\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                                   // 38\n      type: \"checkbox\",                                                                                               // 39\n      name: \"isExam\",                                                                                                 // 40\n      checked: function() {                                                                                           // 41\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"isExam\"));                            // 42\n      }                                                                                                               // 43\n    }), \" Exam\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\", HTML.LABEL({                                                                // 44\n      class: \"col-2\"                                                                                                  // 45\n    }, \"\\n\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                                   // 46\n      type: \"checkbox\",                                                                                               // 47\n      name: \"isPublic\",                                                                                               // 48\n      checked: function() {                                                                                           // 49\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"isPublic\"));                          // 50\n      }                                                                                                               // 51\n    }), \" Public\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];                                                                // 52\n  }), \"\\n\\t\\t\\t\", HTML.DIV({                                                                                          // 53\n    class: \"form-group\"                                                                                               // 54\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<h4 class=\"card-title\">Description</h4>'), \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"mathjax\"), function() {\n    return HTML.P({                                                                                                   // 56\n      \"data-toggle\": \".description-edit\",                                                                             // 57\n      class: \"description-view card-text\"                                                                             // 58\n    }, Blaze.View(\"lookup:currentProblem.description\", function() {                                                   // 59\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"description\"));                         // 60\n    }));                                                                                                              // 61\n  }), \"\\n\\t\\t\\t\\t\", HTML.TEXTAREA({                                                                                   // 62\n    \"data-toggle\": \".description-view\",                                                                               // 63\n    class: \"description-edit form-control\",                                                                           // 64\n    name: \"description\",                                                                                              // 65\n    value: function() {                                                                                               // 66\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"description\"));                         // 67\n    }                                                                                                                 // 68\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                                             // 69\n    class: \"form-group\"                                                                                               // 70\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<h4 class=\"card-title\">Input Format</h4>'), \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"mathjax\"), function() {\n    return HTML.P({                                                                                                   // 72\n      \"data-toggle\": \".inputFormat-edit\",                                                                             // 73\n      class: \"inputFormat-view card-text\"                                                                             // 74\n    }, Blaze.View(\"lookup:currentProblem.inputFormat\", function() {                                                   // 75\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"inputFormat\"));                         // 76\n    }));                                                                                                              // 77\n  }), \"\\n\\t\\t\\t\\t\", HTML.TEXTAREA({                                                                                   // 78\n    \"data-toggle\": \".inputFormat-view\",                                                                               // 79\n    class: \"inputFormat-edit form-control\",                                                                           // 80\n    name: \"inputFormat\",                                                                                              // 81\n    value: function() {                                                                                               // 82\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"inputFormat\"));                         // 83\n    }                                                                                                                 // 84\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                                             // 85\n    class: \"form-group\"                                                                                               // 86\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<h4 class=\"card-title\">Output Format</h4>'), \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"mathjax\"), function() {\n    return HTML.P({                                                                                                   // 88\n      \"data-toggle\": \".outputFormat-edit\",                                                                            // 89\n      class: \"outputFormat-view card-text\"                                                                            // 90\n    }, Blaze.View(\"lookup:currentProblem.outputFormat\", function() {                                                  // 91\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"outputFormat\"));                        // 92\n    }));                                                                                                              // 93\n  }), \"\\n\\t\\t\\t\\t\", HTML.TEXTAREA({                                                                                   // 94\n    \"data-toggle\": \".outputFormat-view\",                                                                              // 95\n    class: \"outputFormat-edit form-control\",                                                                          // 96\n    name: \"outputFormat\",                                                                                             // 97\n    value: function() {                                                                                               // 98\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"outputFormat\"));                        // 99\n    }                                                                                                                 // 100\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                                             // 101\n    class: \"form-group\"                                                                                               // 102\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<h4 class=\"card-title\">Hint</h4>'), \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"mathjax\"), function() {\n    return HTML.P({                                                                                                   // 104\n      \"data-toggle\": \".hint-edit\",                                                                                    // 105\n      class: \"hint-view card-text\"                                                                                    // 106\n    }, Blaze.View(\"lookup:currentProblem.hint\", function() {                                                          // 107\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"hint\"));                                // 108\n    }));                                                                                                              // 109\n  }), \"\\n\\t\\t\\t\\t\", HTML.TEXTAREA({                                                                                   // 110\n    \"data-toggle\": \".hint-view\",                                                                                      // 111\n    class: \"hint-edit form-control\",                                                                                  // 112\n    name: \"hint\",                                                                                                     // 113\n    value: function() {                                                                                               // 114\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"hint\"));                                // 115\n    }                                                                                                                 // 116\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\");                                                                                // 117\n}));                                                                                                                  // 118\n                                                                                                                      // 119\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"list.html\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/list.html                                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./template.list.js\"), {                                                                         // 1\n  \"*\": module.makeNsSetter()                                                                                          // 2\n});                                                                                                                   // 3\n                                                                                                                      // 4\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.list.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/template.list.js                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"problem_list\");                                                                                 // 2\nTemplate[\"problem_list\"] = new Template(\"Template.problem_list\", (function() {                                        // 3\n  var view = this;                                                                                                    // 4\n  return HTML.DIV({                                                                                                   // 5\n    class: \"card\"                                                                                                     // 6\n  }, \"\\n  \\t\\t\", HTML.DIV({                                                                                           // 7\n    class: \"card-header\"                                                                                              // 8\n  }, \"\\n\\t\\t\", Blaze.If(function() {                                                                                  // 9\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                      // 10\n  }, function() {                                                                                                     // 11\n    return [ \"\\n\\t\\t\\t\", HTML.BUTTON({                                                                                // 12\n      class: \"btn btn-sm btn-primary insert-btn fa fa-plus\"                                                           // 13\n    }), \"\\n\\t\\t\" ];                                                                                                   // 14\n  }), \"\\n\\t\\t\\t\", HTML.Raw('<strong class=\"ml-1\">Problem List</strong>'), \"\\n  \\t\\t\"), \"\\n\\t  \\t\", HTML.UL({          // 15\n    class: \"list-group\"                                                                                               // 16\n  }, \"\\n\\t  \\t\", Blaze.Each(function() {                                                                              // 17\n    return {                                                                                                          // 18\n      _sequence: Spacebars.call(view.lookup(\"problemList\")),                                                          // 19\n      _variable: \"problem\"                                                                                            // 20\n    };                                                                                                                // 21\n  }, function() {                                                                                                     // 22\n    return [ \"\\n\\t    \\t\", HTML.LI({                                                                                  // 23\n      \"data-id\": function() {                                                                                         // 24\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"problem\"), \"_id\"));                                      // 25\n      },                                                                                                              // 26\n      class: function() {                                                                                             // 27\n        return [ \"list-group-item get-btn \", Blaze.If(function() {                                                    // 28\n          return Spacebars.dataMustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"currentProblemId\"), \"get\"), Spacebars.dot(view.lookup(\"problem\"), \"_id\"));\n        }, function() {                                                                                               // 30\n          return \"active\";                                                                                            // 31\n        }) ];                                                                                                         // 32\n      }                                                                                                               // 33\n    }, \"\\n\\t    \\t\", Blaze.If(function() {                                                                            // 34\n      return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                    // 35\n    }, function() {                                                                                                   // 36\n      return [ \"\\n\\t    \\t\\t\", HTML.BUTTON({                                                                          // 37\n        class: \"btn btn-sm btn-danger remove-btn fa fa-remove\"                                                        // 38\n      }), \"\\n\\t    \\t\" ];                                                                                             // 39\n    }), \"\\n\\t    \\t\\t\", HTML.SPAN({                                                                                   // 40\n      class: \"ml-1\"                                                                                                   // 41\n    }, Blaze.View(\"lookup:problem.title\", function() {                                                                // 42\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"problem\"), \"title\"));                                      // 43\n    })), \"\\n\\t    \\t\", Blaze.If(function() {                                                                          // 44\n      return Spacebars.call(Spacebars.dot(view.lookup(\"problem\"), \"isExam\"));                                         // 45\n    }, function() {                                                                                                   // 46\n      return [ \"\\n\\t    \\t\\t\", HTML.SPAN({                                                                            // 47\n        class: \"ml-1 fa fa-book\"                                                                                      // 48\n      }), \"\\n\\t    \\t\" ];                                                                                             // 49\n    }), \"\\n\\t    \\t\", Blaze.Unless(function() {                                                                       // 50\n      return Spacebars.call(Spacebars.dot(view.lookup(\"problem\"), \"isPublic\"));                                       // 51\n    }, function() {                                                                                                   // 52\n      return [ \"\\n\\t    \\t\\t\", HTML.SPAN({                                                                            // 53\n        class: \"ml-1 fa fa-ban\"                                                                                       // 54\n      }), \"\\n\\t    \\t\" ];                                                                                             // 55\n    }), \"\\n\\t    \\t\"), \"\\n\\t\\t\" ];                                                                                    // 56\n  }), \"\\n  \\t\\t\"), \"\\n  \\t\");                                                                                         // 57\n}));                                                                                                                  // 58\n                                                                                                                      // 59\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"test.html\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/test.html                                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./template.test.js\"), {                                                                         // 1\n  \"*\": module.makeNsSetter()                                                                                          // 2\n});                                                                                                                   // 3\n                                                                                                                      // 4\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.test.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/template.test.js                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"problem_test\");                                                                                 // 2\nTemplate[\"problem_test\"] = new Template(\"Template.problem_test\", (function() {                                        // 3\n  var view = this;                                                                                                    // 4\n  return HTML.DIV({                                                                                                   // 5\n    class: \"row\",                                                                                                     // 6\n    style: function() {                                                                                               // 7\n      return Blaze.Unless(function() {                                                                                // 8\n        return Spacebars.call(Spacebars.dot(view.lookup(\"currentProblemId\"), \"get\"));                                 // 9\n      }, function() {                                                                                                 // 10\n        return \"display:none\";                                                                                        // 11\n      });                                                                                                             // 12\n    }                                                                                                                 // 13\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                             // 14\n    class: \"col-9\"                                                                                                    // 15\n  }, \"\\n\\t\\t\\t\", HTML.DIV({                                                                                           // 16\n    class: \"card\",                                                                                                    // 17\n    style: function() {                                                                                               // 18\n      return Blaze.Unless(function() {                                                                                // 19\n        return Spacebars.call(view.lookup(\"currentProblemTest\"));                                                     // 20\n      }, function() {                                                                                                 // 21\n        return \"display:none\";                                                                                        // 22\n      });                                                                                                             // 23\n    }                                                                                                                 // 24\n  }, \"\\n  \\t\\t\\t\\t\", HTML.DIV({                                                                                       // 25\n    class: \"card-body\"                                                                                                // 26\n  }, \"\\n  \\t\\t\\t\\t\\t\", HTML.DIV({                                                                                     // 27\n    class: \"form-group row\"                                                                                           // 28\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                   // 29\n    class: \"col-6\"                                                                                                    // 30\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                 // 31\n    \"data-toggle\": \".timeLimit-edit\",                                                                                 // 32\n    class: \"timeLimit-view card-text\"                                                                                 // 33\n  }, \"Time Limit: \", Blaze.View(\"lookup:currentProblemTest.timeLimit\", function() {                                   // 34\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"timeLimit\"));                         // 35\n  }), \" ms\"), \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                      // 36\n    \"data-toggle\": \".timeLimit-view\",                                                                                 // 37\n    class: \"timeLimit-edit form-control\",                                                                             // 38\n    type: \"number\",                                                                                                   // 39\n    name: \"timeLimit\",                                                                                                // 40\n    value: function() {                                                                                               // 41\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"timeLimit\"));                       // 42\n    }                                                                                                                 // 43\n  }), \"\\n  \\t\\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                             // 44\n    class: \"col-6\"                                                                                                    // 45\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                 // 46\n    \"data-toggle\": \".memoryLimit-edit\",                                                                               // 47\n    class: \"memoryLimit-view card-text\"                                                                               // 48\n  }, \"Memory Limit: \", Blaze.View(\"lookup:currentProblemTest.memoryLimit\", function() {                               // 49\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"memoryLimit\"));                       // 50\n  }), \" kb\"), \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                      // 51\n    \"data-toggle\": \".memoryLimit-view\",                                                                               // 52\n    class: \"memoryLimit-edit form-control\",                                                                           // 53\n    type: \"number\",                                                                                                   // 54\n    name: \"memoryLimit\",                                                                                              // 55\n    value: function() {                                                                                               // 56\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"memoryLimit\"));                     // 57\n    }                                                                                                                 // 58\n  }), \"\\n  \\t\\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\", HTML.DIV({                                            // 59\n    class: \"form-group row\"                                                                                           // 60\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                   // 61\n    class: \"col-6\"                                                                                                    // 62\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                 // 63\n    \"data-toggle\": \".score-edit\",                                                                                     // 64\n    class: \"score-view card-text\"                                                                                     // 65\n  }, \"Score: \", Blaze.View(\"lookup:currentProblemTest.score\", function() {                                            // 66\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"score\"));                             // 67\n  })), \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                             // 68\n    \"data-toggle\": \".score-view\",                                                                                     // 69\n    class: \"score-edit form-control\",                                                                                 // 70\n    type: \"number\",                                                                                                   // 71\n    name: \"score\",                                                                                                    // 72\n    value: function() {                                                                                               // 73\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"score\"));                           // 74\n    }                                                                                                                 // 75\n  }), \"\\n  \\t\\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\", Blaze.If(function() {                                                    // 76\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                      // 77\n  }, function() {                                                                                                     // 78\n    return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.LABEL({                                                                           // 79\n      class: \"col-6\"                                                                                                  // 80\n    }, \"\\n          \\t\\t\\t\\t\\t\", HTML.INPUT({                                                                         // 81\n      type: \"checkbox\",                                                                                               // 82\n      name: \"isPublic\",                                                                                               // 83\n      checked: function() {                                                                                           // 84\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"isPublic\"));                      // 85\n      }                                                                                                               // 86\n    }), \" Public\\n        \\t\\t\\t\\t\"), \"\\n        \\t\\t\\t\" ];                                                           // 87\n  }), \"\\n  \\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\", HTML.DIV({                                                                 // 88\n    class: \"form-group row\"                                                                                           // 89\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                   // 90\n    class: \"col-6\"                                                                                                    // 91\n  }, \"\\n    \\t\\t\\t\\t\\t\\t\", HTML.Raw('<h4 class=\"card-title\">Input</h4>'), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.P({                // 92\n    \"data-toggle\": \".input-edit\",                                                                                     // 93\n    class: \"input-view card-text\"                                                                                     // 94\n  }, Blaze.View(\"lookup:currentProblemTest.input\", function() {                                                       // 95\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"input\"));                             // 96\n  })), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.TEXTAREA({                                                                            // 97\n    \"data-toggle\": \".input-view\",                                                                                     // 98\n    class: \"input-edit form-control\",                                                                                 // 99\n    name: \"input\",                                                                                                    // 100\n    value: function() {                                                                                               // 101\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"input\"));                           // 102\n    }                                                                                                                 // 103\n  }), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                                 // 104\n    class: \"col-6\"                                                                                                    // 105\n  }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.Raw('<h4 class=\"card-title\">Output</h4>'), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.P({                 // 106\n    \"data-toggle\": \".output-edit\",                                                                                    // 107\n    class: \"output-view card-text\"                                                                                    // 108\n  }, Blaze.View(\"lookup:currentProblemTest.output\", function() {                                                      // 109\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"output\"));                            // 110\n  })), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.TEXTAREA({                                                                            // 111\n    \"data-toggle\": \".output-view\",                                                                                    // 112\n    class: \"output-edit form-control\",                                                                                // 113\n    name: \"output\",                                                                                                   // 114\n    value: function() {                                                                                               // 115\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"output\"));                          // 116\n    }                                                                                                                 // 117\n  }), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\\t\", HTML.DIV({                 // 118\n    class: \"col-3\"                                                                                                    // 119\n  }, \"\\n\\t\\t\\t\", HTML.DIV({                                                                                           // 120\n    class: \"card\"                                                                                                     // 121\n  }, \"\\n\\t\\t  \\t\\t\", HTML.DIV({                                                                                       // 122\n    class: \"card-header\"                                                                                              // 123\n  }, \"\\n\\t\\t\\t\\t\", Blaze.If(function() {                                                                              // 124\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                      // 125\n  }, function() {                                                                                                     // 126\n    return [ \"\\n\\t\\t\\t\\t\\t\", HTML.BUTTON({                                                                            // 127\n      class: \"btn btn-sm btn-primary insert-btn fa fa-plus\"                                                           // 128\n    }), \"\\n\\t\\t\\t\\t\" ];                                                                                               // 129\n  }), \"\\n\\t\\t\\t\\t\\t\", HTML.Raw('<strong class=\"ml-1\">Test List</strong>'), \"\\n\\t\\t  \\t\\t\"), \"\\n\\t\\t\\t  \\t\", HTML.UL({\n    class: \"list-group\"                                                                                               // 131\n  }, \"\\n\\t\\t\\t\\t\", Blaze.Each(function() {                                                                            // 132\n    return {                                                                                                          // 133\n      _sequence: Spacebars.call(view.lookup(\"problemTestList\")),                                                      // 134\n      _variable: \"problemTest\"                                                                                        // 135\n    };                                                                                                                // 136\n  }, function() {                                                                                                     // 137\n    return [ \"\\n\\t\\t\\t  \\t\\t\", HTML.LI({                                                                              // 138\n      \"data-id\": function() {                                                                                         // 139\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"problemTest\"), \"_id\"));                                  // 140\n      },                                                                                                              // 141\n      class: function() {                                                                                             // 142\n        return [ \"list-group-item get-btn \", Blaze.If(function() {                                                    // 143\n          return Spacebars.dataMustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"currentProblemTestId\"), \"get\"), Spacebars.dot(view.lookup(\"problemTest\"), \"_id\"));\n        }, function() {                                                                                               // 145\n          return \"active\";                                                                                            // 146\n        }) ];                                                                                                         // 147\n      }                                                                                                               // 148\n    }, \"\\n\\t    \\t\\t\\t\", Blaze.If(function() {                                                                        // 149\n      return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                    // 150\n    }, function() {                                                                                                   // 151\n      return [ \"\\n\\t    \\t\\t\\t\\t\", HTML.BUTTON({                                                                      // 152\n        class: \"btn btn-sm btn-danger remove-btn fa fa-remove\"                                                        // 153\n      }), \"\\n\\t    \\t\\t\\t\" ];                                                                                         // 154\n    }), \"\\n\\t\\t    \\t\\t\\t\", HTML.SPAN({                                                                               // 155\n      class: \"ml-1\"                                                                                                   // 156\n    }, \"Test #\", Blaze.View(\"lookup:@index\", function() {                                                             // 157\n      return Spacebars.mustache(view.lookup(\"@index\"));                                                               // 158\n    })), \"\\n\\t\\t    \\t\\t\", Blaze.Unless(function() {                                                                  // 159\n      return Spacebars.call(Spacebars.dot(view.lookup(\"problemTest\"), \"isPublic\"));                                   // 160\n    }, function() {                                                                                                   // 161\n      return [ \"\\n\\t\\t    \\t\\t\\t\", HTML.SPAN({                                                                        // 162\n        class: \"ml-1 fa fa-ban\"                                                                                       // 163\n      }), \"\\n\\t\\t    \\t\\t\" ];                                                                                         // 164\n    }), \"\\n\\t\\t    \\t\\t\"), \"\\n\\t\\t  \\t\\t\" ];                                                                          // 165\n  }), \"\\n\\t\\t  \\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\");                                                               // 166\n}));                                                                                                                  // 167\n                                                                                                                      // 168\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"upload.html\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/upload.html                                                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./template.upload.js\"), {                                                                       // 1\n  \"*\": module.makeNsSetter()                                                                                          // 2\n});                                                                                                                   // 3\n                                                                                                                      // 4\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.upload.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/template.upload.js                                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"problem_upload\");                                                                               // 2\nTemplate[\"problem_upload\"] = new Template(\"Template.problem_upload\", (function() {                                    // 3\n  var view = this;                                                                                                    // 4\n  return HTML.DIV({                                                                                                   // 5\n    class: \"card\",                                                                                                    // 6\n    style: function() {                                                                                               // 7\n      return Blaze.Unless(function() {                                                                                // 8\n        return Spacebars.call(Spacebars.dot(view.lookup(\"currentProblemId\"), \"get\"));                                 // 9\n      }, function() {                                                                                                 // 10\n        return \"display:none\";                                                                                        // 11\n      });                                                                                                             // 12\n    }                                                                                                                 // 13\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                             // 14\n    class: \"card-body\"                                                                                                // 15\n  }, \"\\n\\t\\t\\t\", HTML.FORM({                                                                                          // 16\n    class: \"upload-form\"                                                                                              // 17\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"form-group row align-items-center\">\\n\\t\\t\\t\\t\\t<label class=\"col-5\"><input type=\"radio\" name=\"lang\" value=\"c\"> gcc -O2 -std=c99 -lm</label>\\n\\t\\t\\t\\t\\t<label class=\"col-5\"><input type=\"radio\" name=\"lang\" value=\"cpp\"> g++ -O2 -std=c++11</label>\\n\\t\\t\\t\\t\\t<div class=\"col-2\"><button class=\"btn btn-primary\">Upload</button></div>\\n\\t\\t\\t\\t</div>'), \"\\n\\t\\t\\t\\t\", HTML.TEXTAREA({\n    class: \"form-control\",                                                                                            // 19\n    name: \"code\"                                                                                                      // 20\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\");                                                                                // 21\n}));                                                                                                                  // 22\n                                                                                                                      // 23\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.html\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/main.html                                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./template.main.js\"), {                                                                         // 1\n  \"*\": module.makeNsSetter()                                                                                          // 2\n});                                                                                                                   // 3\n                                                                                                                      // 4\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.main.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/template.main.js                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"problem_main\");                                                                                 // 2\nTemplate[\"problem_main\"] = new Template(\"Template.problem_main\", (function() {                                        // 3\n  var view = this;                                                                                                    // 4\n  return HTML.DIV({                                                                                                   // 5\n    class: \"row\"                                                                                                      // 6\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                             // 7\n    class: \"col-4\"                                                                                                    // 8\n  }, Blaze._TemplateWith(function() {                                                                                 // 9\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                  // 10\n  }, function() {                                                                                                     // 11\n    return Spacebars.include(view.lookupTemplate(\"problem_list\"));                                                    // 12\n  })), \"\\n\\t\\t\", HTML.DIV({                                                                                           // 13\n    class: \"col-8\"                                                                                                    // 14\n  }, \"\\n\\t\\t\\t\", HTML.Raw('<ul class=\"nav nav-tabs\">\\n\\t\\t\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#problem_detail_tpl\">Details</a></li>\\n\\t\\t\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#problem_test_tpl\">Tests</a></li>\\n\\t\\t\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#problem_upload_tpl\">Upload</a></li>\\n\\t\\t\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#problem_submission_main_tpl\">Submissions</a></li>\\n\\t\\t\\t</ul>'), \"\\n\\t\\t\\t\", HTML.DIV({\n    class: \"tab-content\"                                                                                              // 16\n  }, \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                         // 17\n    class: \"tab-pane\",                                                                                                // 18\n    id: \"problem_detail_tpl\"                                                                                          // 19\n  }, Blaze._TemplateWith(function() {                                                                                 // 20\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                  // 21\n  }, function() {                                                                                                     // 22\n    return Spacebars.include(view.lookupTemplate(\"problem_detail\"));                                                  // 23\n  })), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                       // 24\n    class: \"tab-pane\",                                                                                                // 25\n    id: \"problem_test_tpl\"                                                                                            // 26\n  }, Blaze._TemplateWith(function() {                                                                                 // 27\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                  // 28\n  }, function() {                                                                                                     // 29\n    return Spacebars.include(view.lookupTemplate(\"problem_test\"));                                                    // 30\n  })), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                       // 31\n    class: \"tab-pane\",                                                                                                // 32\n    id: \"problem_upload_tpl\"                                                                                          // 33\n  }, Blaze._TemplateWith(function() {                                                                                 // 34\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                  // 35\n  }, function() {                                                                                                     // 36\n    return Spacebars.include(view.lookupTemplate(\"problem_upload\"));                                                  // 37\n  })), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                       // 38\n    class: \"tab-pane\",                                                                                                // 39\n    id: \"problem_submission_main_tpl\"                                                                                 // 40\n  }, Blaze._TemplateWith(function() {                                                                                 // 41\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                  // 42\n  }, function() {                                                                                                     // 43\n    return Spacebars.include(view.lookupTemplate(\"submission_main\"));                                                 // 44\n  })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\");                                                                               // 45\n}));                                                                                                                  // 46\n                                                                                                                      // 47\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"detail.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/detail.js                                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Problems = void 0;                                                                                                // 1\nmodule.watch(require(\"/imports/api/problem.js\"), {                                                                    // 1\n\tProblems: function (v) {                                                                                             // 1\n\t\tProblems = v;                                                                                                       // 1\n\t}                                                                                                                    // 1\n}, 0);                                                                                                                // 1\nmodule.watch(require(\"./detail.html\"));                                                                               // 1\nTemplate.problem_detail.onCreated(function () {                                                                       // 4\n\tvar _this = this;                                                                                                    // 4\n                                                                                                                      //\n\tthis.autorun(function () {                                                                                           // 5\n\t\treturn _this.subscribe('Problems.findOne', _this.data.currentProblemId.get());                                      // 5\n\t});                                                                                                                  // 5\n});                                                                                                                   // 6\nTemplate.problem_detail.onRendered(function () {                                                                      // 8\n\tthis.$('[class*=edit]').hide();                                                                                      // 9\n});                                                                                                                   // 10\nTemplate.problem_detail.helpers({                                                                                     // 12\n\tcurrentProblem: function () {                                                                                        // 13\n\t\tvar problem = Problems.findOne({                                                                                    // 14\n\t\t\t_id: this.currentProblemId.get()                                                                                   // 14\n\t\t});                                                                                                                 // 14\n                                                                                                                      //\n\t\tif (problem == undefined) {                                                                                         // 16\n\t\t\tthis.currentProblemId.set(null);                                                                                   // 17\n\t\t}                                                                                                                   // 18\n                                                                                                                      //\n\t\treturn problem;                                                                                                     // 19\n\t}                                                                                                                    // 20\n});                                                                                                                   // 12\nTemplate.problem_detail.events({                                                                                      // 23\n\t'blur [class*=edit]': function (event, instance) {                                                                   // 24\n\t\tvar _Meteor$call;                                                                                                   // 24\n                                                                                                                      //\n\t\tvar target = event.currentTarget;                                                                                   // 25\n\t\tvar toggle = target.dataset.toggle;                                                                                 // 26\n\t\tvar field = target.name;                                                                                            // 27\n\t\tvar value = target.value;                                                                                           // 28\n\t\tinstance.$(target).hide();                                                                                          // 30\n\t\tinstance.$(toggle).show();                                                                                          // 31\n\t\tMeteor.call('Problems.update', this.currentProblemId.get(), (_Meteor$call = {}, _Meteor$call[field] = value, _Meteor$call));\n\t},                                                                                                                   // 34\n\t'click [class*=view]': function (event, instance) {                                                                  // 35\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 36\n\t\tvar target = event.currentTarget;                                                                                   // 38\n\t\tvar toggle = target.dataset.toggle;                                                                                 // 39\n\t\tinstance.$(target).hide();                                                                                          // 41\n\t\tinstance.$(toggle).show().focus();                                                                                  // 42\n\t},                                                                                                                   // 43\n\t'click [type=checkbox]': function (event) {                                                                          // 44\n\t\tvar _Meteor$call2;                                                                                                  // 44\n                                                                                                                      //\n\t\tvar target = event.currentTarget;                                                                                   // 45\n\t\tvar field = target.name;                                                                                            // 46\n\t\tvar value = target.checked;                                                                                         // 47\n\t\tMeteor.call('Problems.update', this.currentProblemId.get(), (_Meteor$call2 = {}, _Meteor$call2[field] = value, _Meteor$call2));\n\t}                                                                                                                    // 50\n});                                                                                                                   // 23\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"list.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/list.js                                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Problems = void 0;                                                                                                // 1\nmodule.watch(require(\"/imports/api/problem.js\"), {                                                                    // 1\n\tProblems: function (v) {                                                                                             // 1\n\t\tProblems = v;                                                                                                       // 1\n\t}                                                                                                                    // 1\n}, 0);                                                                                                                // 1\nmodule.watch(require(\"./list.html\"));                                                                                 // 1\nTemplate.problem_list.onCreated(function () {                                                                         // 4\n\tthis.subscribe('Problems.findAll');                                                                                  // 5\n});                                                                                                                   // 6\nTemplate.problem_list.helpers({                                                                                       // 8\n\tproblemList: function () {                                                                                           // 9\n\t\treturn Problems.find({}, {                                                                                          // 10\n\t\t\tfields: {                                                                                                          // 10\n\t\t\t\t_id: 1,                                                                                                           // 10\n\t\t\t\ttitle: 1,                                                                                                         // 10\n\t\t\t\tisExam: 1,                                                                                                        // 10\n\t\t\t\tisPublic: 1                                                                                                       // 10\n\t\t\t}                                                                                                                  // 10\n\t\t});                                                                                                                 // 10\n\t},                                                                                                                   // 11\n\tisCurrentProblem: function (id) {                                                                                    // 12\n\t\treturn id == this.currentProblemId.get();                                                                           // 13\n\t}                                                                                                                    // 14\n});                                                                                                                   // 8\nTemplate.problem_list.events({                                                                                        // 17\n\t'click .insert-btn': function () {                                                                                   // 18\n\t\tMeteor.call('Problems.insert');                                                                                     // 19\n\t},                                                                                                                   // 20\n\t'click .remove-btn': function (event) {                                                                              // 21\n\t\tvar id = event.currentTarget.parentElement.dataset.id;                                                              // 22\n\t\tMeteor.call('Problems.remove', {                                                                                    // 23\n\t\t\t_id: id                                                                                                            // 23\n\t\t});                                                                                                                 // 23\n\t},                                                                                                                   // 24\n\t'click .get-btn': function (event) {                                                                                 // 25\n\t\tvar id = event.currentTarget.dataset.id;                                                                            // 26\n\t\tthis.currentProblemId.set(id);                                                                                      // 27\n\t}                                                                                                                    // 28\n});                                                                                                                   // 17\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"test.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/test.js                                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar ProblemTests = void 0;                                                                                            // 1\nmodule.watch(require(\"/imports/api/problem.js\"), {                                                                    // 1\n\tProblemTests: function (v) {                                                                                         // 1\n\t\tProblemTests = v;                                                                                                   // 1\n\t}                                                                                                                    // 1\n}, 0);                                                                                                                // 1\nmodule.watch(require(\"./test.html\"));                                                                                 // 1\nTemplate.problem_test.onCreated(function () {                                                                         // 4\n\tvar _this = this;                                                                                                    // 4\n                                                                                                                      //\n\tthis.autorun(function () {                                                                                           // 5\n\t\treturn _this.subscribe('ProblemTests.findAllByProblem', _this.data.currentProblemId.get());                         // 5\n\t});                                                                                                                  // 5\n\tthis.currentProblemTestId = new ReactiveVar(null);                                                                   // 6\n});                                                                                                                   // 7\nTemplate.problem_test.onRendered(function () {                                                                        // 9\n\tthis.$('[class*=edit]').hide();                                                                                      // 10\n});                                                                                                                   // 11\nTemplate.problem_test.helpers({                                                                                       // 13\n\tproblemTestList: function () {                                                                                       // 14\n\t\treturn ProblemTests.find({                                                                                          // 15\n\t\t\tproblemId: this.currentProblemId.get()                                                                             // 15\n\t\t}, {                                                                                                                // 15\n\t\t\tfields: {                                                                                                          // 15\n\t\t\t\t_id: 1,                                                                                                           // 15\n\t\t\t\tisPublic: 1                                                                                                       // 15\n\t\t\t}                                                                                                                  // 15\n\t\t});                                                                                                                 // 15\n\t},                                                                                                                   // 16\n\tcurrentProblemTest: function () {                                                                                    // 17\n\t\tvar problemTest = ProblemTests.findOne({                                                                            // 18\n\t\t\t_id: Template.instance().currentProblemTestId.get()                                                                // 18\n\t\t});                                                                                                                 // 18\n                                                                                                                      //\n\t\tif (problemTest == undefined) {                                                                                     // 20\n\t\t\tTemplate.instance().currentProblemTestId.set(null);                                                                // 21\n\t\t}                                                                                                                   // 22\n                                                                                                                      //\n\t\treturn problemTest;                                                                                                 // 23\n\t}                                                                                                                    // 24\n});                                                                                                                   // 13\nTemplate.problem_test.events({                                                                                        // 27\n\t'click .insert-btn': function () {                                                                                   // 28\n\t\tMeteor.call('ProblemTests.insert', this.currentProblemId.get());                                                    // 29\n\t},                                                                                                                   // 30\n\t'click .remove-btn': function (event) {                                                                              // 31\n\t\tvar id = event.currentTarget.parentElement.dataset.id;                                                              // 32\n\t\tMeteor.call('ProblemTests.remove', {                                                                                // 33\n\t\t\t_id: id                                                                                                            // 33\n\t\t});                                                                                                                 // 33\n\t},                                                                                                                   // 34\n\t'click .get-btn': function (event, instance) {                                                                       // 35\n\t\tvar id = event.currentTarget.dataset.id;                                                                            // 36\n\t\tinstance.currentProblemTestId.set(id);                                                                              // 37\n\t},                                                                                                                   // 38\n\t'blur [class*=edit]': function (event, instance) {                                                                   // 39\n\t\tvar _Meteor$call;                                                                                                   // 39\n                                                                                                                      //\n\t\tvar target = event.currentTarget;                                                                                   // 40\n\t\tvar toggle = target.dataset.toggle;                                                                                 // 41\n\t\tvar field = target.name;                                                                                            // 42\n\t\tvar value = target.value;                                                                                           // 43\n\t\tinstance.$(target).hide();                                                                                          // 45\n\t\tinstance.$(toggle).show();                                                                                          // 46\n\t\tMeteor.call('ProblemTests.update', instance.currentProblemTestId.get(), (_Meteor$call = {}, _Meteor$call[field] = value, _Meteor$call));\n\t},                                                                                                                   // 49\n\t'click [class*=view]': function (event, instance) {                                                                  // 50\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 51\n\t\tvar target = event.currentTarget;                                                                                   // 53\n\t\tvar toggle = target.dataset.toggle;                                                                                 // 54\n\t\tinstance.$(target).hide();                                                                                          // 56\n\t\tinstance.$(toggle).show().focus();                                                                                  // 57\n\t},                                                                                                                   // 58\n\t'click [type=checkbox]': function (event, instance) {                                                                // 59\n\t\tvar _Meteor$call2;                                                                                                  // 59\n                                                                                                                      //\n\t\tvar target = event.currentTarget;                                                                                   // 60\n\t\tvar field = target.name;                                                                                            // 61\n\t\tvar value = target.checked;                                                                                         // 62\n\t\tMeteor.call('ProblemTests.update', instance.currentProblemTestId.get(), (_Meteor$call2 = {}, _Meteor$call2[field] = value, _Meteor$call2));\n\t}                                                                                                                    // 65\n});                                                                                                                   // 27\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"upload.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/upload.js                                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./upload.html\"));                                                                               // 1\nTemplate.problem_upload.events({                                                                                      // 3\n\t'submit .upload-form': function (event) {                                                                            // 4\n\t\tvar target = event.currentTarget;                                                                                   // 5\n\t\tvar lang = target.lang.value;                                                                                       // 6\n\t\tvar code = target.code.value;                                                                                       // 7\n\t\tevent.preventDefault();                                                                                             // 9\n\t\tMeteor.call('Submissions.insert', this.currentProblemId.get(), Meteor.userId(), lang, code);                        // 10\n\t}                                                                                                                    // 11\n});                                                                                                                   // 3\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/problem/main.js                                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./list.js\"));                                                                                   // 1\nmodule.watch(require(\"./detail.js\"));                                                                                 // 1\nmodule.watch(require(\"./test.js\"));                                                                                   // 1\nmodule.watch(require(\"./upload.js\"));                                                                                 // 1\nmodule.watch(require(\"../submission/main.js\"));                                                                       // 1\nmodule.watch(require(\"./main.html\"));                                                                                 // 1\nTemplate.problem_main.onCreated(function () {                                                                         // 8\n\tthis.currentProblemId = new ReactiveVar(null);                                                                       // 9\n});                                                                                                                   // 10\nTemplate.problem_main.onRendered(function () {                                                                        // 12\n\tthis.$('.nav-link')[0].click();                                                                                      // 13\n});                                                                                                                   // 14\nTemplate.problem_main.helpers({                                                                                       // 16\n\tshareArgs: function () {                                                                                             // 17\n\t\treturn {                                                                                                            // 18\n\t\t\tcurrentProblemId: Template.instance().currentProblemId                                                             // 18\n\t\t};                                                                                                                  // 18\n\t}                                                                                                                    // 19\n});                                                                                                                   // 16\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"student\":{\"detail.html\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/student/detail.html                                                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./template.detail.js\"), {                                                                       // 1\n  \"*\": module.makeNsSetter()                                                                                          // 2\n});                                                                                                                   // 3\n                                                                                                                      // 4\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.detail.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/student/template.detail.js                                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"student_detail\");                                                                               // 2\nTemplate[\"student_detail\"] = new Template(\"Template.student_detail\", (function() {                                    // 3\n  var view = this;                                                                                                    // 4\n  return HTML.DIV({                                                                                                   // 5\n    class: \"card\",                                                                                                    // 6\n    style: function() {                                                                                               // 7\n      return Blaze.Unless(function() {                                                                                // 8\n        return Spacebars.call(Spacebars.dot(view.lookup(\"currentStudentId\"), \"get\"));                                 // 9\n      }, function() {                                                                                                 // 10\n        return \"display:none\";                                                                                        // 11\n      });                                                                                                             // 12\n    }                                                                                                                 // 13\n  }, \"\\n  \\t\\t\", HTML.DIV({                                                                                           // 14\n    class: \"card-body\"                                                                                                // 15\n  }, \"\\n\\t\\t\\t\", HTML.DIV({                                                                                           // 16\n    class: \"form-group row\"                                                                                           // 17\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Username:</div>'), \"\\n\\t\\t\\t\\t\", HTML.DIV({                           // 18\n    class: \"col-10\"                                                                                                   // 19\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.P({                                                                                         // 20\n    \"data-toggle\": \".username-edit\",                                                                                  // 21\n    class: \"username-view card-text\"                                                                                  // 22\n  }, Blaze.View(\"lookup:currentStudent.username\", function() {                                                        // 23\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"username\"));                              // 24\n  })), \"\\n\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                                   // 25\n    \"data-toggle\": \".username-view\",                                                                                  // 26\n    class: \"username-edit form-control\",                                                                              // 27\n    type: \"text\",                                                                                                     // 28\n    name: \"username\",                                                                                                 // 29\n    value: function() {                                                                                               // 30\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"username\"));                            // 31\n    }                                                                                                                 // 32\n  }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                              // 33\n    class: \"form-group row\"                                                                                           // 34\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Fullname:</div>'), \"\\n\\t\\t\\t\\t\", HTML.DIV({                           // 35\n    class: \"col-10\"                                                                                                   // 36\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.P({                                                                                         // 37\n    \"data-toggle\": \".fullname-edit\",                                                                                  // 38\n    class: \"fullname-view card-text\"                                                                                  // 39\n  }, Blaze.View(\"lookup:currentStudent.fullname\", function() {                                                        // 40\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"fullname\"));                              // 41\n  })), \"\\n\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                                   // 42\n    \"data-toggle\": \".fullname-view\",                                                                                  // 43\n    class: \"fullname-edit form-control\",                                                                              // 44\n    type: \"text\",                                                                                                     // 45\n    name: \"fullname\",                                                                                                 // 46\n    value: function() {                                                                                               // 47\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"fullname\"));                            // 48\n    }                                                                                                                 // 49\n  }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                              // 50\n    class: \"form-group row\"                                                                                           // 51\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Email:</div>'), \"\\n\\t\\t\\t\\t\", HTML.DIV({                              // 52\n    class: \"col-10\"                                                                                                   // 53\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.P({                                                                                         // 54\n    \"data-toggle\": \".email-edit\",                                                                                     // 55\n    class: \"email-view card-text\"                                                                                     // 56\n  }, Blaze.View(\"lookup:currentStudent.emails.0.address\", function() {                                                // 57\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"emails\", \"0\", \"address\"));                // 58\n  })), \"\\n\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                                   // 59\n    \"data-toggle\": \".email-view\",                                                                                     // 60\n    class: \"email-edit form-control\",                                                                                 // 61\n    type: \"email\",                                                                                                    // 62\n    name: \"email\",                                                                                                    // 63\n    value: function() {                                                                                               // 64\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"emails\", \"0\", \"address\"));              // 65\n    }                                                                                                                 // 66\n  }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                              // 67\n    class: \"form-group row\"                                                                                           // 68\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Year:</div>'), \"\\n\\t\\t\\t\\t\", HTML.DIV({                               // 69\n    class: \"col-10\"                                                                                                   // 70\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.P({                                                                                         // 71\n    \"data-toggle\": \".year-edit\",                                                                                      // 72\n    class: \"year-view card-text\"                                                                                      // 73\n  }, Blaze.View(\"lookup:currentStudent.year\", function() {                                                            // 74\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"year\"));                                  // 75\n  })), \"\\n  \\t\\t\\t\\t\\t\", HTML.INPUT({                                                                                 // 76\n    \"data-toggle\": \".year-view\",                                                                                      // 77\n    class: \"year-edit form-control\",                                                                                  // 78\n    type: \"number\",                                                                                                   // 79\n    name: \"year\",                                                                                                     // 80\n    value: function() {                                                                                               // 81\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"year\"));                                // 82\n    }                                                                                                                 // 83\n  }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\", Blaze.If(function() {                                                     // 84\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                      // 85\n  }, function() {                                                                                                     // 86\n    return [ \"\\n\\t\\t\\t\", HTML.DIV({                                                                                   // 87\n      class: \"form-group row\"                                                                                         // 88\n    }, \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                       // 89\n      class: \"col-2\"                                                                                                  // 90\n    }, \"Password:\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                         // 91\n      class: \"col-10\"                                                                                                 // 92\n    }, \"\\n\\t\\t\\t\\t\\t\", HTML.P({                                                                                       // 93\n      \"data-toggle\": \".password-edit\",                                                                                // 94\n      class: \"password-view card-text\"                                                                                // 95\n    }, \"Click to set password\"), \"\\n\\t\\t\\t\\t\\t\", HTML.INPUT({                                                         // 96\n      \"data-toggle\": \".password-view\",                                                                                // 97\n      class: \"password-edit form-control\",                                                                            // 98\n      type: \"password\",                                                                                               // 99\n      name: \"password\",                                                                                               // 100\n      value: function() {                                                                                             // 101\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"password\"));                          // 102\n      },                                                                                                              // 103\n      style: \"display:none\"                                                                                           // 104\n    }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                            // 105\n      class: \"form-group row\"                                                                                         // 106\n    }, \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                       // 107\n      class: \"col-2\"                                                                                                  // 108\n    }, \"Admin:\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                            // 109\n      class: \"col-10\"                                                                                                 // 110\n    }, HTML.INPUT({                                                                                                   // 111\n      type: \"checkbox\",                                                                                               // 112\n      name: \"isAdmin\",                                                                                                // 113\n      checked: function() {                                                                                           // 114\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"isAdmin\"));                           // 115\n      }                                                                                                               // 116\n    })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];                                                                                     // 117\n  }, function() {                                                                                                     // 118\n    return Blaze.If(function() {                                                                                      // 119\n      return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isOwner\"), Spacebars.dot(view.lookup(\"currentStudentId\"), \"get\"));\n    }, function() {                                                                                                   // 121\n      return [ \"\\n\\t\\t\\t\", HTML.FORM({                                                                                // 122\n        class: \"chgpwd-form\"                                                                                          // 123\n      }, \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                     // 124\n        class: \"form-group row\"                                                                                       // 125\n      }, \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                   // 126\n        class: \"col-2\"                                                                                                // 127\n      }, \"Old password:\"), \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                 // 128\n        class: \"col-10\"                                                                                               // 129\n      }, HTML.INPUT({                                                                                                 // 130\n        class: \"form-control\",                                                                                        // 131\n        type: \"password\",                                                                                             // 132\n        name: \"oldPassword\"                                                                                           // 133\n      })), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                    // 134\n        class: \"form-group row\"                                                                                       // 135\n      }, \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                   // 136\n        class: \"col-2\"                                                                                                // 137\n      }, \"New password:\"), \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                 // 138\n        class: \"col-10\"                                                                                               // 139\n      }, HTML.INPUT({                                                                                                 // 140\n        class: \"form-control\",                                                                                        // 141\n        type: \"password\",                                                                                             // 142\n        name: \"newPassword\"                                                                                           // 143\n      })), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                    // 144\n        class: \"offset-2\"                                                                                             // 145\n      }, HTML.BUTTON({                                                                                                // 146\n        class: \"btn btn-default\"                                                                                      // 147\n      }, \"Change Password\")), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];                                                                // 148\n    });                                                                                                               // 149\n  }), \"\\n\\t\\t\"), \"\\n\\t\");                                                                                             // 150\n}));                                                                                                                  // 151\n                                                                                                                      // 152\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"list.html\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/student/list.html                                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./template.list.js\"), {                                                                         // 1\n  \"*\": module.makeNsSetter()                                                                                          // 2\n});                                                                                                                   // 3\n                                                                                                                      // 4\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.list.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/student/template.list.js                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"student_list\");                                                                                 // 2\nTemplate[\"student_list\"] = new Template(\"Template.student_list\", (function() {                                        // 3\n  var view = this;                                                                                                    // 4\n  return HTML.DIV({                                                                                                   // 5\n    class: \"card\"                                                                                                     // 6\n  }, \"\\n  \\t\\t\", HTML.DIV({                                                                                           // 7\n    class: \"card-header\"                                                                                              // 8\n  }, \"\\n\\t\\t\", Blaze.If(function() {                                                                                  // 9\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                      // 10\n  }, function() {                                                                                                     // 11\n    return [ \"\\n\\t\\t\\t\", HTML.BUTTON({                                                                                // 12\n      class: \"btn btn-sm btn-primary insert-btn fa fa-plus\"                                                           // 13\n    }), \"\\n\\t\\t\" ];                                                                                                   // 14\n  }), \"\\n\\t\\t\\t\", HTML.Raw('<strong class=\"ml-1\">Student List</strong>'), \"\\n  \\t\\t\"), \"\\n\\t  \\t\", HTML.UL({          // 15\n    class: \"list-group\"                                                                                               // 16\n  }, \"\\n\\t  \\t\", Blaze.Each(function() {                                                                              // 17\n    return {                                                                                                          // 18\n      _sequence: Spacebars.call(view.lookup(\"studentList\")),                                                          // 19\n      _variable: \"student\"                                                                                            // 20\n    };                                                                                                                // 21\n  }, function() {                                                                                                     // 22\n    return [ \"\\n\\t    \\t\", HTML.LI({                                                                                  // 23\n      \"data-id\": function() {                                                                                         // 24\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"student\"), \"_id\"));                                      // 25\n      },                                                                                                              // 26\n      class: function() {                                                                                             // 27\n        return [ \"list-group-item get-btn \", Blaze.If(function() {                                                    // 28\n          return Spacebars.dataMustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"currentStudentId\"), \"get\"), Spacebars.dot(view.lookup(\"student\"), \"_id\"));\n        }, function() {                                                                                               // 30\n          return \"active\";                                                                                            // 31\n        }) ];                                                                                                         // 32\n      }                                                                                                               // 33\n    }, \"\\n\\t    \\t\", Blaze.If(function() {                                                                            // 34\n      return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                    // 35\n    }, function() {                                                                                                   // 36\n      return [ \"\\n\\t    \\t\\t\", HTML.BUTTON({                                                                          // 37\n        class: \"btn btn-sm btn-danger remove-btn fa fa-remove\"                                                        // 38\n      }), \"\\n\\t    \\t\" ];                                                                                             // 39\n    }), \"\\n\\t    \\t\\t\", HTML.SPAN({                                                                                   // 40\n      class: \"ml-1\"                                                                                                   // 41\n    }, Blaze.View(\"lookup:student.username\", function() {                                                             // 42\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"student\"), \"username\"));                                   // 43\n    })), \"\\n\\t    \\t\", Blaze.If(function() {                                                                          // 44\n      return Spacebars.call(Spacebars.dot(view.lookup(\"student\"), \"isAdmin\"));                                        // 45\n    }, function() {                                                                                                   // 46\n      return [ \"\\n\\t    \\t\\t\", HTML.SPAN({                                                                            // 47\n        class: \"ml-1 fa fa-user-secret\"                                                                               // 48\n      }), \"\\n\\t    \\t\" ];                                                                                             // 49\n    }), \"\\n\\t    \\t\"), \"\\n\\t\\t\" ];                                                                                    // 50\n  }), \"\\n  \\t\\t\"), \"\\n  \\t\");                                                                                         // 51\n}));                                                                                                                  // 52\n                                                                                                                      // 53\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.html\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/student/main.html                                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./template.main.js\"), {                                                                         // 1\n  \"*\": module.makeNsSetter()                                                                                          // 2\n});                                                                                                                   // 3\n                                                                                                                      // 4\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.main.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/student/template.main.js                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"student_main\");                                                                                 // 2\nTemplate[\"student_main\"] = new Template(\"Template.student_main\", (function() {                                        // 3\n  var view = this;                                                                                                    // 4\n  return HTML.DIV({                                                                                                   // 5\n    class: \"row\"                                                                                                      // 6\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                             // 7\n    class: \"col-4\"                                                                                                    // 8\n  }, Blaze._TemplateWith(function() {                                                                                 // 9\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                  // 10\n  }, function() {                                                                                                     // 11\n    return Spacebars.include(view.lookupTemplate(\"student_list\"));                                                    // 12\n  })), \"\\n\\t\\t\", HTML.DIV({                                                                                           // 13\n    class: \"col-8\"                                                                                                    // 14\n  }, \"\\n\\t\\t\\t\", HTML.Raw('<ul class=\"nav nav-tabs\">\\n\\t\\t\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#student_detail_tpl\">Details</a></li>\\n\\t\\t\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#student_submission_main_tpl\">Submissions</a></li>\\n\\t\\t\\t</ul>'), \"\\n\\t\\t\\t\", HTML.DIV({\n    class: \"tab-content\"                                                                                              // 16\n  }, \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                         // 17\n    class: \"tab-pane\",                                                                                                // 18\n    id: \"student_detail_tpl\"                                                                                          // 19\n  }, Blaze._TemplateWith(function() {                                                                                 // 20\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                  // 21\n  }, function() {                                                                                                     // 22\n    return Spacebars.include(view.lookupTemplate(\"student_detail\"));                                                  // 23\n  })), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                       // 24\n    class: \"tab-pane\",                                                                                                // 25\n    id: \"student_submission_main_tpl\"                                                                                 // 26\n  }, Blaze._TemplateWith(function() {                                                                                 // 27\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                  // 28\n  }, function() {                                                                                                     // 29\n    return Spacebars.include(view.lookupTemplate(\"submission_main\"));                                                 // 30\n  })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\");                                                                               // 31\n}));                                                                                                                  // 32\n                                                                                                                      // 33\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"detail.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/student/detail.js                                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Students = void 0;                                                                                                // 1\nmodule.watch(require(\"/imports/api/student.js\"), {                                                                    // 1\n\tStudents: function (v) {                                                                                             // 1\n\t\tStudents = v;                                                                                                       // 1\n\t}                                                                                                                    // 1\n}, 0);                                                                                                                // 1\nmodule.watch(require(\"./detail.html\"));                                                                               // 1\nTemplate.student_detail.onCreated(function () {                                                                       // 4\n\tvar _this = this;                                                                                                    // 4\n                                                                                                                      //\n\tthis.autorun(function () {                                                                                           // 5\n\t\treturn _this.subscribe('Students.findOne', _this.data.currentStudentId.get());                                      // 5\n\t});                                                                                                                  // 5\n});                                                                                                                   // 6\nTemplate.student_detail.onRendered(function () {                                                                      // 8\n\tthis.$('[class*=edit]').hide();                                                                                      // 9\n});                                                                                                                   // 10\nTemplate.student_detail.helpers({                                                                                     // 12\n\tcurrentStudent: function () {                                                                                        // 13\n\t\tvar student = Students.findOne({                                                                                    // 14\n\t\t\t_id: this.currentStudentId.get()                                                                                   // 14\n\t\t});                                                                                                                 // 14\n                                                                                                                      //\n\t\tif (student == undefined) {                                                                                         // 16\n\t\t\tthis.currentStudentId.set(null);                                                                                   // 17\n\t\t}                                                                                                                   // 18\n                                                                                                                      //\n\t\treturn student;                                                                                                     // 19\n\t}                                                                                                                    // 20\n});                                                                                                                   // 12\nTemplate.student_detail.events({                                                                                      // 23\n\t'blur [class*=edit]': function (event, instance) {                                                                   // 24\n\t\tvar _Meteor$call;                                                                                                   // 24\n                                                                                                                      //\n\t\tvar target = event.currentTarget;                                                                                   // 25\n\t\tvar toggle = target.dataset.toggle;                                                                                 // 26\n\t\tvar field = target.name;                                                                                            // 27\n\t\tvar value = target.value;                                                                                           // 28\n\t\tconsole.log(field);                                                                                                 // 29\n\t\tinstance.$(target).hide();                                                                                          // 30\n\t\tinstance.$(toggle).show();                                                                                          // 31\n\t\tMeteor.call('Students.update', this.currentStudentId.get(), (_Meteor$call = {}, _Meteor$call[field] = value, _Meteor$call));\n\t},                                                                                                                   // 34\n\t'click [class*=view]': function (event, instance) {                                                                  // 35\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 36\n\t\tvar target = event.currentTarget;                                                                                   // 38\n\t\tvar toggle = target.dataset.toggle;                                                                                 // 39\n\t\tinstance.$(target).hide();                                                                                          // 41\n\t\tinstance.$(toggle).show().focus();                                                                                  // 42\n\t},                                                                                                                   // 43\n\t'click [type=checkbox]': function (event) {                                                                          // 44\n\t\tvar _Meteor$call2;                                                                                                  // 44\n                                                                                                                      //\n\t\tvar target = event.currentTarget;                                                                                   // 45\n\t\tvar field = target.name;                                                                                            // 46\n\t\tvar value = target.checked;                                                                                         // 47\n\t\tMeteor.call('Students.update', this.currentStudentId.get(), (_Meteor$call2 = {}, _Meteor$call2[field] = value, _Meteor$call2));\n\t},                                                                                                                   // 50\n\t'submit .chgpwd-form': function (event) {                                                                            // 51\n\t\tvar target = event.currentTarget;                                                                                   // 52\n\t\tvar oldPassword = target.oldPassword.value;                                                                         // 53\n\t\tvar newPassword = target.newPassword.value;                                                                         // 54\n\t\tevent.preventDefault();                                                                                             // 56\n\t\tMeteor.call('Students.changePassword', oldPassword, newPassword);                                                   // 57\n\t}                                                                                                                    // 58\n});                                                                                                                   // 23\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"list.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/student/list.js                                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Students = void 0;                                                                                                // 1\nmodule.watch(require(\"/imports/api/student.js\"), {                                                                    // 1\n\tStudents: function (v) {                                                                                             // 1\n\t\tStudents = v;                                                                                                       // 1\n\t}                                                                                                                    // 1\n}, 0);                                                                                                                // 1\nmodule.watch(require(\"./list.html\"));                                                                                 // 1\nTemplate.student_list.onCreated(function () {                                                                         // 4\n\tthis.subscribe('Students.findAll');                                                                                  // 5\n});                                                                                                                   // 6\nTemplate.student_list.helpers({                                                                                       // 8\n\tstudentList: function () {                                                                                           // 9\n\t\treturn Students.find({}, {                                                                                          // 10\n\t\t\tfields: {                                                                                                          // 10\n\t\t\t\t_id: 1,                                                                                                           // 10\n\t\t\t\tusername: 1,                                                                                                      // 10\n\t\t\t\tisAdmin: 1                                                                                                        // 10\n\t\t\t}                                                                                                                  // 10\n\t\t});                                                                                                                 // 10\n\t}                                                                                                                    // 11\n});                                                                                                                   // 8\nTemplate.student_list.events({                                                                                        // 14\n\t'click .insert-btn': function () {                                                                                   // 15\n\t\tMeteor.call('Students.insert');                                                                                     // 16\n\t},                                                                                                                   // 17\n\t'click .remove-btn': function (event) {                                                                              // 18\n\t\tvar id = event.currentTarget.parentElement.dataset.id;                                                              // 19\n\t\tMeteor.call('Students.remove', {                                                                                    // 20\n\t\t\t_id: id                                                                                                            // 20\n\t\t});                                                                                                                 // 20\n\t},                                                                                                                   // 21\n\t'click .get-btn': function (event) {                                                                                 // 22\n\t\tvar id = event.currentTarget.dataset.id;                                                                            // 23\n\t\tthis.currentStudentId.set(id);                                                                                      // 24\n\t}                                                                                                                    // 25\n});                                                                                                                   // 14\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/student/main.js                                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./list.js\"));                                                                                   // 1\nmodule.watch(require(\"./detail.js\"));                                                                                 // 1\nmodule.watch(require(\"../submission/main.js\"));                                                                       // 1\nmodule.watch(require(\"./main.html\"));                                                                                 // 1\nTemplate.student_main.onCreated(function () {                                                                         // 6\n\tthis.currentStudentId = new ReactiveVar(null);                                                                       // 7\n});                                                                                                                   // 8\nTemplate.student_main.onRendered(function () {                                                                        // 10\n\tthis.$('.nav-link')[0].click();                                                                                      // 11\n});                                                                                                                   // 12\nTemplate.student_main.helpers({                                                                                       // 14\n\tshareArgs: function () {                                                                                             // 15\n\t\treturn {                                                                                                            // 16\n\t\t\tcurrentStudentId: Template.instance().currentStudentId                                                             // 16\n\t\t};                                                                                                                  // 16\n\t}                                                                                                                    // 17\n});                                                                                                                   // 14\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"submission\":{\"detail.html\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/submission/detail.html                                                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./template.detail.js\"), {                                                                       // 1\n  \"*\": module.makeNsSetter()                                                                                          // 2\n});                                                                                                                   // 3\n                                                                                                                      // 4\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.detail.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/submission/template.detail.js                                                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"submission_detail\");                                                                            // 2\nTemplate[\"submission_detail\"] = new Template(\"Template.submission_detail\", (function() {                              // 3\n  var view = this;                                                                                                    // 4\n  return [ HTML.Raw('<ul class=\"nav nav-tabs\">\\n\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#submission_detail_tpl\">Details</a></li>\\n\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#submission_result_tpl\">Results</a></li>\\n\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#submission_code_tpl\">Code</a></li>\\n\\t</ul>\\n\\t'), HTML.DIV({\n    class: \"tab-content\",                                                                                             // 6\n    style: function() {                                                                                               // 7\n      return Blaze.Unless(function() {                                                                                // 8\n        return Spacebars.call(Spacebars.dot(view.lookup(\"currentSubmissionId\"), \"get\"));                              // 9\n      }, function() {                                                                                                 // 10\n        return \"display:none\";                                                                                        // 11\n      });                                                                                                             // 12\n    }                                                                                                                 // 13\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                             // 14\n    class: \"tab-pane\",                                                                                                // 15\n    id: \"submission_detail_tpl\"                                                                                       // 16\n  }, \"\\n\\t\\t\\t\", HTML.DIV({                                                                                           // 17\n    class: \"form-group row\"                                                                                           // 18\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Student:</div>'), \"\\n\\t\\t\\t\\t\", HTML.DIV({                            // 19\n    class: \"col-10\"                                                                                                   // 20\n  }, Blaze.View(\"lookup:getStudentUsername\", function() {                                                             // 21\n    return Spacebars.mustache(view.lookup(\"getStudentUsername\"), Spacebars.dot(view.lookup(\"currentSubmission\"), \"studentId\"));\n  })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                                            // 23\n    class: \"form-group row\"                                                                                           // 24\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Problem:</div>'), \"\\n\\t\\t\\t\\t\", HTML.DIV({                            // 25\n    class: \"col-10\"                                                                                                   // 26\n  }, Blaze.View(\"lookup:getProblemTitle\", function() {                                                                // 27\n    return Spacebars.mustache(view.lookup(\"getProblemTitle\"), Spacebars.dot(view.lookup(\"currentSubmission\"), \"problemId\"));\n  })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                                            // 29\n    class: \"form-group row\"                                                                                           // 30\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Created at:</div>'), \"\\n\\t\\t\\t\\t\", HTML.DIV({                         // 31\n    class: \"col-10\"                                                                                                   // 32\n  }, Blaze.View(\"lookup:currentSubmission.createdAt\", function() {                                                    // 33\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"createdAt\"));                          // 34\n  })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                                            // 35\n    class: \"form-group row\"                                                                                           // 36\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Status:</div>'), \"\\n\\t\\t\\t\\t\", HTML.DIV({                             // 37\n    class: \"col-10\"                                                                                                   // 38\n  }, Blaze.View(\"lookup:currentSubmission.status\", function() {                                                       // 39\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"status\"));                             // 40\n  })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                                            // 41\n    class: \"form-group row\"                                                                                           // 42\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Language:</div>'), \"\\n\\t\\t\\t\\t\", HTML.DIV({                           // 43\n    class: \"col-10\"                                                                                                   // 44\n  }, Blaze.View(\"lookup:currentSubmission.lang\", function() {                                                         // 45\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"lang\"));                               // 46\n  })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\", Blaze.If(function() {                                                                   // 47\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                      // 48\n  }, function() {                                                                                                     // 49\n    return [ \"\\n\\t\\t\\t\", HTML.DIV({                                                                                   // 50\n      class: \"form-group row\"                                                                                         // 51\n    }, \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                       // 52\n      class: \"col-2\"                                                                                                  // 53\n    }, \"Exam:\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                             // 54\n      class: \"col-10\"                                                                                                 // 55\n    }, HTML.INPUT({                                                                                                   // 56\n      type: \"checkbox\",                                                                                               // 57\n      name: \"isExam\",                                                                                                 // 58\n      checked: function() {                                                                                           // 59\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"isExam\"));                         // 60\n      }                                                                                                               // 61\n    })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];                                                                                     // 62\n  }), \"\\n\\t\\t\"), \"\\n\\t\\t\", HTML.DIV({                                                                                 // 63\n    class: \"tab-pane\",                                                                                                // 64\n    id: \"submission_result_tpl\"                                                                                       // 65\n  }, \"\\n\\t\\t\", Blaze.Each(function() {                                                                                // 66\n    return {                                                                                                          // 67\n      _sequence: Spacebars.call(view.lookup(\"submissionResultList\")),                                                 // 68\n      _variable: \"submissionResult\"                                                                                   // 69\n    };                                                                                                                // 70\n  }, function() {                                                                                                     // 71\n    return [ \"\\n\\t    \\t\", HTML.LI({                                                                                  // 72\n      \"data-id\": function() {                                                                                         // 73\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"submissionResult\"), \"_id\"));                             // 74\n      },                                                                                                              // 75\n      class: \"list-group-item\"                                                                                        // 76\n    }, \"\\n\\t    \\t\", Blaze.If(function() {                                                                            // 77\n      return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                    // 78\n    }, function() {                                                                                                   // 79\n      return [ \"\\n\\t    \\t\\t\", HTML.BUTTON({                                                                          // 80\n        class: \"btn btn-sm btn-danger remove-btn fa fa-remove\"                                                        // 81\n      }), \"\\n\\t    \\t\\t\", HTML.BUTTON({                                                                               // 82\n        class: \"btn btn-sm btn-warning update-btn fa fa-refresh\"                                                      // 83\n      }), \"\\n\\t    \\t\" ];                                                                                             // 84\n    }), \"\\n\\t    \\t\\t\", HTML.SPAN({                                                                                   // 85\n      class: \"ml-1\"                                                                                                   // 86\n    }, Blaze.View(\"lookup:submissionResult.status\", function() {                                                      // 87\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"submissionResult\"), \"status\"));                            // 88\n    })), \"\\n\\t    \\t\\t\", HTML.SPAN({                                                                                  // 89\n      class: \"ml-1\"                                                                                                   // 90\n    }, Blaze.View(\"lookup:submissionResult.timeUsed\", function() {                                                    // 91\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"submissionResult\"), \"timeUsed\"));                          // 92\n    }), \" ms\"), \"\\n\\t    \\t\\t\", HTML.SPAN({                                                                           // 93\n      class: \"ml-1\"                                                                                                   // 94\n    }, Blaze.View(\"lookup:submissionResult.memoryUsed\", function() {                                                  // 95\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"submissionResult\"), \"memoryUsed\"));                        // 96\n    }), \" kb\"), \"\\n\\t    \\t\"), \"\\n\\t\\t\" ];                                                                            // 97\n  }), \"\\n\\t\\t\"), \"\\n\\t\\t\", HTML.DIV({                                                                                 // 98\n    class: \"tab-pane\",                                                                                                // 99\n    id: \"submission_code_tpl\"                                                                                         // 100\n  }, \"\\n\\t\\t\\t\", HTML.P({                                                                                             // 101\n    \"data-toggle\": \".code-edit\",                                                                                      // 102\n    class: \"code-view\"                                                                                                // 103\n  }, Blaze.View(\"lookup:currentSubmission.code\", function() {                                                         // 104\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"code\"));                               // 105\n  })), \"\\n\\t\\t\\t\", HTML.TEXTAREA({                                                                                    // 106\n    \"data-toggle\": \".code-view\",                                                                                      // 107\n    class: \"code-edit form-control\",                                                                                  // 108\n    name: \"code\",                                                                                                     // 109\n    value: function() {                                                                                               // 110\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"code\"));                             // 111\n    }                                                                                                                 // 112\n  }), \"\\n\\t\\t\"), \"\\n\\t\") ];                                                                                           // 113\n}));                                                                                                                  // 114\n                                                                                                                      // 115\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"list.html\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/submission/list.html                                                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nthrow new Error(\"Unexpected closing template tag\\n...n._id}}active{{/$eq}}\\\"> \\t    \\t{{#if $.Met...\\n                        ^\");\n                                                                                                                      // 2\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.html\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/submission/main.html                                                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./template.main.js\"), {                                                                         // 1\n  \"*\": module.makeNsSetter()                                                                                          // 2\n});                                                                                                                   // 3\n                                                                                                                      // 4\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.main.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/submission/template.main.js                                                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.__checkName(\"submission_main\");                                                                              // 2\nTemplate[\"submission_main\"] = new Template(\"Template.submission_main\", (function() {                                  // 3\n  var view = this;                                                                                                    // 4\n  return [ Blaze._TemplateWith(function() {                                                                           // 5\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                  // 6\n  }, function() {                                                                                                     // 7\n    return Spacebars.include(view.lookupTemplate(\"submission_list\"));                                                 // 8\n  }), \"\\n\\t\", HTML.DIV({                                                                                              // 9\n    class: \"modal\"                                                                                                    // 10\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                             // 11\n    class: \"modal-dialog\"                                                                                             // 12\n  }, \"\\n\\t\\t\\t\", HTML.DIV({                                                                                           // 13\n    class: \"modal-content\"                                                                                            // 14\n  }, \"      \\t\\t\\t\\n\\t\\t\\t\\t\", HTML.DIV({                                                                             // 15\n    class: \"modal-body\"                                                                                               // 16\n  }, \"\\n\\t\\t\\t\\t\\t\", Blaze._TemplateWith(function() {                                                                 // 17\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                  // 18\n  }, function() {                                                                                                     // 19\n    return Spacebars.include(view.lookupTemplate(\"submission_detail\"));                                               // 20\n  }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\") ];                                                               // 21\n}));                                                                                                                  // 22\n                                                                                                                      // 23\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"detail.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/submission/detail.js                                                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Problems = void 0;                                                                                                // 1\nmodule.watch(require(\"/imports/api/problem.js\"), {                                                                    // 1\n\tProblems: function (v) {                                                                                             // 1\n\t\tProblems = v;                                                                                                       // 1\n\t}                                                                                                                    // 1\n}, 0);                                                                                                                // 1\nvar Students = void 0;                                                                                                // 1\nmodule.watch(require(\"/imports/api/student.js\"), {                                                                    // 1\n\tStudents: function (v) {                                                                                             // 1\n\t\tStudents = v;                                                                                                       // 1\n\t}                                                                                                                    // 1\n}, 1);                                                                                                                // 1\nvar Submissions = void 0,                                                                                             // 1\n    SubmissionResults = void 0;                                                                                       // 1\nmodule.watch(require(\"/imports/api/submission.js\"), {                                                                 // 1\n\tSubmissions: function (v) {                                                                                          // 1\n\t\tSubmissions = v;                                                                                                    // 1\n\t},                                                                                                                   // 1\n\tSubmissionResults: function (v) {                                                                                    // 1\n\t\tSubmissionResults = v;                                                                                              // 1\n\t}                                                                                                                    // 1\n}, 2);                                                                                                                // 1\nmodule.watch(require(\"./detail.html\"));                                                                               // 1\nTemplate.submission_detail.onCreated(function () {                                                                    // 6\n\tvar _this = this;                                                                                                    // 6\n                                                                                                                      //\n\tthis.autorun(function () {                                                                                           // 7\n\t\t_this.subscribe('Submissions.findOne', _this.data.currentSubmissionId.get());                                       // 8\n                                                                                                                      //\n\t\t_this.subscribe('SubmissionResults.findAllBySubmission', _this.data.currentSubmissionId.get());                     // 9\n\t});                                                                                                                  // 10\n});                                                                                                                   // 11\nTemplate.submission_detail.onRendered(function () {                                                                   // 13\n\tthis.$('[class*=edit]').hide();                                                                                      // 14\n});                                                                                                                   // 15\nTemplate.submission_detail.helpers({                                                                                  // 17\n\tcurrentSubmission: function () {                                                                                     // 18\n\t\tvar submission = Submissions.findOne({                                                                              // 19\n\t\t\t_id: this.currentSubmissionId.get()                                                                                // 19\n\t\t});                                                                                                                 // 19\n                                                                                                                      //\n\t\tif (submission == undefined) {                                                                                      // 21\n\t\t\tthis.currentSubmissionId.set(null);                                                                                // 22\n\t\t}                                                                                                                   // 23\n                                                                                                                      //\n\t\treturn submission;                                                                                                  // 24\n\t},                                                                                                                   // 25\n\tsubmissionResultList: function () {                                                                                  // 26\n\t\treturn SubmissionResults.find({                                                                                     // 27\n\t\t\tsubmissionId: this.currentSubmissionId.get()                                                                       // 27\n\t\t});                                                                                                                 // 27\n\t},                                                                                                                   // 28\n\tgetStudentUsername: function (studentId) {                                                                           // 29\n\t\treturn Meteor.getValue(Students, studentId, 'username');                                                            // 30\n\t},                                                                                                                   // 31\n\tgetProblemTitle: function (problemId) {                                                                              // 32\n\t\treturn Meteor.getValue(Problems, problemId, 'title');                                                               // 33\n\t}                                                                                                                    // 34\n});                                                                                                                   // 17\nTemplate.submission_detail.events({                                                                                   // 37\n\t'blur [class*=edit]': function (event, instance) {                                                                   // 38\n\t\tvar _Meteor$call;                                                                                                   // 38\n                                                                                                                      //\n\t\tvar target = event.currentTarget;                                                                                   // 39\n\t\tvar toggle = target.dataset.toggle;                                                                                 // 40\n\t\tvar field = target.name;                                                                                            // 41\n\t\tvar value = target.value;                                                                                           // 42\n\t\tinstance.$(target).hide();                                                                                          // 44\n\t\tinstance.$(toggle).show();                                                                                          // 45\n\t\tMeteor.call('Submissions.update', this.currentSubmissionId.get(), (_Meteor$call = {}, _Meteor$call[field] = value, _Meteor$call));\n\t},                                                                                                                   // 48\n\t'click [class*=view]': function (event, instance) {                                                                  // 49\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 50\n\t\tvar target = event.currentTarget;                                                                                   // 52\n\t\tvar toggle = target.dataset.toggle;                                                                                 // 53\n\t\tinstance.$(target).hide();                                                                                          // 55\n\t\tinstance.$(toggle).show().focus();                                                                                  // 56\n\t},                                                                                                                   // 57\n\t'click [type=checkbox]': function (event) {                                                                          // 58\n\t\tvar _Meteor$call2;                                                                                                  // 58\n                                                                                                                      //\n\t\tvar target = event.currentTarget;                                                                                   // 59\n\t\tvar field = target.name;                                                                                            // 60\n\t\tvar value = target.checked;                                                                                         // 61\n\t\tMeteor.call('Submissions.update', this.currentSubmissionId.get(), (_Meteor$call2 = {}, _Meteor$call2[field] = value, _Meteor$call2));\n\t}                                                                                                                    // 64\n});                                                                                                                   // 37\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"list.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/submission/list.js                                                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Submissions = void 0;                                                                                             // 1\nmodule.watch(require(\"/imports/api/submission.js\"), {                                                                 // 1\n\tSubmissions: function (v) {                                                                                          // 1\n\t\tSubmissions = v;                                                                                                    // 1\n\t}                                                                                                                    // 1\n}, 0);                                                                                                                // 1\nmodule.watch(require(\"./list.html\"));                                                                                 // 1\nTemplate.submission_list.onCreated(function () {                                                                      // 4\n\tvar _this = this;                                                                                                    // 4\n                                                                                                                      //\n\tthis.autorun(function () {                                                                                           // 5\n\t\treturn _this.subscribe('Submissions.findAllByFilter', _this.data.currentFilter.get());                              // 5\n\t});                                                                                                                  // 5\n});                                                                                                                   // 6\nTemplate.submission_list.helpers({                                                                                    // 8\n\thasFilter: function () {                                                                                             // 9\n\t\treturn _.without(_.values(this.currentFilter.get()), null).length > 0;                                              // 10\n\t},                                                                                                                   // 11\n\tsubmissionList: function () {                                                                                        // 12\n\t\tSubmissions.find(this.currentFilter.get(), {                                                                        // 13\n\t\t\tfields: {                                                                                                          // 13\n\t\t\t\t_id: 1,                                                                                                           // 13\n\t\t\t\tproblemId: 1,                                                                                                     // 13\n\t\t\t\tstudentId: 1,                                                                                                     // 13\n\t\t\t\tcreatedAt: 1,                                                                                                     // 13\n\t\t\t\tstatus: 1,                                                                                                        // 13\n\t\t\t\tisExam: 1                                                                                                         // 13\n\t\t\t}                                                                                                                  // 13\n\t\t});                                                                                                                 // 13\n\t},                                                                                                                   // 14\n\tgetStudentUsername: function (studentId) {                                                                           // 15\n\t\treturn Meteor.getValue(Students, studentId, 'username');                                                            // 16\n\t},                                                                                                                   // 17\n\tgetProblemTitle: function (problemId) {                                                                              // 18\n\t\treturn Meteor.getValue(Problems, problemId, 'title');                                                               // 19\n\t}                                                                                                                    // 20\n});                                                                                                                   // 8\nTemplate.submission_list.events({                                                                                     // 23\n\t'click .remove-btn': function (event) {                                                                              // 24\n\t\tvar id = event.currentTarget.parentElement.dataset.id;                                                              // 25\n\t\tMeteor.call('Submissions.remove', {                                                                                 // 26\n\t\t\t_id: id                                                                                                            // 26\n\t\t});                                                                                                                 // 26\n\t},                                                                                                                   // 27\n\t'click .update-btn': function (event) {                                                                              // 28\n\t\tMeteor.call('Submissions.update', id, {});                                                                          // 29\n\t},                                                                                                                   // 30\n\t'click .get-btn': function (event) {                                                                                 // 31\n\t\tvar id = event.currentTarget.dataset.id;                                                                            // 32\n\t\tthis.currentSubmissionId.set(id);                                                                                   // 33\n\t}                                                                                                                    // 34\n});                                                                                                                   // 23\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/submission/main.js                                                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.watch(require(\"./list.js\"));                                                                                   // 1\nmodule.watch(require(\"./detail.js\"));                                                                                 // 1\nmodule.watch(require(\"./main.html\"));                                                                                 // 1\nTemplate.submission_main.onCreated(function () {                                                                      // 5\n\tvar _this = this;                                                                                                    // 5\n                                                                                                                      //\n\tthis.currentFilter = new ReactiveVar({});                                                                            // 6\n\tthis.currentSubmissionId = new ReactiveVar(null);                                                                    // 7\n\tthis.autorun(function () {                                                                                           // 8\n\t\tif (_this.data.currentProblemId) _this.currentFilter.problemId = _this.data.currentProblemId.get();                 // 9\n\t\tif (_this.data.currentStudentId) _this.currentFilter.studentId = _this.data.currentStudentId.get();                 // 10\n\t});                                                                                                                  // 11\n});                                                                                                                   // 12\nTemplate.submission_main.helpers({                                                                                    // 14\n\tshareArgs: function () {                                                                                             // 15\n\t\treturn {                                                                                                            // 16\n\t\t\tcurrentFilter: Template.instance().currentFilter,                                                                  // 17\n\t\t\tcurrentSubmissionId: Template.instance().currentSubmissionId                                                       // 18\n\t\t};                                                                                                                  // 16\n\t}                                                                                                                    // 20\n});                                                                                                                   // 14\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"api\":{\"problem.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/api/problem.js                                                                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({                                                                                                       // 1\n\tProblems: function () {                                                                                              // 1\n\t\treturn Problems;                                                                                                    // 1\n\t},                                                                                                                   // 1\n\tProblemTests: function () {                                                                                          // 1\n\t\treturn ProblemTests;                                                                                                // 1\n\t}                                                                                                                    // 1\n});                                                                                                                   // 1\nmodule.watch(require(\"./utility.js\"));                                                                                // 1\nvar Problems = new Mongo.Collection('Problems');                                                                      // 3\nvar ProblemTests = new Mongo.Collection('ProblemTests');                                                              // 4\n                                                                                                                      //\nif (Meteor.isServer) {                                                                                                // 6\n\tMeteor.publish('Problems.findAll', function () {                                                                     // 7\n\t\tvar filter = {};                                                                                                    // 8\n\t\tvar option = {                                                                                                      // 9\n\t\t\tfields: {                                                                                                          // 9\n\t\t\t\t_id: 1,                                                                                                           // 9\n\t\t\t\ttitle: 1,                                                                                                         // 9\n\t\t\t\tisExam: 1,                                                                                                        // 9\n\t\t\t\tisPublic: 1                                                                                                       // 9\n\t\t\t}                                                                                                                  // 9\n\t\t};                                                                                                                  // 9\n                                                                                                                      //\n\t\tif (!Meteor.isAdmin()) {                                                                                            // 11\n\t\t\tfilter.isPublic = true;                                                                                            // 12\n\t\t}                                                                                                                   // 13\n                                                                                                                      //\n\t\treturn Problems.find(filter, option);                                                                               // 14\n\t});                                                                                                                  // 15\n\tMeteor.publish('Problems.findOne', function (id) {                                                                   // 16\n\t\tvar filter = {                                                                                                      // 17\n\t\t\t_id: id                                                                                                            // 17\n\t\t};                                                                                                                  // 17\n\t\tvar option = {};                                                                                                    // 18\n                                                                                                                      //\n\t\tif (!Meteor.isAdmin()) {                                                                                            // 20\n\t\t\tfilter.isPublic = true;                                                                                            // 21\n\t\t}                                                                                                                   // 22\n                                                                                                                      //\n\t\treturn Problems.find(filter, option);                                                                               // 23\n\t});                                                                                                                  // 24\n\tMeteor.publish('ProblemTests.findAllByProblem', function (problemId) {                                               // 25\n\t\tvar filter = {                                                                                                      // 26\n\t\t\tproblemId: problemId                                                                                               // 26\n\t\t};                                                                                                                  // 26\n\t\tvar option = {};                                                                                                    // 27\n                                                                                                                      //\n\t\tif (!Meteor.isAdmin()) {                                                                                            // 29\n\t\t\tif (!Meteor.getValue(Problems, problemId, 'isPublic')) {                                                           // 30\n\t\t\t\tfilter.problemId = null;                                                                                          // 31\n\t\t\t}                                                                                                                  // 32\n                                                                                                                      //\n\t\t\tfilter.isPublic = true;                                                                                            // 33\n\t\t}                                                                                                                   // 34\n                                                                                                                      //\n\t\treturn ProblemTests.find(filter, option);                                                                           // 35\n\t});                                                                                                                  // 36\n}                                                                                                                     // 37\n                                                                                                                      //\nMeteor.methods({                                                                                                      // 39\n\t'Problems.insert': function () {                                                                                     // 40\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 41\n\t\tProblems.insert({                                                                                                   // 43\n\t\t\ttitle: 'Sample Title',                                                                                             // 44\n\t\t\tdescription: 'Sample Description',                                                                                 // 45\n\t\t\tinputFormat: 'Sample Input Format',                                                                                // 46\n\t\t\toutputFormat: 'Sample Output Format',                                                                              // 47\n\t\t\thint: 'Sample Hint',                                                                                               // 48\n\t\t\tisExam: false,                                                                                                     // 49\n\t\t\tisPublic: false                                                                                                    // 50\n\t\t});                                                                                                                 // 43\n\t},                                                                                                                   // 52\n\t'Problems.remove': function (filter) {                                                                               // 53\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 54\n\t\tProblems.find(filter).forEach(function (problem) {                                                                  // 56\n\t\t\tMeteor.call('ProblemTests.remove', {                                                                               // 57\n\t\t\t\tproblemId: problem._id                                                                                            // 57\n\t\t\t});                                                                                                                // 57\n\t\t\tMeteor.call('Submissions.remove', {                                                                                // 58\n\t\t\t\tproblemId: problem._id                                                                                            // 58\n\t\t\t});                                                                                                                // 58\n\t\t});                                                                                                                 // 59\n\t\tProblems.remove(filter);                                                                                            // 60\n\t},                                                                                                                   // 61\n\t'Problems.update': function (id, option) {                                                                           // 62\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 63\n\t\tProblems.update({                                                                                                   // 65\n\t\t\t_id: id                                                                                                            // 65\n\t\t}, {                                                                                                                // 65\n\t\t\t$set: option                                                                                                       // 65\n\t\t});                                                                                                                 // 65\n\t},                                                                                                                   // 66\n\t'ProblemTests.insert': function (problemId) {                                                                        // 67\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 68\n\t\tvar problemTestId = ProblemTests.insert({                                                                           // 70\n\t\t\tproblemId: problemId,                                                                                              // 71\n\t\t\tinput: 'Sample Input',                                                                                             // 72\n\t\t\toutput: 'Sample Output',                                                                                           // 73\n\t\t\ttimeLimit: 1000,                                                                                                   // 74\n\t\t\tmemoryLimit: 64000,                                                                                                // 75\n\t\t\tscore: 5,                                                                                                          // 76\n\t\t\tisPublic: false                                                                                                    // 77\n\t\t});                                                                                                                 // 70\n                                                                                                                      //\n\t\tif (Meteor.isServer) {                                                                                              // 79\n\t\t\tMeteor.call('ProblemTests.createDir', problemTestId);                                                              // 80\n\t\t}                                                                                                                   // 81\n\t},                                                                                                                   // 82\n\t'ProblemTests.remove': function (filter) {                                                                           // 83\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 84\n\t\tProblemTests.find(filter).forEach(function (problemTest) {                                                          // 86\n\t\t\tMeteor.call('SubmissionResults.remove', {                                                                          // 87\n\t\t\t\tproblemTestId: problemTest._id                                                                                    // 87\n\t\t\t});                                                                                                                // 87\n                                                                                                                      //\n\t\t\tif (Meteor.isServer) {                                                                                             // 89\n\t\t\t\tMeteor.call('ProblemTests.removeDir', problemTest._id);                                                           // 90\n\t\t\t}                                                                                                                  // 91\n\t\t});                                                                                                                 // 92\n\t\tProblemTests.remove(filter);                                                                                        // 93\n\t},                                                                                                                   // 94\n\t'ProblemTests.update': function (id, option) {                                                                       // 95\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 96\n\t\tProblemTests.update({                                                                                               // 98\n\t\t\t_id: id                                                                                                            // 98\n\t\t}, {                                                                                                                // 98\n\t\t\t$set: option                                                                                                       // 98\n\t\t});                                                                                                                 // 98\n                                                                                                                      //\n\t\tif (Meteor.isServer) {                                                                                              // 100\n\t\t\tif (option.input) Meteor.call('ProblemTests.writeFile', id, 'input', option.input);                                // 101\n\t\t\tif (option.output) Meteor.call('ProblemTests.writeFile', id, 'output', option.output);                             // 102\n\t\t}                                                                                                                   // 103\n\t}                                                                                                                    // 104\n});                                                                                                                   // 39\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"student.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/api/student.js                                                                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({                                                                                                       // 1\n\tStudents: function () {                                                                                              // 1\n\t\treturn Students;                                                                                                    // 1\n\t}                                                                                                                    // 1\n});                                                                                                                   // 1\nvar Random = void 0;                                                                                                  // 1\nmodule.watch(require(\"meteor/random\"), {                                                                              // 1\n\tRandom: function (v) {                                                                                               // 1\n\t\tRandom = v;                                                                                                         // 1\n\t}                                                                                                                    // 1\n}, 0);                                                                                                                // 1\nmodule.watch(require(\"./utility.js\"));                                                                                // 1\nvar Students = Meteor.users;                                                                                          // 4\n                                                                                                                      //\nif (Meteor.isServer) {                                                                                                // 6\n\tMeteor.publish('Students.findAll', function () {                                                                     // 7\n\t\tvar filter = {};                                                                                                    // 8\n\t\tvar option = {                                                                                                      // 9\n\t\t\tfields: {                                                                                                          // 9\n\t\t\t\t_id: 1,                                                                                                           // 9\n\t\t\t\tusername: 1,                                                                                                      // 9\n\t\t\t\tisAdmin: 1                                                                                                        // 9\n\t\t\t}                                                                                                                  // 9\n\t\t};                                                                                                                  // 9\n\t\treturn Students.find(filter, option);                                                                               // 11\n\t});                                                                                                                  // 12\n\tMeteor.publish('Students.findOne', function (id) {                                                                   // 13\n\t\tvar filter = {                                                                                                      // 14\n\t\t\t_id: id                                                                                                            // 14\n\t\t};                                                                                                                  // 14\n\t\tvar option = {                                                                                                      // 15\n\t\t\tfields: {                                                                                                          // 15\n\t\t\t\t_id: 1,                                                                                                           // 15\n\t\t\t\tusername: 1,                                                                                                      // 15\n\t\t\t\tfullname: 1,                                                                                                      // 15\n\t\t\t\temails: 1,                                                                                                        // 15\n\t\t\t\tyear: 1,                                                                                                          // 15\n\t\t\t\tisAdmin: 1                                                                                                        // 15\n\t\t\t}                                                                                                                  // 15\n\t\t};                                                                                                                  // 15\n\t\treturn Students.find(filter, option);                                                                               // 17\n\t});                                                                                                                  // 18\n}                                                                                                                     // 19\n                                                                                                                      //\nMeteor.methods({                                                                                                      // 21\n\t'Students.insert': function () {                                                                                     // 22\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 23\n\t\tAccounts.createUser({                                                                                               // 25\n\t\t\tusername: 'Sample Username',                                                                                       // 26\n\t\t\tfullname: 'Sample Fullname',                                                                                       // 27\n\t\t\tpassword: Random.id(),                                                                                             // 28\n\t\t\temail: 'dsca@inrg.csie.ntu.edu.tw',                                                                                // 29\n\t\t\tyear: new Date().getFullYear(),                                                                                    // 30\n\t\t\tisAdmin: false                                                                                                     // 31\n\t\t});                                                                                                                 // 25\n\t},                                                                                                                   // 33\n\t'Students.remove': function (filter) {                                                                               // 34\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 35\n\t\tStudents.find(filter).forEach(function (student) {                                                                  // 37\n\t\t\tMeteor.call('Submissions.remove', {                                                                                // 38\n\t\t\t\tstudentId: student._id                                                                                            // 38\n\t\t\t});                                                                                                                // 38\n\t\t});                                                                                                                 // 39\n\t\tStudents.remove(filter);                                                                                            // 40\n\t},                                                                                                                   // 41\n\t'Students.update': function (id, option) {                                                                           // 42\n\t\tif (!Meteor.isAdmin() || !Meteor.isServer) return;                                                                  // 43\n                                                                                                                      //\n\t\tif (option.username) {                                                                                              // 45\n\t\t\tAccounts.setUsername(id, option.username);                                                                         // 46\n\t\t\tdelete option.username;                                                                                            // 47\n\t\t}                                                                                                                   // 48\n                                                                                                                      //\n\t\tif (option.password) {                                                                                              // 49\n\t\t\tAccounts.setPassword(id, option.password);                                                                         // 50\n\t\t\tdelete option.password;                                                                                            // 51\n\t\t}                                                                                                                   // 52\n                                                                                                                      //\n\t\tif (option.email) {                                                                                                 // 53\n\t\t\tStudents.update({                                                                                                  // 54\n\t\t\t\t_id: id                                                                                                           // 54\n\t\t\t}, {                                                                                                               // 54\n\t\t\t\t$set: {                                                                                                           // 54\n\t\t\t\t\temails: []                                                                                                       // 54\n\t\t\t\t}                                                                                                                 // 54\n\t\t\t});                                                                                                                // 54\n\t\t\tAccounts.addEmail(id, option.email);                                                                               // 55\n\t\t\tdelete option.email;                                                                                               // 56\n\t\t}                                                                                                                   // 57\n                                                                                                                      //\n\t\tif (!_.isEmpty(option)) {                                                                                           // 58\n\t\t\tStudents.update({                                                                                                  // 59\n\t\t\t\t_id: id                                                                                                           // 59\n\t\t\t}, {                                                                                                               // 59\n\t\t\t\t$set: option                                                                                                      // 59\n\t\t\t});                                                                                                                // 59\n\t\t}                                                                                                                   // 60\n\t},                                                                                                                   // 61\n\t'Students.changePassword': function (oldPassword, newPassword) {                                                     // 62\n\t\tif (!Meteor.isServer) return;                                                                                       // 63\n\t\tAccounts.changePassword(oldPassword, newPassword);                                                                  // 65\n\t}                                                                                                                    // 66\n});                                                                                                                   // 21\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"submission.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/api/submission.js                                                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({                                                                                                       // 1\n\tSubmissions: function () {                                                                                           // 1\n\t\treturn Submissions;                                                                                                 // 1\n\t},                                                                                                                   // 1\n\tSubmissionResults: function () {                                                                                     // 1\n\t\treturn SubmissionResults;                                                                                           // 1\n\t}                                                                                                                    // 1\n});                                                                                                                   // 1\nvar Problems = void 0,                                                                                                // 1\n    ProblemTests = void 0;                                                                                            // 1\nmodule.watch(require(\"./problem.js\"), {                                                                               // 1\n\tProblems: function (v) {                                                                                             // 1\n\t\tProblems = v;                                                                                                       // 1\n\t},                                                                                                                   // 1\n\tProblemTests: function (v) {                                                                                         // 1\n\t\tProblemTests = v;                                                                                                   // 1\n\t}                                                                                                                    // 1\n}, 0);                                                                                                                // 1\nmodule.watch(require(\"./utility.js\"));                                                                                // 1\nvar Submissions = new Mongo.Collection('Submissions');                                                                // 4\nvar SubmissionResults = new Mongo.Collection('SubmissionResults');                                                    // 5\n                                                                                                                      //\nif (Meteor.isServer) {                                                                                                // 7\n\tMeteor.publish('Submissions.findAllByFilter', function (filter) {                                                    // 8\n\t\tvar option = {                                                                                                      // 9\n\t\t\tfields: {                                                                                                          // 9\n\t\t\t\t_id: 1,                                                                                                           // 9\n\t\t\t\tproblemId: 1,                                                                                                     // 9\n\t\t\t\tstudentId: 1,                                                                                                     // 9\n\t\t\t\tcreatedAt: 1,                                                                                                     // 9\n\t\t\t\tstatus: 1,                                                                                                        // 9\n\t\t\t\tisExam: 1                                                                                                         // 9\n\t\t\t}                                                                                                                  // 9\n\t\t};                                                                                                                  // 9\n\t\treturn Submissions.find(filter, option);                                                                            // 11\n\t});                                                                                                                  // 12\n\tMeteor.publish('Submissions.findOne', function (id) {                                                                // 13\n\t\tvar filter = {                                                                                                      // 14\n\t\t\t_id: id                                                                                                            // 14\n\t\t};                                                                                                                  // 14\n\t\tvar option = {};                                                                                                    // 15\n                                                                                                                      //\n\t\tif (!Meteor.isAdmin() && !Meteor.isOwner(Meteor.getValue(Submissions, id, 'studentId'))) {                          // 17\n\t\t\toption.fields = {                                                                                                  // 18\n\t\t\t\tcode: 0                                                                                                           // 18\n\t\t\t};                                                                                                                 // 18\n\t\t}                                                                                                                   // 19\n                                                                                                                      //\n\t\treturn Submissions.find(filter, option);                                                                            // 20\n\t});                                                                                                                  // 21\n\tMeteor.publish('SubmissionResults.findAllBySubmission', function (submissionId) {                                    // 22\n\t\tvar filter = {                                                                                                      // 23\n\t\t\tsubmissionId: submissionId                                                                                         // 23\n\t\t};                                                                                                                  // 23\n\t\tvar option = {};                                                                                                    // 24\n                                                                                                                      //\n\t\tif (!Meteor.getValue(Submissions, submissionId, 'isExam')) {                                                        // 26\n\t\t\tvar problemId = Meteor.getValue(Submissions, submissionId, 'problemId');                                           // 27\n\t\t\tfilter.problemTestId = {                                                                                           // 28\n\t\t\t\t$in: []                                                                                                           // 28\n\t\t\t};                                                                                                                 // 28\n\t\t\tProblemTests.find({                                                                                                // 30\n\t\t\t\tproblemId: problemId,                                                                                             // 30\n\t\t\t\tisPublic: 1                                                                                                       // 30\n\t\t\t}).forEach(function (problemTest) {                                                                                // 30\n\t\t\t\tfilter.problemTestId.$in.push(problemTest._id);                                                                   // 31\n\t\t\t});                                                                                                                // 32\n\t\t}                                                                                                                   // 33\n                                                                                                                      //\n\t\treturn SubmissionResults.find(filter, option);                                                                      // 34\n\t});                                                                                                                  // 35\n}                                                                                                                     // 36\n                                                                                                                      //\nMeteor.methods({                                                                                                      // 38\n\t'Submissions.insert': function (problemId, studentId, lang, code) {                                                  // 39\n\t\tif (!Meteor.isOwner(studentId) || !Meteor.getValue(Problems, problemId, '_id')) return;                             // 40\n\t\tvar submissionId = Submissions.insert({                                                                             // 42\n\t\t\tproblemId: problemId,                                                                                              // 43\n\t\t\tstudentId: studentId,                                                                                              // 44\n\t\t\tcreatedAt: new Date().getTime(),                                                                                   // 45\n\t\t\tstatus: 'Pending',                                                                                                 // 46\n\t\t\tlang: lang,                                                                                                        // 47\n\t\t\tcode: code,                                                                                                        // 48\n\t\t\tisExam: Meteor.getValue(Problems, problemId, 'isExam')                                                             // 49\n\t\t});                                                                                                                 // 42\n                                                                                                                      //\n\t\tif (Meteor.isServer) {                                                                                              // 51\n\t\t\tMeteor.call('Submissions.createDir', submissionId);                                                                // 52\n\t\t}                                                                                                                   // 53\n\t},                                                                                                                   // 54\n\t'Submissions.remove': function (filter) {                                                                            // 55\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 56\n\t\tSubmissions.find(filter).forEach(function (submission) {                                                            // 58\n\t\t\tMeteor.call('SubmissionResults.remove', {                                                                          // 59\n\t\t\t\tsubmissionId: submission._id                                                                                      // 59\n\t\t\t});                                                                                                                // 59\n                                                                                                                      //\n\t\t\tif (Meteor.isServer) {                                                                                             // 61\n\t\t\t\tMeteor.call('Submissions.removeDir', submission._id);                                                             // 62\n\t\t\t}                                                                                                                  // 63\n\t\t});                                                                                                                 // 64\n\t\tSubmissions.remove(filter);                                                                                         // 65\n\t},                                                                                                                   // 66\n\t'Submissions.update': function (id, option) {                                                                        // 67\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 68\n\t\tSubmissions.update({                                                                                                // 70\n\t\t\t_id: id                                                                                                            // 70\n\t\t}, {                                                                                                                // 70\n\t\t\t$set: option                                                                                                       // 70\n\t\t});                                                                                                                 // 70\n                                                                                                                      //\n\t\tif (Meteor.isServer) {                                                                                              // 72\n\t\t\tif (option.lang || option.code) Meteor.call('Submissions.createDir', id);                                          // 73\n\t\t}                                                                                                                   // 75\n\t},                                                                                                                   // 76\n\t'SubmissionResults.insert': function (problemTestId, submissionId) {                                                 // 77\n\t\t//if (!Meteor.isAdmin()) return;                                                                                    // 78\n\t\tvar submissionResultId = SubmissionResults.insert({                                                                 // 80\n\t\t\tproblemTestId: problemTestId,                                                                                      // 81\n\t\t\tsubmissionId: submissionId,                                                                                        // 82\n\t\t\ttimeUsed: null,                                                                                                    // 83\n\t\t\tmemoryUsed: null,                                                                                                  // 84\n\t\t\tstatus: 'Pending'                                                                                                  // 85\n\t\t});                                                                                                                 // 80\n                                                                                                                      //\n\t\tif (Meteor.isServer) {                                                                                              // 87\n\t\t\tMeteor.call('SubmissionResults.createDir', submissionResultId);                                                    // 88\n\t\t}                                                                                                                   // 89\n\t},                                                                                                                   // 90\n\t'SubmissionResults.remove': function (filter) {                                                                      // 91\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 92\n\t\tSubmissionResults.find(filter).forEach(function (submissionResult) {                                                // 94\n\t\t\tif (Meteor.isServer) {                                                                                             // 95\n\t\t\t\tMeteor.call('SubmissionResults.removeDir', submissionResult._id);                                                 // 96\n\t\t\t}                                                                                                                  // 97\n\t\t});                                                                                                                 // 98\n\t\tSubmissionResults.remove(filter);                                                                                   // 99\n\t},                                                                                                                   // 100\n\t'SubmissionResults.update': function (id) {                                                                          // 101\n\t\tif (!Meteor.isAdmin()) return;                                                                                      // 102\n                                                                                                                      //\n\t\tif (Meteor.isServer) {                                                                                              // 104\n\t\t\tMeteor.call('SubmissionResults.createDir', id);                                                                    // 105\n\t\t}                                                                                                                   // 106\n\t}                                                                                                                    // 107\n});                                                                                                                   // 38\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"utility.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/api/utility.js                                                                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nMeteor.getValue = function (collection, id, field) {                                                                  // 1\n\tvar _fields;                                                                                                         // 1\n                                                                                                                      //\n\tvar doc = collection.findOne({                                                                                       // 2\n\t\t_id: id                                                                                                             // 2\n\t}, {                                                                                                                 // 2\n\t\tfields: (_fields = {}, _fields[field] = 1, _fields)                                                                 // 2\n\t});                                                                                                                  // 2\n\treturn doc ? doc[field] : null;                                                                                      // 3\n};                                                                                                                    // 4\n                                                                                                                      //\nMeteor.isAdmin = function () {                                                                                        // 6\n\tvar user = Meteor.user();                                                                                            // 7\n\treturn user && user.isAdmin;                                                                                         // 8\n};                                                                                                                    // 9\n                                                                                                                      //\nMeteor.isOwner = function (id) {                                                                                      // 11\n\tvar user = Meteor.user();                                                                                            // 12\n\treturn user && user._id == id;                                                                                       // 13\n};                                                                                                                    // 14\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"template.main.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/template.main.js                                                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.body.addContent((function() {                                                                                // 2\n  var view = this;                                                                                                    // 3\n  return [ HTML.UL({                                                                                                  // 4\n    class: \"nav nav-pills bg-secondary\"                                                                               // 5\n  }, \"\\n\\t\\t\", HTML.Raw('<li class=\"nav-item\"><a class=\"nav-link text-white\"><strong>DSCA Judge</strong></a></li>'), \"\\n  \\t\\t\", HTML.Raw('<li class=\"nav-item\"><a class=\"nav-link text-white\" data-toggle=\"pill\" href=\"#problem_main_tpl\">Problems</a></li>'), \"\\n\\t\\t\", HTML.Raw('<li class=\"nav-item\"><a class=\"nav-link text-white\" data-toggle=\"pill\" href=\"#student_main_tpl\">Students</a></li>'), \"\\n\\t\\t\", HTML.LI({\n    class: \"nav-item ml-auto text-white\"                                                                              // 7\n  }, \"\\n\\t\\t\", Blaze.If(function() {                                                                                  // 8\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                // 9\n  }, function() {                                                                                                     // 10\n    return [ \"\\n\\t\\t\\t\", HTML.FORM({                                                                                  // 11\n      class: \"form-inline logout-form\"                                                                                // 12\n    }, \"\\n\\t\\t\\t\\t\", HTML.STRONG({                                                                                    // 13\n      class: \"mr-2\"                                                                                                   // 14\n    }, \"Hi,\", Blaze.View(\"lookup:currentUser.fullname\", function() {                                                  // 15\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentUser\"), \"fullname\"));                               // 16\n    })), \"\\n\\t\\t\\t\\t\", HTML.BUTTON({                                                                                  // 17\n      class: \"btn btn-warning\"                                                                                        // 18\n    }, \"Logout\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];                                                                            // 19\n  }, function() {                                                                                                     // 20\n    return [ \"\\n\\t\\t\\t\", HTML.FORM({                                                                                  // 21\n      class: \"form-inline login-form\"                                                                                 // 22\n    }, \"\\n\\t\\t\\t\\t\", HTML.INPUT({                                                                                     // 23\n      type: \"text\",                                                                                                   // 24\n      class: \"form-control\",                                                                                          // 25\n      name: \"username\",                                                                                               // 26\n      placeholder: \"Username\",                                                                                        // 27\n      style: \"width:150px\"                                                                                            // 28\n    }), \"\\n\\t\\t\\t\\t\", HTML.INPUT({                                                                                    // 29\n      type: \"password\",                                                                                               // 30\n      class: \"form-control\",                                                                                          // 31\n      name: \"password\",                                                                                               // 32\n      placeholder: \"Password\",                                                                                        // 33\n      style: \"width:150px\"                                                                                            // 34\n    }), \"\\n\\t\\t\\t\\t\", HTML.BUTTON({                                                                                   // 35\n      class: \"btn btn-default\"                                                                                        // 36\n    }, \"Login\"), \"\\n  \\t\\t\\t\"), \"\\n  \\t\\t\" ];                                                                         // 37\n  }), \"\\n  \\t\\t\"), \"\\n\\t\"), \"\\n\\t\", HTML.DIV({                                                                        // 38\n    class: \"tab-content\",                                                                                             // 39\n    style: \"min-width:1200px; overflow-x:hidden\"                                                                      // 40\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                             // 41\n    class: \"tab-pane\",                                                                                                // 42\n    id: \"problem_main_tpl\"                                                                                            // 43\n  }, Spacebars.include(view.lookupTemplate(\"problem_main\"))), \"\\n\\t\\t\", HTML.DIV({                                    // 44\n    class: \"tab-pane\",                                                                                                // 45\n    id: \"student_main_tpl\"                                                                                            // 46\n  }, Spacebars.include(view.lookupTemplate(\"student_main\"))), \"\\n\\t\") ];                                              // 47\n}));                                                                                                                  // 48\nMeteor.startup(Template.body.renderToDocument);                                                                       // 49\n                                                                                                                      // 50\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/main.js                                                                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _this2 = this;                                                                                                    //\n                                                                                                                      //\nmodule.watch(require(\"/imports/ui/problem/main.js\"));                                                                 // 1\nmodule.watch(require(\"/imports/ui/student/main.js\"));                                                                 // 1\nMeteorMathJax.sourceUrl = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML';\nTemplate.body.onCreated(function () {                                                                                 // 6\n\tvar _this = this;                                                                                                    // 6\n                                                                                                                      //\n\tthis.autorun(function () {                                                                                           // 7\n\t\treturn _this.subscribe('Students.findOne', Meteor.userId());                                                        // 7\n\t});                                                                                                                  // 7\n});                                                                                                                   // 8\nTemplate.body.onRendered(function () {                                                                                // 10\n\t_this2.$('.nav-link')[1].click();                                                                                    // 11\n});                                                                                                                   // 12\nTemplate.body.events({                                                                                                // 14\n\t'submit .login-form': function (event) {                                                                             // 15\n\t\tvar target = event.currentTarget;                                                                                   // 16\n\t\tvar username = target.username.value;                                                                               // 17\n\t\tvar password = target.password.value;                                                                               // 18\n\t\tevent.preventDefault();                                                                                             // 20\n\t\tMeteor.loginWithPassword(username, password);                                                                       // 21\n\t},                                                                                                                   // 22\n\t'submit .logout-form': function (event) {                                                                            // 23\n\t\tevent.preventDefault();                                                                                             // 24\n\t\tMeteor.logout();                                                                                                    // 25\n\t}                                                                                                                    // 26\n});                                                                                                                   // 14\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/problem/detail.js","imports/ui/problem/list.js","imports/ui/problem/test.js","imports/ui/problem/upload.js","imports/ui/problem/main.js","imports/ui/student/detail.js","imports/ui/student/list.js","imports/ui/student/main.js","imports/ui/submission/detail.js","imports/ui/submission/list.js","imports/ui/submission/main.js","imports/api/problem.js","imports/api/student.js","imports/api/submission.js","imports/api/utility.js","client/main.js"],"names":["Problems","module","watch","require","v","Template","problem_detail","onCreated","autorun","subscribe","data","currentProblemId","get","onRendered","$","hide","helpers","currentProblem","problem","findOne","_id","undefined","set","events","event","instance","target","currentTarget","toggle","dataset","field","name","value","show","Meteor","call","isAdmin","focus","checked","problem_list","problemList","find","fields","title","isExam","isPublic","isCurrentProblem","id","parentElement","ProblemTests","problem_test","currentProblemTestId","ReactiveVar","problemTestList","problemId","currentProblemTest","problemTest","problem_upload","lang","code","preventDefault","userId","problem_main","click","shareArgs","Students","student_detail","currentStudentId","currentStudent","student","console","log","oldPassword","newPassword","student_list","studentList","username","student_main","Submissions","SubmissionResults","submission_detail","currentSubmissionId","currentSubmission","submission","submissionResultList","submissionId","getStudentUsername","studentId","getValue","getProblemTitle","submission_list","currentFilter","hasFilter","_","without","values","length","submissionList","createdAt","status","submission_main","export","Mongo","Collection","isServer","publish","filter","option","methods","insert","description","inputFormat","outputFormat","hint","forEach","remove","update","$set","problemTestId","input","output","timeLimit","memoryLimit","score","Random","users","fullname","emails","year","Accounts","createUser","password","email","Date","getFullYear","setUsername","setPassword","addEmail","isEmpty","changePassword","isOwner","$in","push","getTime","submissionResultId","timeUsed","memoryUsed","submissionResult","collection","doc","user","MeteorMathJax","sourceUrl","body","loginWithPassword","logout"],"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","file":"/app.js","sourcesContent":["import { Problems } from '/imports/api/problem.js';\r\nimport './detail.html';\r\n\r\nTemplate.problem_detail.onCreated(function() {\r\n\tthis.autorun(() => this.subscribe('Problems.findOne', this.data.currentProblemId.get()));\r\n});\r\n\r\nTemplate.problem_detail.onRendered(function() {\r\n\tthis.$('[class*=edit]').hide();\r\n});\r\n\r\nTemplate.problem_detail.helpers({\r\n\tcurrentProblem() {\r\n\t\tconst problem = Problems.findOne({ _id: this.currentProblemId.get() });\r\n\r\n\t\tif (problem == undefined) {\r\n\t\t\tthis.currentProblemId.set(null);\r\n\t\t}\r\n\t\treturn problem;\r\n\t}\r\n});\r\n\r\nTemplate.problem_detail.events({\r\n\t'blur [class*=edit]'(event, instance) {\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst toggle = target.dataset.toggle;\r\n\t\tconst field = target.name;\r\n\t\tconst value = target.value;\r\n\r\n\t\tinstance.$(target).hide();\r\n\t\tinstance.$(toggle).show();\r\n\t\t\r\n\t\tMeteor.call('Problems.update', this.currentProblemId.get(), { [field]: value });\r\n\t},\r\n\t'click [class*=view]'(event, instance) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\t\t\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst toggle = target.dataset.toggle;\r\n\r\n\t\tinstance.$(target).hide();\r\n\t\tinstance.$(toggle).show().focus();\r\n\t},\r\n\t'click [type=checkbox]'(event) {\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst field = target.name;\r\n\t\tconst value = target.checked;\r\n\r\n\t\tMeteor.call('Problems.update', this.currentProblemId.get(), { [field]: value });\r\n\t}\r\n});","import { Problems } from '/imports/api/problem.js';\r\nimport './list.html';\r\n\r\nTemplate.problem_list.onCreated(function() {\r\n\tthis.subscribe('Problems.findAll');\r\n});\r\n\r\nTemplate.problem_list.helpers({\r\n\tproblemList() {\r\n\t\treturn Problems.find({}, { fields: { _id: 1, title: 1, isExam: 1, isPublic: 1 }});\r\n\t},\r\n\tisCurrentProblem(id) {\r\n\t\treturn id == this.currentProblemId.get();\r\n\t}\r\n});\r\n\r\nTemplate.problem_list.events({\r\n\t'click .insert-btn'() {\r\n\t\tMeteor.call('Problems.insert');\r\n\t},\r\n\t'click .remove-btn'(event) {\r\n\t\tconst id = event.currentTarget.parentElement.dataset.id;\r\n\t\tMeteor.call('Problems.remove', { _id: id });\r\n\t},\r\n\t'click .get-btn'(event) {\r\n\t\tconst id = event.currentTarget.dataset.id;\r\n\t\tthis.currentProblemId.set(id);\r\n\t}\r\n});","import { ProblemTests } from '/imports/api/problem.js';\r\nimport './test.html';\r\n\r\nTemplate.problem_test.onCreated(function() {\r\n\tthis.autorun(() => this.subscribe('ProblemTests.findAllByProblem', this.data.currentProblemId.get()));\r\n\tthis.currentProblemTestId = new ReactiveVar(null);\r\n});\r\n\r\nTemplate.problem_test.onRendered(function() {\r\n\tthis.$('[class*=edit]').hide();\r\n});\r\n\r\nTemplate.problem_test.helpers({\r\n\tproblemTestList() {\r\n\t\treturn ProblemTests.find({ problemId: this.currentProblemId.get() }, { fields: { _id: 1, isPublic: 1 }});\r\n\t},\r\n\tcurrentProblemTest() {\r\n\t\tconst problemTest = ProblemTests.findOne({ _id: Template.instance().currentProblemTestId.get() });\r\n\t\t\r\n\t\tif (problemTest == undefined) {\r\n\t\t\tTemplate.instance().currentProblemTestId.set(null);\r\n\t\t}\r\n\t\treturn problemTest;\r\n\t}\r\n});\r\n\r\nTemplate.problem_test.events({\r\n\t'click .insert-btn'() {\r\n\t\tMeteor.call('ProblemTests.insert', this.currentProblemId.get());\r\n\t},\r\n\t'click .remove-btn'(event) {\r\n\t\tconst id = event.currentTarget.parentElement.dataset.id;\r\n\t\tMeteor.call('ProblemTests.remove', { _id: id });\r\n\t},\r\n\t'click .get-btn'(event, instance) {\r\n\t\tconst id = event.currentTarget.dataset.id;\r\n\t\tinstance.currentProblemTestId.set(id);\r\n\t},\r\n\t'blur [class*=edit]'(event, instance) {\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst toggle = target.dataset.toggle;\r\n\t\tconst field = target.name;\r\n\t\tconst value = target.value;\r\n\r\n\t\tinstance.$(target).hide();\r\n\t\tinstance.$(toggle).show();\r\n\t\t\r\n\t\tMeteor.call('ProblemTests.update', instance.currentProblemTestId.get(), { [field]: value });\r\n\t},\r\n\t'click [class*=view]'(event, instance) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\t\t\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst toggle = target.dataset.toggle;\r\n\r\n\t\tinstance.$(target).hide();\r\n\t\tinstance.$(toggle).show().focus();\r\n\t},\r\n\t'click [type=checkbox]'(event, instance) {\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst field = target.name;\r\n\t\tconst value = target.checked;\r\n\r\n\t\tMeteor.call('ProblemTests.update', instance.currentProblemTestId.get(), { [field]: value });\r\n\t}\r\n});","import './upload.html';\r\n\r\nTemplate.problem_upload.events({\r\n\t'submit .upload-form'(event) {\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst lang = target.lang.value;\r\n\t\tconst code = target.code.value;\r\n\r\n\t\tevent.preventDefault();\r\n\t\tMeteor.call('Submissions.insert', this.currentProblemId.get(), Meteor.userId(), lang, code);\r\n\t}\r\n});\r\n\r\n","import './list.js';\r\nimport './detail.js';\r\nimport './test.js';\r\nimport './upload.js';\r\nimport '../submission/main.js';\r\nimport './main.html';\r\n\r\nTemplate.problem_main.onCreated(function() {\r\n\tthis.currentProblemId = new ReactiveVar(null);\r\n});\r\n\r\nTemplate.problem_main.onRendered(function() {\r\n\tthis.$('.nav-link')[0].click();\r\n});\r\n\r\nTemplate.problem_main.helpers({\r\n\tshareArgs() {\r\n\t\treturn { currentProblemId: Template.instance().currentProblemId };\r\n\t}\r\n});","import { Students } from '/imports/api/student.js';\nimport './detail.html';\n\nTemplate.student_detail.onCreated(function() {\n\tthis.autorun(() => this.subscribe('Students.findOne', this.data.currentStudentId.get()));\n});\n\nTemplate.student_detail.onRendered(function() {\n\tthis.$('[class*=edit]').hide();\n});\n\nTemplate.student_detail.helpers({\n\tcurrentStudent() {\n\t\tconst student = Students.findOne({ _id: this.currentStudentId.get() });\n\n\t\tif (student == undefined) {\n\t\t\tthis.currentStudentId.set(null);\n\t\t}\n\t\treturn student;\n\t}\n});\n\nTemplate.student_detail.events({\n\t'blur [class*=edit]'(event, instance) {\n\t\tconst target = event.currentTarget;\n\t\tconst toggle = target.dataset.toggle;\n\t\tconst field = target.name;\n\t\tconst value = target.value;\nconsole.log(field);\n\t\tinstance.$(target).hide();\n\t\tinstance.$(toggle).show();\n\t\t\n\t\tMeteor.call('Students.update', this.currentStudentId.get(), { [field]: value });\n\t},\n\t'click [class*=view]'(event, instance) {\n\t\tif (!Meteor.isAdmin()) return;\n\t\t\n\t\tconst target = event.currentTarget;\n\t\tconst toggle = target.dataset.toggle;\n\n\t\tinstance.$(target).hide();\n\t\tinstance.$(toggle).show().focus();\n\t},\n\t'click [type=checkbox]'(event) {\n\t\tconst target = event.currentTarget;\n\t\tconst field = target.name;\n\t\tconst value = target.checked;\n\n\t\tMeteor.call('Students.update', this.currentStudentId.get(), { [field]: value });\n\t},\n\t'submit .chgpwd-form'(event) {\n\t\tconst target = event.currentTarget;\n\t\tconst oldPassword = target.oldPassword.value;\n\t\tconst newPassword = target.newPassword.value;\n\n\t\tevent.preventDefault();\n\t\tMeteor.call('Students.changePassword', oldPassword, newPassword);\n\t}\n});","import { Students } from '/imports/api/student.js';\nimport './list.html';\n\nTemplate.student_list.onCreated(function() {\n\tthis.subscribe('Students.findAll');\n});\n\nTemplate.student_list.helpers({\n\tstudentList() {\n\t\treturn Students.find({}, { fields: { _id: 1, username: 1, isAdmin: 1 }});\n\t}\n});\n\nTemplate.student_list.events({\n\t'click .insert-btn'() {\n\t\tMeteor.call('Students.insert');\n\t},\n\t'click .remove-btn'(event) {\n\t\tconst id = event.currentTarget.parentElement.dataset.id;\n\t\tMeteor.call('Students.remove', { _id: id });\n\t},\n\t'click .get-btn'(event) {\n\t\tconst id = event.currentTarget.dataset.id;\n\t\tthis.currentStudentId.set(id);\n\t}\n});","import './list.js';\nimport './detail.js';\nimport '../submission/main.js';\nimport './main.html';\n\nTemplate.student_main.onCreated(function() {\n\tthis.currentStudentId = new ReactiveVar(null);\n});\n\nTemplate.student_main.onRendered(function() {\n\tthis.$('.nav-link')[0].click();\n});\n\nTemplate.student_main.helpers({\n\tshareArgs() {\n\t\treturn { currentStudentId: Template.instance().currentStudentId };\n\t}\n});","import { Problems } from '/imports/api/problem.js';\nimport { Students } from '/imports/api/student.js';\nimport { Submissions, SubmissionResults } from '/imports/api/submission.js';\nimport './detail.html';\n\nTemplate.submission_detail.onCreated(function() {\n\tthis.autorun(() => {\n\t\tthis.subscribe('Submissions.findOne', this.data.currentSubmissionId.get());\n\t\tthis.subscribe('SubmissionResults.findAllBySubmission', this.data.currentSubmissionId.get());\n\t});\n});\n\nTemplate.submission_detail.onRendered(function() {\n\tthis.$('[class*=edit]').hide();\n});\n\nTemplate.submission_detail.helpers({\n\tcurrentSubmission() {\n\t\tconst submission = Submissions.findOne({ _id: this.currentSubmissionId.get() });\n\n\t\tif (submission == undefined) {\n\t\t\tthis.currentSubmissionId.set(null);\n\t\t}\n\t\treturn submission;\n\t},\n\tsubmissionResultList() {\n\t\treturn SubmissionResults.find({ submissionId: this.currentSubmissionId.get() });\n\t},\n\tgetStudentUsername(studentId) {\n\t\treturn Meteor.getValue(Students, studentId, 'username');\n\t},\n\tgetProblemTitle(problemId) {\n\t\treturn Meteor.getValue(Problems, problemId, 'title');\n\t}\n});\n\nTemplate.submission_detail.events({\n\t'blur [class*=edit]'(event, instance) {\n\t\tconst target = event.currentTarget;\n\t\tconst toggle = target.dataset.toggle;\n\t\tconst field = target.name;\n\t\tconst value = target.value;\n\n\t\tinstance.$(target).hide();\n\t\tinstance.$(toggle).show();\n\t\t\n\t\tMeteor.call('Submissions.update', this.currentSubmissionId.get(), { [field]: value });\n\t},\n\t'click [class*=view]'(event, instance) {\n\t\tif (!Meteor.isAdmin()) return;\n\t\t\n\t\tconst target = event.currentTarget;\n\t\tconst toggle = target.dataset.toggle;\n\n\t\tinstance.$(target).hide();\n\t\tinstance.$(toggle).show().focus();\n\t},\n\t'click [type=checkbox]'(event) {\n\t\tconst target = event.currentTarget;\n\t\tconst field = target.name;\n\t\tconst value = target.checked;\n\n\t\tMeteor.call('Submissions.update', this.currentSubmissionId.get(), { [field]: value });\n\t}\n});","import { Submissions } from '/imports/api/submission.js';\r\nimport './list.html';\r\n\r\nTemplate.submission_list.onCreated(function() {\r\n\tthis.autorun(() => this.subscribe('Submissions.findAllByFilter', this.data.currentFilter.get()));\r\n});\r\n\r\nTemplate.submission_list.helpers({\r\n\thasFilter() {\r\n\t\treturn _.without(_.values(this.currentFilter.get()), null).length > 0;\r\n\t},\r\n\tsubmissionList() {\r\n\t\tSubmissions.find(this.currentFilter.get(), { fields: { _id: 1, problemId: 1, studentId: 1, createdAt: 1, status: 1, isExam: 1 }});\r\n\t},\r\n\tgetStudentUsername(studentId) {\r\n\t\treturn Meteor.getValue(Students, studentId, 'username');\r\n\t},\r\n\tgetProblemTitle(problemId) {\r\n\t\treturn Meteor.getValue(Problems, problemId, 'title');\r\n\t}\r\n});\r\n\r\nTemplate.submission_list.events({\r\n\t'click .remove-btn'(event) {\r\n\t\tconst id = event.currentTarget.parentElement.dataset.id;\r\n\t\tMeteor.call('Submissions.remove', { _id: id });\r\n\t},\r\n\t'click .update-btn'(event) {\r\n\t\tMeteor.call('Submissions.update', id, {});\r\n\t},\r\n\t'click .get-btn'(event) {\r\n\t\tconst id = event.currentTarget.dataset.id;\r\n\t\tthis.currentSubmissionId.set(id);\r\n\t}\r\n});","import './list.js';\nimport './detail.js';\nimport './main.html';\n\nTemplate.submission_main.onCreated(function() {\n\tthis.currentFilter = new ReactiveVar({});\n\tthis.currentSubmissionId = new ReactiveVar(null);\n\tthis.autorun(() => {\n\t\tif (this.data.currentProblemId) this.currentFilter.problemId = this.data.currentProblemId.get();\n\t\tif (this.data.currentStudentId) this.currentFilter.studentId = this.data.currentStudentId.get();\n\t});\n});\n\nTemplate.submission_main.helpers({\n\tshareArgs() {\n\t\treturn {\n\t\t\tcurrentFilter: Template.instance().currentFilter,\n\t\t\tcurrentSubmissionId: Template.instance().currentSubmissionId\n\t\t};\n\t}\n});","import './utility.js';\r\n\r\nexport const Problems = new Mongo.Collection('Problems');\r\nexport const ProblemTests = new Mongo.Collection('ProblemTests');\r\n\r\nif (Meteor.isServer) {\r\n\tMeteor.publish('Problems.findAll', function() {\r\n\t\tconst filter = {};\r\n\t\tconst option = { fields: { _id: 1, title: 1, isExam: 1, isPublic: 1 }};\r\n\r\n\t\tif (!Meteor.isAdmin()) {\r\n\t\t\tfilter.isPublic = true;\r\n\t\t}\r\n\t\treturn Problems.find(filter, option);\r\n\t});\r\n\tMeteor.publish('Problems.findOne', function(id) {\r\n\t\tconst filter = { _id: id };\r\n\t\tconst option = {};\r\n\r\n\t\tif (!Meteor.isAdmin()) {\r\n\t\t\tfilter.isPublic = true;\r\n\t\t}\r\n\t\treturn Problems.find(filter, option);\r\n\t});\r\n\tMeteor.publish('ProblemTests.findAllByProblem', function(problemId) {\r\n\t\tconst filter = { problemId: problemId };\r\n\t\tconst option = {};\r\n\r\n\t\tif (!Meteor.isAdmin()) {\r\n\t\t\tif (!Meteor.getValue(Problems, problemId, 'isPublic')) {\r\n\t\t\t\tfilter.problemId = null;\r\n\t\t\t}\r\n\t\t\tfilter.isPublic = true;\r\n\t\t}\r\n\t\treturn ProblemTests.find(filter, option);\r\n\t});\r\n}\r\n\r\nMeteor.methods({\r\n\t'Problems.insert'() {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblems.insert({\r\n\t\t\ttitle: 'Sample Title',\r\n\t\t\tdescription: 'Sample Description',\r\n\t\t\tinputFormat: 'Sample Input Format',\r\n\t\t\toutputFormat: 'Sample Output Format',\r\n\t\t\thint: 'Sample Hint',\r\n\t\t\tisExam: false,\r\n\t\t\tisPublic: false\r\n\t\t});\r\n\t},\r\n\t'Problems.remove'(filter) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblems.find(filter).forEach((problem) => {\r\n\t\t\tMeteor.call('ProblemTests.remove', { problemId: problem._id });\r\n\t\t\tMeteor.call('Submissions.remove', { problemId: problem._id });\t\r\n\t\t});\r\n\t\tProblems.remove(filter);\r\n\t},\r\n\t'Problems.update'(id, option) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblems.update({ _id: id }, { $set: option });\r\n\t},\r\n\t'ProblemTests.insert'(problemId) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tconst problemTestId = ProblemTests.insert({\r\n\t\t\tproblemId: problemId,\r\n\t\t\tinput: 'Sample Input',\r\n\t\t\toutput: 'Sample Output',\r\n\t\t\ttimeLimit: 1000,\r\n\t\t\tmemoryLimit: 64000,\r\n\t\t\tscore: 5,\r\n\t\t\tisPublic: false\r\n\t\t});\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tMeteor.call('ProblemTests.createDir', problemTestId);\r\n\t\t}\r\n\t},\r\n\t'ProblemTests.remove'(filter) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblemTests.find(filter).forEach((problemTest) => {\r\n\t\t\tMeteor.call('SubmissionResults.remove', { problemTestId: problemTest._id });\r\n\r\n\t\t\tif (Meteor.isServer) {\r\n\t\t\t\tMeteor.call('ProblemTests.removeDir', problemTest._id);\r\n\t\t\t}\r\n\t\t});\r\n\t\tProblemTests.remove(filter);\r\n\t},\r\n\t'ProblemTests.update'(id, option) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblemTests.update({ _id: id }, { $set: option });\r\n\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tif (option.input) Meteor.call('ProblemTests.writeFile', id, 'input', option.input);\r\n\t\t\tif (option.output) Meteor.call('ProblemTests.writeFile', id, 'output', option.output);\r\n\t\t}\r\n\t}\r\n});","import { Random } from 'meteor/random';\nimport './utility.js';\n\nexport const Students = Meteor.users;\n\nif (Meteor.isServer) {\n\tMeteor.publish('Students.findAll', function() {\n\t\tconst filter = {};\n\t\tconst option = { fields: { _id: 1, username: 1, isAdmin: 1 }};\n\n\t\treturn Students.find(filter, option);\n\t});\n\tMeteor.publish('Students.findOne', function(id) {\n\t\tconst filter = { _id: id };\n\t\tconst option = { fields: { _id: 1, username: 1, fullname: 1, emails: 1, year: 1, isAdmin: 1 }};\n\n\t\treturn Students.find(filter, option);\n\t});\n}\n\nMeteor.methods({\n\t'Students.insert'() {\n\t\tif (!Meteor.isAdmin()) return;\n\n\t\tAccounts.createUser({\n\t\t\tusername: 'Sample Username',\n\t\t\tfullname: 'Sample Fullname',\n\t\t\tpassword: Random.id(),\n\t\t\temail: 'dsca@inrg.csie.ntu.edu.tw',\t\n\t\t\tyear: new Date().getFullYear(),\n\t\t\tisAdmin: false\n\t\t});\n\t},\n\t'Students.remove'(filter) {\n\t\tif (!Meteor.isAdmin()) return;\n\n\t\tStudents.find(filter).forEach((student) => {\n\t\t\tMeteor.call('Submissions.remove', { studentId: student._id });\n\t\t});\n\t\tStudents.remove(filter);\n\t},\n\t'Students.update'(id, option) {\n\t\tif (!Meteor.isAdmin() || !Meteor.isServer) return;\n\n\t\tif (option.username) {\n\t\t\tAccounts.setUsername(id, option.username);\n\t\t\tdelete option.username;\n\t\t}\n\t\tif (option.password) {\n\t\t\tAccounts.setPassword(id, option.password);\n\t\t\tdelete option.password;\n\t\t}\n\t\tif (option.email) {\n\t\t\tStudents.update({ _id: id }, { $set: { emails: [] }});\n\t\t\tAccounts.addEmail(id, option.email);\n\t\t\tdelete option.email;\n\t\t}\n\t\tif (!_.isEmpty(option)) {\n\t\t\tStudents.update({ _id: id }, { $set: option });\n\t\t}\n\t},\n\t'Students.changePassword'(oldPassword, newPassword) {\n\t\tif (!Meteor.isServer) return;\n\n\t\tAccounts.changePassword(oldPassword, newPassword);\n\t}\n});","import { Problems, ProblemTests } from './problem.js';\r\nimport './utility.js';\r\n\r\nexport const Submissions = new Mongo.Collection('Submissions');\r\nexport const SubmissionResults = new Mongo.Collection('SubmissionResults');\r\n\r\nif (Meteor.isServer) {\r\n\tMeteor.publish('Submissions.findAllByFilter', function(filter) {\r\n\t\tconst option = { fields: { _id: 1, problemId: 1, studentId: 1, createdAt: 1, status: 1, isExam: 1 }};\r\n\r\n\t\treturn Submissions.find(filter, option);\r\n\t});\r\n\tMeteor.publish('Submissions.findOne', function(id) {\r\n\t\tconst filter = { _id: id };\r\n\t\tconst option = {};\r\n\r\n\t\tif (!Meteor.isAdmin() && !Meteor.isOwner(Meteor.getValue(Submissions, id, 'studentId'))) {\r\n\t\t\toption.fields = { code: 0 };\r\n\t\t}\r\n\t\treturn Submissions.find(filter, option);\r\n\t});\r\n\tMeteor.publish('SubmissionResults.findAllBySubmission', function(submissionId) {\r\n\t\tconst filter = { submissionId: submissionId };\r\n\t\tconst option = {};\r\n\r\n\t\tif (!Meteor.getValue(Submissions, submissionId, 'isExam')) {\r\n\t\t\tconst problemId = Meteor.getValue(Submissions, submissionId, 'problemId');\r\n\t\t\tfilter.problemTestId = { $in: [] };\r\n\t\t\t\r\n\t\t\tProblemTests.find({ problemId: problemId, isPublic: 1 }).forEach((problemTest) => {\r\n\t\t\t\tfilter.problemTestId.$in.push(problemTest._id);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn SubmissionResults.find(filter, option);\r\n\t});\r\n}\r\n\r\nMeteor.methods({\r\n\t'Submissions.insert'(problemId, studentId, lang, code) {\r\n\t\tif (!Meteor.isOwner(studentId) || !Meteor.getValue(Problems, problemId, '_id')) return;\r\n\t\t\r\n\t\tconst submissionId = Submissions.insert({\r\n\t\t\tproblemId: problemId,\r\n\t\t\tstudentId: studentId,\r\n\t\t\tcreatedAt: new Date().getTime(),\r\n\t\t\tstatus: 'Pending',\r\n\t\t\tlang: lang,\r\n\t\t\tcode: code,\r\n\t\t\tisExam: Meteor.getValue(Problems, problemId, 'isExam')\r\n\t\t});\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tMeteor.call('Submissions.createDir', submissionId);\r\n\t\t}\r\n\t},\r\n\t'Submissions.remove'(filter) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tSubmissions.find(filter).forEach((submission) => {\r\n\t\t\tMeteor.call('SubmissionResults.remove', { submissionId: submission._id });\r\n\r\n\t\t\tif (Meteor.isServer) {\r\n\t\t\t\tMeteor.call('Submissions.removeDir', submission._id);\r\n\t\t\t}\r\n\t\t});\r\n\t\tSubmissions.remove(filter);\r\n\t},\r\n\t'Submissions.update'(id, option) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\t\t\r\n\t\tSubmissions.update({ _id: id }, { $set: option });\r\n\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tif (option.lang || option.code)\r\n\t\t\t\tMeteor.call('Submissions.createDir', id);\r\n\t\t}\r\n\t},\r\n\t'SubmissionResults.insert'(problemTestId, submissionId) {\r\n\t\t//if (!Meteor.isAdmin()) return;\r\n\r\n\t\tconst submissionResultId = SubmissionResults.insert({\r\n\t\t\tproblemTestId: problemTestId,\r\n\t\t\tsubmissionId: submissionId,\r\n\t\t\ttimeUsed: null,\r\n\t\t\tmemoryUsed: null,\r\n\t\t\tstatus: 'Pending'\r\n\t\t});\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tMeteor.call('SubmissionResults.createDir', submissionResultId);\r\n\t\t}\r\n\t},\r\n\t'SubmissionResults.remove'(filter) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tSubmissionResults.find(filter).forEach((submissionResult) => {\r\n\t\t\tif (Meteor.isServer) {\r\n\t\t\t\tMeteor.call('SubmissionResults.removeDir', submissionResult._id);\r\n\t\t\t}\r\n\t\t});\r\n\t\tSubmissionResults.remove(filter);\r\n\t},\r\n\t'SubmissionResults.update'(id) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tMeteor.call('SubmissionResults.createDir', id);\r\n\t\t}\r\n\t}\r\n});","Meteor.getValue = function(collection, id, field) {\n\tconst doc = collection.findOne({ _id: id }, { fields: { [field]: 1 }});\n\treturn doc ? doc[field] : null;\n}\n\nMeteor.isAdmin = function() {\n\tconst user = Meteor.user();\n\treturn user && user.isAdmin;\n}\n\nMeteor.isOwner = function(id) {\n\tconst user = Meteor.user();\n\treturn user && user._id == id;\n}","import '/imports/ui/problem/main.js';\nimport '/imports/ui/student/main.js';\n\nMeteorMathJax.sourceUrl = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML';\n\nTemplate.body.onCreated(function() {\n\tthis.autorun(() => this.subscribe('Students.findOne', Meteor.userId()));\n});\n\nTemplate.body.onRendered(() => {\n\tthis.$('.nav-link')[1].click();\n});\n\nTemplate.body.events({\n\t'submit .login-form'(event) {\n\t\tconst target = event.currentTarget;\n\t\tconst username = target.username.value;\n\t\tconst password = target.password.value;\n\n\t\tevent.preventDefault();\n\t\tMeteor.loginWithPassword(username, password);\n\t},\n\t'submit .logout-form'(event) {\n\t\tevent.preventDefault();\n\t\tMeteor.logout();\n\t}\n});"]}}]