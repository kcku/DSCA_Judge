[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package['templating-runtime'].Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar HTML = Package.htmljs.HTML;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar Spacebars = Package.spacebars.Spacebars;\n\n/* Package-scope variables */\nvar MeteorMathJax, Helper;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/mrt_mathjax/lib/_.js                                                                                 //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nMeteorMathJax = null;                                                                                            // 1\nHelper = null;                                                                                                   // 2\n                                                                                                                 // 3\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/mrt_mathjax/lib/Helper.js                                                                            //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n'use strict';                                                                                                    // 1\n                                                                                                                 // 2\n/**                                                                                                              // 3\n * Creates an instance of Helper, which is essentially a template generator.                                     // 4\n * @param {Object} options                                                                                       // 5\n * @param {Boolean} options.useCache                                                                             // 6\n */                                                                                                              // 7\nHelper = function (options) {                                                                                    // 8\n  this.cache = {};                                                                                               // 9\n  this.options = {                                                                                               // 10\n    useCache  : options && options.useCache !== undefined ? options.useCache : false,                            // 11\n    transform : options && options.transform,                                                                    // 12\n  };                                                                                                             // 13\n};                                                                                                               // 14\n                                                                                                                 // 15\n/**                                                                                                              // 16\n * Create a template that can be used as helper to Render                                                        // 17\n * MathJax content. A typical use would be:                                                                      // 18\n *                                                                                                               // 19\n * Template.registerHelper('mathjax', Helper.getTemplate());                                                     // 20\n */                                                                                                              // 21\nHelper.prototype.getTemplate = function getTemplate () {                                                         // 22\n                                                                                                                 // 23\n  var context = this;                                                                                            // 24\n  var update = function (MathJax, firstNode, lastNode) {                                                         // 25\n    var firstNodeReached = false;                                                                                // 26\n    $(firstNode).parent().contents().each(function (index, node) {                                               // 27\n      // TODO add support for text nodes                                                                         // 28\n      var cacheKey;                                                                                              // 29\n      if (node === firstNode) {                                                                                  // 30\n        firstNodeReached = true;                                                                                 // 31\n      }                                                                                                          // 32\n      if (firstNodeReached && this.nodeType === 1) {                                                             // 33\n        cacheKey = context.options.useCache && node.innerHTML;                                                   // 34\n        if (context.options.useCache && context.cache[cacheKey]) {                                               // 35\n          node.innerHTML = context.cache[cacheKey];                                                              // 36\n        } else {                                                                                                 // 37\n          MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, this], function () {                                        // 38\n            if (context.options.useCache)                                                                        // 39\n              context.cache[cacheKey] = node.innerHTML;                                                          // 40\n          });                                                                                                    // 41\n        }                                                                                                        // 42\n      }                                                                                                          // 43\n      return this !== lastNode;                                                                                  // 44\n    });                                                                                                          // 45\n  };                                                                                                             // 46\n                                                                                                                 // 47\n  var template = new Template('mathjax', function () {                                                           // 48\n    var view = this, content = '';                                                                               // 49\n    if (view.templateContentBlock) {                                                                             // 50\n      content = Blaze._toText(view.templateContentBlock, HTML.TEXTMODE.STRING);                                  // 51\n    }                                                                                                            // 52\n    if (typeof context.options.transform === 'function') {                                                       // 53\n      content = context.options.transform(content);                                                              // 54\n    }                                                                                                            // 55\n    return HTML.Raw(content);                                                                                    // 56\n                                                                                                                 // 57\n    // NOTE: This should work too, but I am afraid of some side effects                                          // 58\n    //       related to the fact that Blaze would be managing these nodes                                        // 59\n    //       in it's own manners.                                                                                // 60\n    //                                                                                                           // 61\n    // return view.templateContentBlock;                                                                         // 62\n  });                                                                                                            // 63\n                                                                                                                 // 64\n  template.onRendered(function () {                                                                              // 65\n    var self = this;                                                                                             // 66\n    //----------------------------------------                                                                   // 67\n    MeteorMathJax.require(function (MathJax) {                                                                   // 68\n      update(MathJax, self.firstNode, self.lastNode);                                                            // 69\n    });                                                                                                          // 70\n  });                                                                                                            // 71\n                                                                                                                 // 72\n  return template;                                                                                               // 73\n};                                                                                                               // 74\n                                                                                                                 // 75\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/mrt_mathjax/lib/MeteorMathJax.js                                                                     //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n'use strict';                                                                                                    // 1\n                                                                                                                 // 2\nvar listeners = [];                                                                                              // 3\n                                                                                                                 // 4\nMeteorMathJax = {                                                                                                // 5\n  Helper    : Helper,                                                                                            // 6\n  sourceUrl : 'https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML',                  // 7\n  /**                                                                                                            // 8\n   * Notify all listeners that the MathJax script has been loaded.                                               // 9\n   */                                                                                                            // 10\n  ready : function () {                                                                                          // 11\n    var MathJax = window.MathJax;                                                                                // 12\n    function triggerListeners () {                                                                               // 13\n      while (listeners.length > 0) {                                                                             // 14\n        listeners.pop().call(null, MathJax);                                                                     // 15\n      }                                                                                                          // 16\n    }                                                                                                            // 17\n    if (MathJax && MathJax.Hub && MathJax.Hub.queue) {                                                           // 18\n      triggerListeners();                                                                                        // 19\n    } else if (MathJax && MathJax.Hub && MathJax.Hub.Register && typeof MathJax.Hub.Register.StartupHook === 'function') {\n      // NOTE: Make sure further tasks are scheduled after MathJax is fully configured and operational.          // 21\n      MathJax.Hub.Register.StartupHook(\"Begin\", function () {                                                    // 22\n        triggerListeners();                                                                                      // 23\n      });                                                                                                        // 24\n    } else {                                                                                                     // 25\n      throw new Error('Cannot call MeteorMathJax.ready() before MathJax is really loaded.');                     // 26\n    }                                                                                                            // 27\n  },                                                                                                             // 28\n  /**                                                                                                            // 29\n   * Call the given callback as soon as MathJax is loaded.                                                       // 30\n   * @param {Function} callback                                                                                  // 31\n   */                                                                                                            // 32\n  require : function (callback) {                                                                                // 33\n    var self = this;                                                                                             // 34\n    if (!window.MathJax && this.sourceUrl) {                                                                     // 35\n      listeners.push(callback);                                                                                  // 36\n      window.MathJax = {                                                                                         // 37\n        AuthorInit: function () {                                                                                // 38\n          window.MathJax.Hub.Config(self.defaultConfig);                                                         // 39\n          MeteorMathJax.ready();                                                                                 // 40\n        }                                                                                                        // 41\n      };                                                                                                         // 42\n      // load the MathJax script                                                                                 // 43\n      $.getScript(this.sourceUrl);                                                                               // 44\n    } else if (window.MathJax && window.MathJax.Hub && typeof window.MathJax.Hub.queue) { // it's already loaded\n      callback(window.MathJax);                                                                                  // 46\n    } else {                                                                                                     // 47\n      listeners.push(callback);                                                                                  // 48\n    }                                                                                                            // 49\n  },                                                                                                             // 50\n  /**                                                                                                            // 51\n   * Default configuration which will be used as soon as MathJax is loaded.                                      // 52\n   * It can be overwritten by the user.                                                                          // 53\n   */                                                                                                            // 54\n  defaultConfig: {                                                                                               // 55\n    skipStartupTypeset: true,                                                                                    // 56\n    showProcessingMessages: false,                                                                               // 57\n    tex2jax: {                                                                                                   // 58\n      inlineMath: [['$','$'],['\\\\(','\\\\)']]                                                                      // 59\n    }                                                                                                            // 60\n  }                                                                                                              // 61\n};                                                                                                               // 62\n                                                                                                                 // 63\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/mrt_mathjax/lib/templateIntegration.js                                                               //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nvar Blaze;                                                                                                       // 1\n                                                                                                                 // 2\nif (Package.templating) {                                                                                        // 3\n  Blaze = Package.blaze.Blaze; // implied by `templating`                                                        // 4\n                                                                                                                 // 5\n  /**                                                                                                            // 6\n   * Register the mathjax helper in the default form.                                                            // 7\n   */                                                                                                            // 8\n  Blaze.Template.registerHelper('mathjax', new Helper().getTemplate());                                          // 9\n}                                                                                                                // 10\n                                                                                                                 // 11\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['mrt:mathjax'] = {}, {\n  MeteorMathJax: MeteorMathJax\n});\n\n})();\n","servePath":"/packages/mrt_mathjax.js"}]