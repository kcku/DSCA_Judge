[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteorMathJax = Package['mrt:mathjax'].MeteorMathJax;\nHelpers = Package['raix:handlebar-helpers'].Helpers;\nmoment = Package['momentjs:moment'].moment;\nmo = Package['lbee:moment-helpers'].mo;\nmomentReactive = Package['panter:moment-reactive'].momentReactive;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"problem\":{\"detail.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/detail.html                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./template.detail.js\"), {                                                                        // 1\n  \"*\": module.makeNsSetter()                                                                                           // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.detail.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/template.detail.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"problem_detail\");                                                                                // 2\nTemplate[\"problem_detail\"] = new Template(\"Template.problem_detail\", (function() {                                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    class: \"card\",                                                                                                     // 6\n    style: function() {                                                                                                // 7\n      return [ \"height:700px; \", Blaze.Unless(function() {                                                             // 8\n        return Spacebars.call(Spacebars.dot(view.lookup(\"currentProblemId\"), \"get\"));                                  // 9\n      }, function() {                                                                                                  // 10\n        return \"display:none\";                                                                                         // 11\n      }) ];                                                                                                            // 12\n    }                                                                                                                  // 13\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                              // 14\n    class: \"card-body\"                                                                                                 // 15\n  }, \"\\n\\t\\t\\t\", HTML.DIV({                                                                                            // 16\n    class: \"form-group\"                                                                                                // 17\n  }, \"\\n\\t\\t\\t\\t\", HTML.H4({                                                                                           // 18\n    \"data-toggle\": \".title-edit\",                                                                                      // 19\n    class: \"title-view card-title\"                                                                                     // 20\n  }, Blaze.View(\"lookup:currentProblem.title\", function() {                                                            // 21\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"title\"));                                  // 22\n  })), \"\\n\\t\\t\\t\\t\", HTML.INPUT({                                                                                      // 23\n    \"data-toggle\": \".title-view\",                                                                                      // 24\n    class: \"title-edit form-control\",                                                                                  // 25\n    type: \"text\",                                                                                                      // 26\n    name: \"title\",                                                                                                     // 27\n    value: function() {                                                                                                // 28\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"title\"));                                // 29\n    }                                                                                                                  // 30\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\", Blaze.If(function() {                                                                     // 31\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                       // 32\n  }, function() {                                                                                                      // 33\n    return [ \"\\n\\t\\t\\t\", HTML.DIV({                                                                                    // 34\n      class: \"form-group row\"                                                                                          // 35\n    }, \"\\n\\t\\t\\t\\t\", HTML.LABEL({                                                                                      // 36\n      class: \"col-2\"                                                                                                   // 37\n    }, \"\\n\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                                    // 38\n      type: \"checkbox\",                                                                                                // 39\n      name: \"isExam\",                                                                                                  // 40\n      checked: function() {                                                                                            // 41\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"isExam\"));                             // 42\n      }                                                                                                                // 43\n    }), \" Exam\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\", HTML.LABEL({                                                                 // 44\n      class: \"col-2\"                                                                                                   // 45\n    }, \"\\n\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                                    // 46\n      type: \"checkbox\",                                                                                                // 47\n      name: \"isPublic\",                                                                                                // 48\n      checked: function() {                                                                                            // 49\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"isPublic\"));                           // 50\n      }                                                                                                                // 51\n    }), \" Public\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];                                                                 // 52\n  }), \"\\n\\t\\t\\t\", HTML.DIV({                                                                                           // 53\n    class: \"form-group\"                                                                                                // 54\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<h4 class=\"card-title\">Description</h4>'), \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"mathjax\"), function() {\n    return HTML.P({                                                                                                    // 56\n      \"data-toggle\": \".description-edit\",                                                                              // 57\n      class: \"description-view card-text\"                                                                              // 58\n    }, Blaze.View(\"lookup:currentProblem.description\", function() {                                                    // 59\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"description\"));                          // 60\n    }));                                                                                                               // 61\n  }), \"\\n\\t\\t\\t\\t\", HTML.TEXTAREA({                                                                                    // 62\n    \"data-toggle\": \".description-view\",                                                                                // 63\n    class: \"description-edit form-control\",                                                                            // 64\n    name: \"description\",                                                                                               // 65\n    value: function() {                                                                                                // 66\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"description\"));                          // 67\n    }                                                                                                                  // 68\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                                              // 69\n    class: \"form-group\"                                                                                                // 70\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<h4 class=\"card-title\">Input Format</h4>'), \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"mathjax\"), function() {\n    return HTML.P({                                                                                                    // 72\n      \"data-toggle\": \".inputFormat-edit\",                                                                              // 73\n      class: \"inputFormat-view card-text\"                                                                              // 74\n    }, Blaze.View(\"lookup:currentProblem.inputFormat\", function() {                                                    // 75\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"inputFormat\"));                          // 76\n    }));                                                                                                               // 77\n  }), \"\\n\\t\\t\\t\\t\", HTML.TEXTAREA({                                                                                    // 78\n    \"data-toggle\": \".inputFormat-view\",                                                                                // 79\n    class: \"inputFormat-edit form-control\",                                                                            // 80\n    name: \"inputFormat\",                                                                                               // 81\n    value: function() {                                                                                                // 82\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"inputFormat\"));                          // 83\n    }                                                                                                                  // 84\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                                              // 85\n    class: \"form-group\"                                                                                                // 86\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<h4 class=\"card-title\">Output Format</h4>'), \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"mathjax\"), function() {\n    return HTML.P({                                                                                                    // 88\n      \"data-toggle\": \".outputFormat-edit\",                                                                             // 89\n      class: \"outputFormat-view card-text\"                                                                             // 90\n    }, Blaze.View(\"lookup:currentProblem.outputFormat\", function() {                                                   // 91\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"outputFormat\"));                         // 92\n    }));                                                                                                               // 93\n  }), \"\\n\\t\\t\\t\\t\", HTML.TEXTAREA({                                                                                    // 94\n    \"data-toggle\": \".outputFormat-view\",                                                                               // 95\n    class: \"outputFormat-edit form-control\",                                                                           // 96\n    name: \"outputFormat\",                                                                                              // 97\n    value: function() {                                                                                                // 98\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"outputFormat\"));                         // 99\n    }                                                                                                                  // 100\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                                              // 101\n    class: \"form-group\"                                                                                                // 102\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<h4 class=\"card-title\">Hint</h4>'), \"\\n\\t\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"mathjax\"), function() {\n    return HTML.P({                                                                                                    // 104\n      \"data-toggle\": \".hint-edit\",                                                                                     // 105\n      class: \"hint-view card-text\"                                                                                     // 106\n    }, Blaze.View(\"lookup:currentProblem.hint\", function() {                                                           // 107\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"hint\"));                                 // 108\n    }));                                                                                                               // 109\n  }), \"\\n\\t\\t\\t\\t\", HTML.TEXTAREA({                                                                                    // 110\n    \"data-toggle\": \".hint-view\",                                                                                       // 111\n    class: \"hint-edit form-control\",                                                                                   // 112\n    name: \"hint\",                                                                                                      // 113\n    value: function() {                                                                                                // 114\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblem\"), \"hint\"));                                 // 115\n    }                                                                                                                  // 116\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\");                                                                                 // 117\n}));                                                                                                                   // 118\n                                                                                                                       // 119\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"list.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/list.html                                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./template.list.js\"), {                                                                          // 1\n  \"*\": module.makeNsSetter()                                                                                           // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.list.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/template.list.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"problem_list\");                                                                                  // 2\nTemplate[\"problem_list\"] = new Template(\"Template.problem_list\", (function() {                                         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    class: \"card\"                                                                                                      // 6\n  }, \"\\n  \\t\\t\", HTML.DIV({                                                                                            // 7\n    class: \"card-header\"                                                                                               // 8\n  }, \"\\n\\t\\t\", Blaze.If(function() {                                                                                   // 9\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                       // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n\\t\\t\\t\", HTML.BUTTON({                                                                                 // 12\n      class: \"btn btn-sm btn-primary insert-btn fa fa-plus\"                                                            // 13\n    }), \"\\n\\t\\t\" ];                                                                                                    // 14\n  }), \"\\n\\t\\t\\t\", HTML.Raw('<strong class=\"ml-1\">Problem List</strong>'), \"\\n  \\t\\t\"), \"\\n\\t  \\t\", HTML.UL({           // 15\n    class: \"list-group\",                                                                                               // 16\n    style: \"height:700px\"                                                                                              // 17\n  }, \"\\n\\t  \\t\", Blaze.Each(function() {                                                                               // 18\n    return {                                                                                                           // 19\n      _sequence: Spacebars.call(view.lookup(\"problemList\")),                                                           // 20\n      _variable: \"problem\"                                                                                             // 21\n    };                                                                                                                 // 22\n  }, function() {                                                                                                      // 23\n    return [ \"\\n\\t    \\t\", HTML.LI({                                                                                   // 24\n      \"data-id\": function() {                                                                                          // 25\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"problem\"), \"_id\"));                                       // 26\n      },                                                                                                               // 27\n      class: function() {                                                                                              // 28\n        return [ \"list-group-item get-btn \", Blaze.If(function() {                                                     // 29\n          return Spacebars.dataMustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"currentProblemId\"), \"get\"), Spacebars.dot(view.lookup(\"problem\"), \"_id\"));\n        }, function() {                                                                                                // 31\n          return \"active\";                                                                                             // 32\n        }) ];                                                                                                          // 33\n      }                                                                                                                // 34\n    }, \"\\n\\t    \\t\", Blaze.If(function() {                                                                             // 35\n      return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                     // 36\n    }, function() {                                                                                                    // 37\n      return [ \"\\n\\t    \\t\\t\", HTML.BUTTON({                                                                           // 38\n        \"data-id\": function() {                                                                                        // 39\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"problem\"), \"_id\"));                                     // 40\n        },                                                                                                             // 41\n        class: \"btn btn-sm btn-danger remove-btn fa fa-remove\"                                                         // 42\n      }), \"\\n\\t    \\t\" ];                                                                                              // 43\n    }), \"\\n\\t    \\t\\t\", HTML.SPAN({                                                                                    // 44\n      class: \"ml-1\"                                                                                                    // 45\n    }, Blaze.View(\"lookup:problem.title\", function() {                                                                 // 46\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"problem\"), \"title\"));                                       // 47\n    })), \"\\n\\t    \\t\", Blaze.If(function() {                                                                           // 48\n      return Spacebars.call(Spacebars.dot(view.lookup(\"problem\"), \"isExam\"));                                          // 49\n    }, function() {                                                                                                    // 50\n      return [ \"\\n\\t    \\t\\t\", HTML.SPAN({                                                                             // 51\n        class: \"ml-1 fa fa-book\"                                                                                       // 52\n      }), \"\\n\\t    \\t\" ];                                                                                              // 53\n    }), \"\\n\\t    \\t\", Blaze.Unless(function() {                                                                        // 54\n      return Spacebars.call(Spacebars.dot(view.lookup(\"problem\"), \"isPublic\"));                                        // 55\n    }, function() {                                                                                                    // 56\n      return [ \"\\n\\t    \\t\\t\", HTML.SPAN({                                                                             // 57\n        class: \"ml-1 fa fa-ban\"                                                                                        // 58\n      }), \"\\n\\t    \\t\" ];                                                                                              // 59\n    }), \"\\n\\t    \\t\"), \"\\n\\t\\t\" ];                                                                                     // 60\n  }), \"\\n  \\t\\t\"), \"\\n  \\t\");                                                                                          // 61\n}));                                                                                                                   // 62\n                                                                                                                       // 63\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"test.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/test.html                                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./template.test.js\"), {                                                                          // 1\n  \"*\": module.makeNsSetter()                                                                                           // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.test.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/template.test.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"problem_test\");                                                                                  // 2\nTemplate[\"problem_test\"] = new Template(\"Template.problem_test\", (function() {                                         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    class: \"row\",                                                                                                      // 6\n    style: function() {                                                                                                // 7\n      return Blaze.Unless(function() {                                                                                 // 8\n        return Spacebars.call(Spacebars.dot(view.lookup(\"currentProblemId\"), \"get\"));                                  // 9\n      }, function() {                                                                                                  // 10\n        return \"display:none\";                                                                                         // 11\n      });                                                                                                              // 12\n    }                                                                                                                  // 13\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                              // 14\n    class: \"col-9\"                                                                                                     // 15\n  }, \"\\n\\t\\t\\t\", HTML.DIV({                                                                                            // 16\n    class: \"card\",                                                                                                     // 17\n    style: function() {                                                                                                // 18\n      return Blaze.Unless(function() {                                                                                 // 19\n        return Spacebars.call(view.lookup(\"currentProblemTest\"));                                                      // 20\n      }, function() {                                                                                                  // 21\n        return \"display:none\";                                                                                         // 22\n      });                                                                                                              // 23\n    }                                                                                                                  // 24\n  }, \"\\n  \\t\\t\\t\\t\", HTML.DIV({                                                                                        // 25\n    class: \"card-body\"                                                                                                 // 26\n  }, \"\\n  \\t\\t\\t\\t\\t\", HTML.DIV({                                                                                      // 27\n    class: \"form-group row\"                                                                                            // 28\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                    // 29\n    class: \"col-6\"                                                                                                     // 30\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                  // 31\n    \"data-toggle\": \".timeLimit-edit\",                                                                                  // 32\n    class: \"timeLimit-view card-text\"                                                                                  // 33\n  }, \"Time Limit: \", Blaze.View(\"lookup:currentProblemTest.timeLimit\", function() {                                    // 34\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"timeLimit\"));                          // 35\n  }), \" ms\"), \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                       // 36\n    \"data-toggle\": \".timeLimit-view\",                                                                                  // 37\n    class: \"timeLimit-edit form-control\",                                                                              // 38\n    type: \"number\",                                                                                                    // 39\n    name: \"timeLimit\",                                                                                                 // 40\n    value: function() {                                                                                                // 41\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"timeLimit\"));                        // 42\n    }                                                                                                                  // 43\n  }), \"\\n  \\t\\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                              // 44\n    class: \"col-6\"                                                                                                     // 45\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                  // 46\n    \"data-toggle\": \".memoryLimit-edit\",                                                                                // 47\n    class: \"memoryLimit-view card-text\"                                                                                // 48\n  }, \"Memory Limit: \", Blaze.View(\"lookup:currentProblemTest.memoryLimit\", function() {                                // 49\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"memoryLimit\"));                        // 50\n  }), \" kb\"), \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                       // 51\n    \"data-toggle\": \".memoryLimit-view\",                                                                                // 52\n    class: \"memoryLimit-edit form-control\",                                                                            // 53\n    type: \"number\",                                                                                                    // 54\n    name: \"memoryLimit\",                                                                                               // 55\n    value: function() {                                                                                                // 56\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"memoryLimit\"));                      // 57\n    }                                                                                                                  // 58\n  }), \"\\n  \\t\\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\", HTML.DIV({                                             // 59\n    class: \"form-group row\"                                                                                            // 60\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                    // 61\n    class: \"col-6\"                                                                                                     // 62\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                  // 63\n    \"data-toggle\": \".score-edit\",                                                                                      // 64\n    class: \"score-view card-text\"                                                                                      // 65\n  }, \"Score: \", Blaze.View(\"lookup:currentProblemTest.score\", function() {                                             // 66\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"score\"));                              // 67\n  })), \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                              // 68\n    \"data-toggle\": \".score-view\",                                                                                      // 69\n    class: \"score-edit form-control\",                                                                                  // 70\n    type: \"number\",                                                                                                    // 71\n    name: \"score\",                                                                                                     // 72\n    value: function() {                                                                                                // 73\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"score\"));                            // 74\n    }                                                                                                                  // 75\n  }), \"\\n  \\t\\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\", Blaze.If(function() {                                                     // 76\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                       // 77\n  }, function() {                                                                                                      // 78\n    return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.LABEL({                                                                            // 79\n      class: \"col-6\"                                                                                                   // 80\n    }, \"\\n          \\t\\t\\t\\t\\t\", HTML.INPUT({                                                                          // 81\n      type: \"checkbox\",                                                                                                // 82\n      name: \"isPublic\",                                                                                                // 83\n      checked: function() {                                                                                            // 84\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"isPublic\"));                       // 85\n      }                                                                                                                // 86\n    }), \" Public\\n        \\t\\t\\t\\t\"), \"\\n        \\t\\t\\t\" ];                                                            // 87\n  }), \"\\n  \\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\", HTML.DIV({                                                                  // 88\n    class: \"form-group row\"                                                                                            // 89\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                    // 90\n    class: \"col-6\"                                                                                                     // 91\n  }, \"\\n    \\t\\t\\t\\t\\t\\t\", HTML.Raw('<h4>Input <button data-clipboard-target=\".input-view\" class=\"ml-3 btn btn-sm btn-info fa fa-copy\"></button></h4>'), \"\\n    \\t\\t\\t\\t\\t\\t\", HTML.P({\n    style: \"height:510px\",                                                                                             // 93\n    \"data-toggle\": \".input-edit\",                                                                                      // 94\n    class: \"input-view card-text\"                                                                                      // 95\n  }, Blaze.View(\"lookup:currentProblemTest.input\", function() {                                                        // 96\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"input\"));                              // 97\n  })), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.TEXTAREA({                                                                             // 98\n    style: \"height:510px\",                                                                                             // 99\n    \"data-toggle\": \".input-view\",                                                                                      // 100\n    class: \"input-edit form-control\",                                                                                  // 101\n    name: \"input\",                                                                                                     // 102\n    value: function() {                                                                                                // 103\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"input\"));                            // 104\n    }                                                                                                                  // 105\n  }), \"\\n    \\t\\t\\t\\t\\t\"), \"\\n    \\t\\t\\t\\t\\t\", HTML.DIV({                                                              // 106\n    class: \"col-6\"                                                                                                     // 107\n  }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.Raw('<h4>Output <button data-clipboard-target=\".output-view\" class=\"ml-3 btn btn-sm btn-info fa fa-copy\"></button></h4>'), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.P({\n    style: \"height:510px\",                                                                                             // 109\n    \"data-toggle\": \".output-edit\",                                                                                     // 110\n    class: \"output-view card-text\"                                                                                     // 111\n  }, Blaze.View(\"lookup:currentProblemTest.output\", function() {                                                       // 112\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"output\"));                             // 113\n  })), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.TEXTAREA({                                                                             // 114\n    style: \"height:510px\",                                                                                             // 115\n    \"data-toggle\": \".output-view\",                                                                                     // 116\n    class: \"output-edit form-control\",                                                                                 // 117\n    name: \"output\",                                                                                                    // 118\n    value: function() {                                                                                                // 119\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"output\"));                           // 120\n    }                                                                                                                  // 121\n  }), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\\t\", HTML.DIV({                  // 122\n    class: \"col-3\"                                                                                                     // 123\n  }, \"\\n\\t\\t\\t\", HTML.DIV({                                                                                            // 124\n    class: \"card\"                                                                                                      // 125\n  }, \"\\n\\t\\t  \\t\\t\", HTML.DIV({                                                                                        // 126\n    class: \"card-header\"                                                                                               // 127\n  }, \"\\n\\t\\t\\t\\t\", Blaze.If(function() {                                                                               // 128\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                       // 129\n  }, function() {                                                                                                      // 130\n    return [ \"\\n\\t\\t\\t\\t\\t\", HTML.BUTTON({                                                                             // 131\n      class: \"btn btn-sm btn-primary insert-btn fa fa-plus\"                                                            // 132\n    }), \"\\n\\t\\t\\t\\t\" ];                                                                                                // 133\n  }), \"\\n\\t\\t\\t\\t\\t\", HTML.Raw('<strong class=\"ml-1\">Test List</strong>'), \"\\n\\t\\t  \\t\\t\"), \"\\n\\t\\t\\t  \\t\", HTML.UL({  // 134\n    class: \"list-group\",                                                                                               // 135\n    style: \"height:660px\"                                                                                              // 136\n  }, \"\\n\\t\\t\\t\\t\", Blaze.Each(function() {                                                                             // 137\n    return {                                                                                                           // 138\n      _sequence: Spacebars.call(view.lookup(\"problemTestList\")),                                                       // 139\n      _variable: \"problemTest\"                                                                                         // 140\n    };                                                                                                                 // 141\n  }, function() {                                                                                                      // 142\n    return [ \"\\n\\t\\t\\t  \\t\\t\", HTML.LI({                                                                               // 143\n      \"data-id\": function() {                                                                                          // 144\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"problemTest\"), \"_id\"));                                   // 145\n      },                                                                                                               // 146\n      class: function() {                                                                                              // 147\n        return [ \"list-group-item get-btn \", Blaze.If(function() {                                                     // 148\n          return Spacebars.dataMustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"currentProblemTest\"), \"_id\"), Spacebars.dot(view.lookup(\"problemTest\"), \"_id\"));\n        }, function() {                                                                                                // 150\n          return \"active\";                                                                                             // 151\n        }) ];                                                                                                          // 152\n      }                                                                                                                // 153\n    }, \"\\n\\t    \\t\\t\\t\", Blaze.If(function() {                                                                         // 154\n      return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                     // 155\n    }, function() {                                                                                                    // 156\n      return [ \"\\n\\t    \\t\\t\\t\\t\", HTML.BUTTON({                                                                       // 157\n        \"data-id\": function() {                                                                                        // 158\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"problemTest\"), \"_id\"));                                 // 159\n        },                                                                                                             // 160\n        class: \"btn btn-sm btn-danger remove-btn fa fa-remove\"                                                         // 161\n      }), \"\\n\\t    \\t\\t\\t\" ];                                                                                          // 162\n    }), \"\\n\\t\\t    \\t\\t\\t\", HTML.SPAN({                                                                                // 163\n      class: \"ml-1\"                                                                                                    // 164\n    }, \"Test #\", Blaze.View(\"lookup:@index\", function() {                                                              // 165\n      return Spacebars.mustache(view.lookup(\"@index\"));                                                                // 166\n    })), \"\\n\\t\\t    \\t\\t\", Blaze.Unless(function() {                                                                   // 167\n      return Spacebars.call(Spacebars.dot(view.lookup(\"problemTest\"), \"isPublic\"));                                    // 168\n    }, function() {                                                                                                    // 169\n      return [ \"\\n\\t\\t    \\t\\t\\t\", HTML.SPAN({                                                                         // 170\n        class: \"ml-1 fa fa-ban\"                                                                                        // 171\n      }), \"\\n\\t\\t    \\t\\t\" ];                                                                                          // 172\n    }), \"\\n\\t\\t    \\t\\t\"), \"\\n\\t\\t  \\t\\t\" ];                                                                           // 173\n  }), \"\\n\\t\\t  \\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\");                                                                // 174\n}));                                                                                                                   // 175\n                                                                                                                       // 176\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"upload.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/upload.html                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./template.upload.js\"), {                                                                        // 1\n  \"*\": module.makeNsSetter()                                                                                           // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.upload.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/template.upload.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"problem_upload\");                                                                                // 2\nTemplate[\"problem_upload\"] = new Template(\"Template.problem_upload\", (function() {                                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    class: \"card\",                                                                                                     // 6\n    style: function() {                                                                                                // 7\n      return Blaze.Unless(function() {                                                                                 // 8\n        return Spacebars.call(Spacebars.dot(view.lookup(\"currentProblemId\"), \"get\"));                                  // 9\n      }, function() {                                                                                                  // 10\n        return \"display:none\";                                                                                         // 11\n      });                                                                                                              // 12\n    }                                                                                                                  // 13\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                              // 14\n    class: \"card-body\"                                                                                                 // 15\n  }, \"\\n\\t\\t\\t\", HTML.FORM({                                                                                           // 16\n    class: \"upload-form\"                                                                                               // 17\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"form-group row align-items-center justify-content-between\">\\n\\t\\t\\t\\t\\t<label class=\"col-auto\"><input type=\"radio\" name=\"lang\" value=\"c\"> gcc -O2 -std=c99 -lm</label>\\n\\t\\t\\t\\t\\t<label class=\"col-auto\"><input type=\"radio\" name=\"lang\" value=\"cpp\"> g++ -O2 -std=c++11</label>\\n\\t\\t\\t\\t\\t<div class=\"col-auto\"><button class=\"btn btn-primary\">Upload</button></div>\\n\\t\\t\\t\\t</div>'), \"\\n\\t\\t\\t\\t\", HTML.TEXTAREA({\n    class: \"form-control\",                                                                                             // 19\n    name: \"code\",                                                                                                      // 20\n    style: \"height:610px\"                                                                                              // 21\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\");                                                                                 // 22\n}));                                                                                                                   // 23\n                                                                                                                       // 24\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/main.html                                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./template.main.js\"), {                                                                          // 1\n  \"*\": module.makeNsSetter()                                                                                           // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.main.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/template.main.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"problem_main\");                                                                                  // 2\nTemplate[\"problem_main\"] = new Template(\"Template.problem_main\", (function() {                                         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    class: \"row\"                                                                                                       // 6\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                              // 7\n    class: \"col-4\"                                                                                                     // 8\n  }, Blaze._TemplateWith(function() {                                                                                  // 9\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                   // 10\n  }, function() {                                                                                                      // 11\n    return Spacebars.include(view.lookupTemplate(\"problem_list\"));                                                     // 12\n  })), \"\\n\\t\\t\", HTML.DIV({                                                                                            // 13\n    class: \"col-8\"                                                                                                     // 14\n  }, \"\\n\\t\\t\\t\", HTML.Raw('<ul class=\"nav nav-tabs\">\\n\\t\\t\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#problem_detail_tpl\">Details</a></li>\\n\\t\\t\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#problem_test_tpl\">Tests</a></li>\\n\\t\\t\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#problem_upload_tpl\">Upload</a></li>\\n\\t\\t\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#problem_submission_main_tpl\">Submissions</a></li>\\n\\t\\t\\t</ul>'), \"\\n\\t\\t\\t\", HTML.DIV({\n    class: \"tab-content\"                                                                                               // 16\n  }, \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                          // 17\n    class: \"tab-pane\",                                                                                                 // 18\n    id: \"problem_detail_tpl\"                                                                                           // 19\n  }, Blaze._TemplateWith(function() {                                                                                  // 20\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                   // 21\n  }, function() {                                                                                                      // 22\n    return Spacebars.include(view.lookupTemplate(\"problem_detail\"));                                                   // 23\n  })), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                        // 24\n    class: \"tab-pane\",                                                                                                 // 25\n    id: \"problem_test_tpl\"                                                                                             // 26\n  }, Blaze._TemplateWith(function() {                                                                                  // 27\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                   // 28\n  }, function() {                                                                                                      // 29\n    return Spacebars.include(view.lookupTemplate(\"problem_test\"));                                                     // 30\n  })), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                        // 31\n    class: \"tab-pane\",                                                                                                 // 32\n    id: \"problem_upload_tpl\"                                                                                           // 33\n  }, Blaze._TemplateWith(function() {                                                                                  // 34\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                   // 35\n  }, function() {                                                                                                      // 36\n    return Spacebars.include(view.lookupTemplate(\"problem_upload\"));                                                   // 37\n  })), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                        // 38\n    class: \"tab-pane\",                                                                                                 // 39\n    id: \"problem_submission_main_tpl\"                                                                                  // 40\n  }, Blaze._TemplateWith(function() {                                                                                  // 41\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                   // 42\n  }, function() {                                                                                                      // 43\n    return Spacebars.include(view.lookupTemplate(\"submission_main\"));                                                  // 44\n  })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\");                                                                                // 45\n}));                                                                                                                   // 46\n                                                                                                                       // 47\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"detail.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/detail.js                                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Problems = void 0;                                                                                                 // 1\nmodule.watch(require(\"/imports/api/problem.js\"), {                                                                     // 1\n\tProblems: function (v) {                                                                                              // 1\n\t\tProblems = v;                                                                                                        // 1\n\t}                                                                                                                     // 1\n}, 0);                                                                                                                 // 1\nmodule.watch(require(\"./detail.html\"));                                                                                // 1\nTemplate.problem_detail.onCreated(function () {                                                                        // 4\n\tvar _this = this;                                                                                                     // 4\n                                                                                                                       //\n\tthis.autorun(function () {                                                                                            // 5\n\t\treturn _this.subscribe('Problems.findOne', _this.data.currentProblemId.get());                                       // 5\n\t});                                                                                                                   // 5\n});                                                                                                                    // 6\nTemplate.problem_detail.onRendered(function () {                                                                       // 8\n\tthis.$('[class*=edit]').hide();                                                                                       // 9\n});                                                                                                                    // 10\nTemplate.problem_detail.helpers({                                                                                      // 12\n\tcurrentProblem: function () {                                                                                         // 13\n\t\tvar problem = Problems.findOne({                                                                                     // 14\n\t\t\t_id: this.currentProblemId.get()                                                                                    // 14\n\t\t});                                                                                                                  // 14\n                                                                                                                       //\n\t\tif (problem == undefined) {                                                                                          // 16\n\t\t\tthis.currentProblemId.set(null);                                                                                    // 17\n\t\t}                                                                                                                    // 18\n                                                                                                                       //\n\t\treturn problem;                                                                                                      // 19\n\t}                                                                                                                     // 20\n});                                                                                                                    // 12\nTemplate.problem_detail.events({                                                                                       // 23\n\t'blur [class*=edit]': function (event, instance) {                                                                    // 24\n\t\tvar _Meteor$call;                                                                                                    // 24\n                                                                                                                       //\n\t\tvar target = event.currentTarget;                                                                                    // 25\n\t\tvar toggle = target.dataset.toggle;                                                                                  // 26\n\t\tvar field = target.name;                                                                                             // 27\n\t\tvar value = target.value;                                                                                            // 28\n\t\tinstance.$(target).hide();                                                                                           // 30\n\t\tinstance.$(toggle).show();                                                                                           // 31\n\t\tMeteor.call('Problems.update', this.currentProblemId.get(), (_Meteor$call = {}, _Meteor$call[field] = value, _Meteor$call));\n\t},                                                                                                                    // 34\n\t'click [class*=view]': function (event, instance) {                                                                   // 35\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 36\n\t\tvar target = event.currentTarget;                                                                                    // 38\n\t\tvar toggle = target.dataset.toggle;                                                                                  // 39\n\t\tinstance.$(target).hide();                                                                                           // 41\n\t\tinstance.$(toggle).show().focus();                                                                                   // 42\n\t},                                                                                                                    // 43\n\t'click [type=checkbox]': function (event) {                                                                           // 44\n\t\tvar _Meteor$call2;                                                                                                   // 44\n                                                                                                                       //\n\t\tvar target = event.currentTarget;                                                                                    // 45\n\t\tvar field = target.name;                                                                                             // 46\n\t\tvar value = target.checked;                                                                                          // 47\n\t\tMeteor.call('Problems.update', this.currentProblemId.get(), (_Meteor$call2 = {}, _Meteor$call2[field] = value, _Meteor$call2));\n\t}                                                                                                                     // 50\n});                                                                                                                    // 23\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"list.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/list.js                                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Problems = void 0;                                                                                                 // 1\nmodule.watch(require(\"/imports/api/problem.js\"), {                                                                     // 1\n\tProblems: function (v) {                                                                                              // 1\n\t\tProblems = v;                                                                                                        // 1\n\t}                                                                                                                     // 1\n}, 0);                                                                                                                 // 1\nmodule.watch(require(\"./list.html\"));                                                                                  // 1\nTemplate.problem_list.onCreated(function () {                                                                          // 4\n\tthis.subscribe('Problems.findAll');                                                                                   // 5\n});                                                                                                                    // 6\nTemplate.problem_list.helpers({                                                                                        // 8\n\tproblemList: function () {                                                                                            // 9\n\t\treturn Problems.find({}, {                                                                                           // 10\n\t\t\tfields: {                                                                                                           // 10\n\t\t\t\t_id: 1,                                                                                                            // 10\n\t\t\t\ttitle: 1,                                                                                                          // 10\n\t\t\t\tisExam: 1,                                                                                                         // 10\n\t\t\t\tisPublic: 1                                                                                                        // 10\n\t\t\t},                                                                                                                  // 10\n\t\t\tsort: {                                                                                                             // 10\n\t\t\t\ttitle: 1                                                                                                           // 10\n\t\t\t}                                                                                                                   // 10\n\t\t});                                                                                                                  // 10\n\t}                                                                                                                     // 11\n});                                                                                                                    // 8\nTemplate.problem_list.events({                                                                                         // 14\n\t'click .insert-btn': function () {                                                                                    // 15\n\t\tMeteor.call('Problems.insert');                                                                                      // 16\n\t},                                                                                                                    // 17\n\t'click .remove-btn': function (event) {                                                                               // 18\n\t\tvar id = event.currentTarget.dataset.id;                                                                             // 19\n\t\tMeteor.call('Problems.remove', {                                                                                     // 20\n\t\t\t_id: id                                                                                                             // 20\n\t\t});                                                                                                                  // 20\n\t},                                                                                                                    // 21\n\t'click .get-btn': function (event) {                                                                                  // 22\n\t\tvar id = event.currentTarget.dataset.id;                                                                             // 23\n\t\tthis.currentProblemId.set(id);                                                                                       // 24\n\t}                                                                                                                     // 25\n});                                                                                                                    // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"test.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/test.js                                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar ProblemTests = void 0;                                                                                             // 1\nmodule.watch(require(\"/imports/api/problem.js\"), {                                                                     // 1\n\tProblemTests: function (v) {                                                                                          // 1\n\t\tProblemTests = v;                                                                                                    // 1\n\t}                                                                                                                     // 1\n}, 0);                                                                                                                 // 1\nmodule.watch(require(\"./test.html\"));                                                                                  // 1\nTemplate.problem_test.onCreated(function () {                                                                          // 4\n\tvar _this = this;                                                                                                     // 4\n                                                                                                                       //\n\tthis.currentProblemTestId = new ReactiveVar();                                                                        // 5\n\tthis.autorun(function () {                                                                                            // 6\n\t\treturn _this.subscribe('ProblemTests.findOne', _this.currentProblemTestId.get());                                    // 6\n\t});                                                                                                                   // 6\n\tthis.autorun(function () {                                                                                            // 7\n\t\treturn _this.subscribe('ProblemTests.findAllByProblem', _this.data.currentProblemId.get());                          // 7\n\t});                                                                                                                   // 7\n});                                                                                                                    // 8\nTemplate.problem_test.onRendered(function () {                                                                         // 10\n\tthis.$('[class*=edit]').hide();                                                                                       // 11\n});                                                                                                                    // 12\nTemplate.problem_test.helpers({                                                                                        // 14\n\tproblemTestList: function () {                                                                                        // 15\n\t\treturn ProblemTests.find({                                                                                           // 16\n\t\t\tproblemId: this.currentProblemId.get()                                                                              // 16\n\t\t}, {                                                                                                                 // 16\n\t\t\tfields: {                                                                                                           // 16\n\t\t\t\t_id: 1,                                                                                                            // 16\n\t\t\t\tisPublic: 1                                                                                                        // 16\n\t\t\t},                                                                                                                  // 16\n\t\t\tsort: {                                                                                                             // 16\n\t\t\t\t_id: 1                                                                                                             // 16\n\t\t\t}                                                                                                                   // 16\n\t\t});                                                                                                                  // 16\n\t},                                                                                                                    // 17\n\tcurrentProblemTest: function () {                                                                                     // 18\n\t\tvar problemTest = ProblemTests.findOne({                                                                             // 19\n\t\t\t_id: Template.instance().currentProblemTestId.get(),                                                                // 19\n\t\t\tproblemId: this.currentProblemId.get()                                                                              // 19\n\t\t});                                                                                                                  // 19\n                                                                                                                       //\n\t\tif (problemTest == undefined) {                                                                                      // 21\n\t\t\tTemplate.instance().currentProblemTestId.set(null);                                                                 // 22\n\t\t}                                                                                                                    // 23\n                                                                                                                       //\n\t\treturn problemTest;                                                                                                  // 24\n\t}                                                                                                                     // 25\n});                                                                                                                    // 14\nTemplate.problem_test.events({                                                                                         // 28\n\t'click .insert-btn': function () {                                                                                    // 29\n\t\tMeteor.call('ProblemTests.insert', this.currentProblemId.get());                                                     // 30\n\t},                                                                                                                    // 31\n\t'click .remove-btn': function (event) {                                                                               // 32\n\t\tvar id = event.currentTarget.dataset.id;                                                                             // 33\n\t\tMeteor.call('ProblemTests.remove', {                                                                                 // 34\n\t\t\t_id: id                                                                                                             // 34\n\t\t});                                                                                                                  // 34\n\t},                                                                                                                    // 35\n\t'click .get-btn': function (event, instance) {                                                                        // 36\n\t\tvar id = event.currentTarget.dataset.id;                                                                             // 37\n\t\tinstance.currentProblemTestId.set(id);                                                                               // 38\n\t},                                                                                                                    // 39\n\t'blur [class*=edit]': function (event, instance) {                                                                    // 40\n\t\tvar _Meteor$call;                                                                                                    // 40\n                                                                                                                       //\n\t\tvar target = event.currentTarget;                                                                                    // 41\n\t\tvar toggle = target.dataset.toggle;                                                                                  // 42\n\t\tvar field = target.name;                                                                                             // 43\n\t\tvar value = target.value;                                                                                            // 44\n\t\tinstance.$(target).hide();                                                                                           // 46\n\t\tinstance.$(toggle).show();                                                                                           // 47\n\t\tMeteor.call('ProblemTests.update', instance.currentProblemTestId.get(), (_Meteor$call = {}, _Meteor$call[field] = value, _Meteor$call));\n\t},                                                                                                                    // 50\n\t'click [class*=view]': function (event, instance) {                                                                   // 51\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 52\n\t\tvar target = event.currentTarget;                                                                                    // 54\n\t\tvar toggle = target.dataset.toggle;                                                                                  // 55\n\t\tinstance.$(target).hide();                                                                                           // 57\n\t\tinstance.$(toggle).show().focus();                                                                                   // 58\n\t},                                                                                                                    // 59\n\t'click [type=checkbox]': function (event, instance) {                                                                 // 60\n\t\tvar _Meteor$call2;                                                                                                   // 60\n                                                                                                                       //\n\t\tvar target = event.currentTarget;                                                                                    // 61\n\t\tvar field = target.name;                                                                                             // 62\n\t\tvar value = target.checked;                                                                                          // 63\n\t\tMeteor.call('ProblemTests.update', instance.currentProblemTestId.get(), (_Meteor$call2 = {}, _Meteor$call2[field] = value, _Meteor$call2));\n\t}                                                                                                                     // 66\n});                                                                                                                    // 28\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"upload.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/upload.js                                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./upload.html\"));                                                                                // 1\nTemplate.problem_upload.events({                                                                                       // 3\n\t'submit .upload-form': function (event) {                                                                             // 4\n\t\tvar target = event.currentTarget;                                                                                    // 5\n\t\tvar lang = target.lang.value;                                                                                        // 6\n\t\tvar code = target.code.value;                                                                                        // 7\n\t\ttarget.code.value = null;                                                                                            // 9\n\t\tevent.preventDefault();                                                                                              // 10\n\t\tMeteor.call('Submissions.insert', this.currentProblemId.get(), Meteor.userId(), lang, code);                         // 11\n\t}                                                                                                                     // 12\n});                                                                                                                    // 3\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/problem/main.js                                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./list.js\"));                                                                                    // 1\nmodule.watch(require(\"./detail.js\"));                                                                                  // 1\nmodule.watch(require(\"./test.js\"));                                                                                    // 1\nmodule.watch(require(\"./upload.js\"));                                                                                  // 1\nmodule.watch(require(\"../submission/main.js\"));                                                                        // 1\nmodule.watch(require(\"./main.html\"));                                                                                  // 1\nTemplate.problem_main.onCreated(function () {                                                                          // 8\n\tthis.currentProblemId = new ReactiveVar();                                                                            // 9\n});                                                                                                                    // 10\nTemplate.problem_main.onRendered(function () {                                                                         // 12\n\tthis.$('.nav-link')[0].click();                                                                                       // 13\n});                                                                                                                    // 14\nTemplate.problem_main.helpers({                                                                                        // 16\n\tshareArgs: function () {                                                                                              // 17\n\t\treturn {                                                                                                             // 18\n\t\t\tcurrentProblemId: Template.instance().currentProblemId                                                              // 18\n\t\t};                                                                                                                   // 18\n\t}                                                                                                                     // 19\n});                                                                                                                    // 16\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"student\":{\"detail.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/student/detail.html                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./template.detail.js\"), {                                                                        // 1\n  \"*\": module.makeNsSetter()                                                                                           // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.detail.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/student/template.detail.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"student_detail\");                                                                                // 2\nTemplate[\"student_detail\"] = new Template(\"Template.student_detail\", (function() {                                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    class: \"card\",                                                                                                     // 6\n    style: function() {                                                                                                // 7\n      return [ \"height:700px; \", Blaze.Unless(function() {                                                             // 8\n        return Spacebars.call(Spacebars.dot(view.lookup(\"currentStudentId\"), \"get\"));                                  // 9\n      }, function() {                                                                                                  // 10\n        return \"display:none\";                                                                                         // 11\n      }) ];                                                                                                            // 12\n    }                                                                                                                  // 13\n  }, \"\\n  \\t\\t\", HTML.DIV({                                                                                            // 14\n    class: \"card-body\"                                                                                                 // 15\n  }, \"\\n\\t\\t\\t\", HTML.DIV({                                                                                            // 16\n    class: \"form-group row\"                                                                                            // 17\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Username:</div>'), \"\\n\\t\\t\\t\\t\", HTML.DIV({                            // 18\n    class: \"col-10\"                                                                                                    // 19\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                        // 20\n    \"data-toggle\": \".username-edit\",                                                                                   // 21\n    class: \"username-view card-text\"                                                                                   // 22\n  }, Blaze.View(\"lookup:currentStudent.username\", function() {                                                         // 23\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"username\"));                               // 24\n  })), \"\\n\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                                    // 25\n    \"data-toggle\": \".username-view\",                                                                                   // 26\n    class: \"username-edit form-control\",                                                                               // 27\n    type: \"text\",                                                                                                      // 28\n    name: \"username\",                                                                                                  // 29\n    value: function() {                                                                                                // 30\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"username\"));                             // 31\n    }                                                                                                                  // 32\n  }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                               // 33\n    class: \"form-group row\"                                                                                            // 34\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Fullname:</div>'), \"\\n\\t\\t\\t\\t\", HTML.DIV({                            // 35\n    class: \"col-10\"                                                                                                    // 36\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                        // 37\n    \"data-toggle\": \".fullname-edit\",                                                                                   // 38\n    class: \"fullname-view card-text\"                                                                                   // 39\n  }, Blaze.View(\"lookup:currentStudent.fullname\", function() {                                                         // 40\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"fullname\"));                               // 41\n  })), \"\\n\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                                    // 42\n    \"data-toggle\": \".fullname-view\",                                                                                   // 43\n    class: \"fullname-edit form-control\",                                                                               // 44\n    type: \"text\",                                                                                                      // 45\n    name: \"fullname\",                                                                                                  // 46\n    value: function() {                                                                                                // 47\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"fullname\"));                             // 48\n    }                                                                                                                  // 49\n  }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                               // 50\n    class: \"form-group row\"                                                                                            // 51\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Email:</div>'), \"\\n\\t\\t\\t\\t\", HTML.DIV({                               // 52\n    class: \"col-10\"                                                                                                    // 53\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                        // 54\n    \"data-toggle\": \".email-edit\",                                                                                      // 55\n    class: \"email-view card-text\"                                                                                      // 56\n  }, Blaze.View(\"lookup:currentStudent.emails.0.address\", function() {                                                 // 57\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"emails\", \"0\", \"address\"));                 // 58\n  })), \"\\n\\t\\t\\t\\t\\t\", HTML.INPUT({                                                                                    // 59\n    \"data-toggle\": \".email-view\",                                                                                      // 60\n    class: \"email-edit form-control\",                                                                                  // 61\n    type: \"email\",                                                                                                     // 62\n    name: \"email\",                                                                                                     // 63\n    value: function() {                                                                                                // 64\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"emails\", \"0\", \"address\"));               // 65\n    }                                                                                                                  // 66\n  }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                               // 67\n    class: \"form-group row\"                                                                                            // 68\n  }, \"\\n\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Year:</div>'), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                // 69\n    class: \"col-10\"                                                                                                    // 70\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                        // 71\n    \"data-toggle\": \".year-edit\",                                                                                       // 72\n    class: \"year-view card-text\"                                                                                       // 73\n  }, Blaze.View(\"lookup:currentStudent.year\", function() {                                                             // 74\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"year\"));                                   // 75\n  })), \"\\n  \\t\\t\\t\\t\\t\", HTML.INPUT({                                                                                  // 76\n    \"data-toggle\": \".year-view\",                                                                                       // 77\n    class: \"year-edit form-control\",                                                                                   // 78\n    type: \"number\",                                                                                                    // 79\n    name: \"year\",                                                                                                      // 80\n    value: function() {                                                                                                // 81\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"year\"));                                 // 82\n    }                                                                                                                  // 83\n  }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\", Blaze.If(function() {                                                      // 84\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                       // 85\n  }, function() {                                                                                                      // 86\n    return [ \"\\n\\t\\t\\t\", HTML.DIV({                                                                                    // 87\n      class: \"form-group row\"                                                                                          // 88\n    }, \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                        // 89\n      class: \"col-2\"                                                                                                   // 90\n    }, \"Password:\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                          // 91\n      class: \"col-10\"                                                                                                  // 92\n    }, \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                      // 93\n      \"data-toggle\": \".password-edit\",                                                                                 // 94\n      class: \"password-view card-text\"                                                                                 // 95\n    }, \"Click to set password\"), \"\\n\\t\\t\\t\\t\\t\", HTML.INPUT({                                                          // 96\n      \"data-toggle\": \".password-view\",                                                                                 // 97\n      class: \"password-edit form-control\",                                                                             // 98\n      type: \"password\",                                                                                                // 99\n      name: \"password\",                                                                                                // 100\n      style: \"display:none\"                                                                                            // 101\n    }), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.DIV({                                                             // 102\n      class: \"form-group row\"                                                                                          // 103\n    }, \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                        // 104\n      class: \"col-2\"                                                                                                   // 105\n    }, \"Admin:\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                             // 106\n      class: \"col-10\"                                                                                                  // 107\n    }, HTML.INPUT({                                                                                                    // 108\n      type: \"checkbox\",                                                                                                // 109\n      name: \"isAdmin\",                                                                                                 // 110\n      checked: function() {                                                                                            // 111\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentStudent\"), \"isAdmin\"));                            // 112\n      }                                                                                                                // 113\n    })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];                                                                                      // 114\n  }, function() {                                                                                                      // 115\n    return Blaze.If(function() {                                                                                       // 116\n      return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isOwner\"), Spacebars.dot(view.lookup(\"currentStudentId\"), \"get\"));\n    }, function() {                                                                                                    // 118\n      return [ \"\\n\\t\\t\\t\", HTML.FORM({                                                                                 // 119\n        class: \"chgpwd-form\"                                                                                           // 120\n      }, \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                      // 121\n        class: \"form-group row\"                                                                                        // 122\n      }, \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                    // 123\n        class: \"col-2\"                                                                                                 // 124\n      }, \"Old password:\"), \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                  // 125\n        class: \"col-10\"                                                                                                // 126\n      }, HTML.INPUT({                                                                                                  // 127\n        class: \"form-control\",                                                                                         // 128\n        type: \"password\",                                                                                              // 129\n        name: \"oldPassword\"                                                                                            // 130\n      })), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                     // 131\n        class: \"form-group row\"                                                                                        // 132\n      }, \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                    // 133\n        class: \"col-2\"                                                                                                 // 134\n      }, \"New password:\"), \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                  // 135\n        class: \"col-10\"                                                                                                // 136\n      }, HTML.INPUT({                                                                                                  // 137\n        class: \"form-control\",                                                                                         // 138\n        type: \"password\",                                                                                              // 139\n        name: \"newPassword\"                                                                                            // 140\n      })), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                     // 141\n        class: \"offset-2\"                                                                                              // 142\n      }, HTML.BUTTON({                                                                                                 // 143\n        class: \"btn btn-default\"                                                                                       // 144\n      }, \"Change Password\")), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];                                                                 // 145\n    });                                                                                                                // 146\n  }), \"\\n\\t\\t\"), \"\\n\\t\");                                                                                              // 147\n}));                                                                                                                   // 148\n                                                                                                                       // 149\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"list.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/student/list.html                                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./template.list.js\"), {                                                                          // 1\n  \"*\": module.makeNsSetter()                                                                                           // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.list.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/student/template.list.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"student_list\");                                                                                  // 2\nTemplate[\"student_list\"] = new Template(\"Template.student_list\", (function() {                                         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    class: \"card\"                                                                                                      // 6\n  }, \"\\n  \\t\\t\", HTML.DIV({                                                                                            // 7\n    class: \"card-header\"                                                                                               // 8\n  }, \"\\n\\t\\t\", Blaze.If(function() {                                                                                   // 9\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                       // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n\\t\\t\\t\", HTML.BUTTON({                                                                                 // 12\n      class: \"btn btn-sm btn-primary insert-btn fa fa-plus\"                                                            // 13\n    }), \"\\n\\t\\t\" ];                                                                                                    // 14\n  }), \"\\n\\t\\t\\t\", HTML.Raw('<strong class=\"ml-1\">Student List</strong>'), \"\\n  \\t\\t\"), \"\\n\\t  \\t\", HTML.UL({           // 15\n    class: \"list-group\",                                                                                               // 16\n    style: \"height:700px\"                                                                                              // 17\n  }, \"\\n\\t  \\t\", Blaze.Each(function() {                                                                               // 18\n    return {                                                                                                           // 19\n      _sequence: Spacebars.call(view.lookup(\"studentList\")),                                                           // 20\n      _variable: \"student\"                                                                                             // 21\n    };                                                                                                                 // 22\n  }, function() {                                                                                                      // 23\n    return [ \"\\n\\t    \\t\", HTML.LI({                                                                                   // 24\n      \"data-id\": function() {                                                                                          // 25\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"student\"), \"_id\"));                                       // 26\n      },                                                                                                               // 27\n      class: function() {                                                                                              // 28\n        return [ \"list-group-item get-btn \", Blaze.If(function() {                                                     // 29\n          return Spacebars.dataMustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"currentStudentId\"), \"get\"), Spacebars.dot(view.lookup(\"student\"), \"_id\"));\n        }, function() {                                                                                                // 31\n          return \"active\";                                                                                             // 32\n        }) ];                                                                                                          // 33\n      }                                                                                                                // 34\n    }, \"\\n\\t    \\t\", Blaze.If(function() {                                                                             // 35\n      return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                     // 36\n    }, function() {                                                                                                    // 37\n      return [ \"\\n\\t    \\t\\t\", HTML.BUTTON({                                                                           // 38\n        \"data-id\": function() {                                                                                        // 39\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"student\"), \"_id\"));                                     // 40\n        },                                                                                                             // 41\n        class: \"btn btn-sm btn-danger remove-btn fa fa-remove\"                                                         // 42\n      }), \"\\n\\t    \\t\" ];                                                                                              // 43\n    }), \"\\n\\t    \\t\\t\", HTML.SPAN({                                                                                    // 44\n      class: \"ml-1\"                                                                                                    // 45\n    }, Blaze.View(\"lookup:student.username\", function() {                                                              // 46\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"student\"), \"username\"));                                    // 47\n    })), \"\\n\\t    \\t\", Blaze.If(function() {                                                                           // 48\n      return Spacebars.call(Spacebars.dot(view.lookup(\"student\"), \"isAdmin\"));                                         // 49\n    }, function() {                                                                                                    // 50\n      return [ \"\\n\\t    \\t\\t\", HTML.SPAN({                                                                             // 51\n        class: \"ml-1 fa fa-user-secret\"                                                                                // 52\n      }), \"\\n\\t    \\t\" ];                                                                                              // 53\n    }), \"\\n\\t    \\t\"), \"\\n\\t\\t\" ];                                                                                     // 54\n  }), \"\\n  \\t\\t\"), \"\\n  \\t\");                                                                                          // 55\n}));                                                                                                                   // 56\n                                                                                                                       // 57\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/student/main.html                                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./template.main.js\"), {                                                                          // 1\n  \"*\": module.makeNsSetter()                                                                                           // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.main.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/student/template.main.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"student_main\");                                                                                  // 2\nTemplate[\"student_main\"] = new Template(\"Template.student_main\", (function() {                                         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    class: \"row\"                                                                                                       // 6\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                              // 7\n    class: \"col-4\"                                                                                                     // 8\n  }, Blaze._TemplateWith(function() {                                                                                  // 9\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                   // 10\n  }, function() {                                                                                                      // 11\n    return Spacebars.include(view.lookupTemplate(\"student_list\"));                                                     // 12\n  })), \"\\n\\t\\t\", HTML.DIV({                                                                                            // 13\n    class: \"col-8\"                                                                                                     // 14\n  }, \"\\n\\t\\t\\t\", HTML.Raw('<ul class=\"nav nav-tabs\">\\n\\t\\t\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#student_detail_tpl\">Details</a></li>\\n\\t\\t\\t\\t<li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#student_submission_main_tpl\">Submissions</a></li>\\n\\t\\t\\t</ul>'), \"\\n\\t\\t\\t\", HTML.DIV({\n    class: \"tab-content\"                                                                                               // 16\n  }, \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                          // 17\n    class: \"tab-pane\",                                                                                                 // 18\n    id: \"student_detail_tpl\"                                                                                           // 19\n  }, Blaze._TemplateWith(function() {                                                                                  // 20\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                   // 21\n  }, function() {                                                                                                      // 22\n    return Spacebars.include(view.lookupTemplate(\"student_detail\"));                                                   // 23\n  })), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                        // 24\n    class: \"tab-pane\",                                                                                                 // 25\n    id: \"student_submission_main_tpl\"                                                                                  // 26\n  }, Blaze._TemplateWith(function() {                                                                                  // 27\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                   // 28\n  }, function() {                                                                                                      // 29\n    return Spacebars.include(view.lookupTemplate(\"submission_main\"));                                                  // 30\n  })), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\");                                                                                // 31\n}));                                                                                                                   // 32\n                                                                                                                       // 33\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"detail.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/student/detail.js                                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Students = void 0;                                                                                                 // 1\nmodule.watch(require(\"/imports/api/student.js\"), {                                                                     // 1\n\tStudents: function (v) {                                                                                              // 1\n\t\tStudents = v;                                                                                                        // 1\n\t}                                                                                                                     // 1\n}, 0);                                                                                                                 // 1\nmodule.watch(require(\"./detail.html\"));                                                                                // 1\nTemplate.student_detail.onCreated(function () {                                                                        // 4\n\tvar _this = this;                                                                                                     // 4\n                                                                                                                       //\n\tthis.autorun(function () {                                                                                            // 5\n\t\treturn _this.subscribe('Students.findOne', _this.data.currentStudentId.get());                                       // 5\n\t});                                                                                                                   // 5\n});                                                                                                                    // 6\nTemplate.student_detail.onRendered(function () {                                                                       // 8\n\tthis.$('[class*=edit]').hide();                                                                                       // 9\n});                                                                                                                    // 10\nTemplate.student_detail.helpers({                                                                                      // 12\n\tcurrentStudent: function () {                                                                                         // 13\n\t\tvar student = Students.findOne({                                                                                     // 14\n\t\t\t_id: this.currentStudentId.get()                                                                                    // 14\n\t\t});                                                                                                                  // 14\n                                                                                                                       //\n\t\tif (student == undefined) {                                                                                          // 16\n\t\t\tthis.currentStudentId.set(null);                                                                                    // 17\n\t\t}                                                                                                                    // 18\n                                                                                                                       //\n\t\treturn student;                                                                                                      // 19\n\t}                                                                                                                     // 20\n});                                                                                                                    // 12\nTemplate.student_detail.events({                                                                                       // 23\n\t'blur [class*=edit]': function (event, instance) {                                                                    // 24\n\t\tvar _Meteor$call;                                                                                                    // 24\n                                                                                                                       //\n\t\tvar target = event.currentTarget;                                                                                    // 25\n\t\tvar toggle = target.dataset.toggle;                                                                                  // 26\n\t\tvar field = target.name;                                                                                             // 27\n\t\tvar value = target.value;                                                                                            // 28\n\t\tinstance.$(target).hide();                                                                                           // 30\n\t\tinstance.$(toggle).show();                                                                                           // 31\n\t\tMeteor.call('Students.update', this.currentStudentId.get(), (_Meteor$call = {}, _Meteor$call[field] = value, _Meteor$call));\n\t},                                                                                                                    // 34\n\t'click [class*=view]': function (event, instance) {                                                                   // 35\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 36\n\t\tvar target = event.currentTarget;                                                                                    // 38\n\t\tvar toggle = target.dataset.toggle;                                                                                  // 39\n\t\tinstance.$(target).hide();                                                                                           // 41\n\t\tinstance.$(toggle).show().focus();                                                                                   // 42\n\t},                                                                                                                    // 43\n\t'click [type=checkbox]': function (event) {                                                                           // 44\n\t\tvar _Meteor$call2;                                                                                                   // 44\n                                                                                                                       //\n\t\tvar target = event.currentTarget;                                                                                    // 45\n\t\tvar field = target.name;                                                                                             // 46\n\t\tvar value = target.checked;                                                                                          // 47\n\t\tMeteor.call('Students.update', this.currentStudentId.get(), (_Meteor$call2 = {}, _Meteor$call2[field] = value, _Meteor$call2));\n\t},                                                                                                                    // 50\n\t'submit .chgpwd-form': function (event) {                                                                             // 51\n\t\tvar target = event.currentTarget;                                                                                    // 52\n\t\tvar oldPassword = target.oldPassword.value;                                                                          // 53\n\t\tvar newPassword = target.newPassword.value;                                                                          // 54\n\t\tevent.preventDefault();                                                                                              // 56\n\t\tMeteor.call('Students.changePassword', oldPassword, newPassword);                                                    // 57\n\t}                                                                                                                     // 58\n});                                                                                                                    // 23\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"list.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/student/list.js                                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Students = void 0;                                                                                                 // 1\nmodule.watch(require(\"/imports/api/student.js\"), {                                                                     // 1\n\tStudents: function (v) {                                                                                              // 1\n\t\tStudents = v;                                                                                                        // 1\n\t}                                                                                                                     // 1\n}, 0);                                                                                                                 // 1\nmodule.watch(require(\"./list.html\"));                                                                                  // 1\nTemplate.student_list.onCreated(function () {                                                                          // 4\n\tthis.subscribe('Students.findAll');                                                                                   // 5\n});                                                                                                                    // 6\nTemplate.student_list.helpers({                                                                                        // 8\n\tstudentList: function () {                                                                                            // 9\n\t\treturn Students.find({}, {                                                                                           // 10\n\t\t\tfields: {                                                                                                           // 10\n\t\t\t\t_id: 1,                                                                                                            // 10\n\t\t\t\tusername: 1,                                                                                                       // 10\n\t\t\t\tisAdmin: 1                                                                                                         // 10\n\t\t\t},                                                                                                                  // 10\n\t\t\tsort: {                                                                                                             // 10\n\t\t\t\tusername: 1                                                                                                        // 10\n\t\t\t}                                                                                                                   // 10\n\t\t});                                                                                                                  // 10\n\t}                                                                                                                     // 11\n});                                                                                                                    // 8\nTemplate.student_list.events({                                                                                         // 14\n\t'click .insert-btn': function () {                                                                                    // 15\n\t\tMeteor.call('Students.insert');                                                                                      // 16\n\t},                                                                                                                    // 17\n\t'click .remove-btn': function (event) {                                                                               // 18\n\t\tvar id = event.currentTarget.dataset.id;                                                                             // 19\n\t\tMeteor.call('Students.remove', {                                                                                     // 20\n\t\t\t_id: id                                                                                                             // 20\n\t\t});                                                                                                                  // 20\n\t},                                                                                                                    // 21\n\t'click .get-btn': function (event) {                                                                                  // 22\n\t\tvar id = event.currentTarget.dataset.id;                                                                             // 23\n\t\tthis.currentStudentId.set(id);                                                                                       // 24\n\t}                                                                                                                     // 25\n});                                                                                                                    // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/student/main.js                                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./list.js\"));                                                                                    // 1\nmodule.watch(require(\"./detail.js\"));                                                                                  // 1\nmodule.watch(require(\"../submission/main.js\"));                                                                        // 1\nmodule.watch(require(\"./main.html\"));                                                                                  // 1\nTemplate.student_main.onCreated(function () {                                                                          // 6\n\tthis.currentStudentId = new ReactiveVar();                                                                            // 7\n});                                                                                                                    // 8\nTemplate.student_main.onRendered(function () {                                                                         // 10\n\tthis.$('.nav-link')[0].click();                                                                                       // 11\n});                                                                                                                    // 12\nTemplate.student_main.helpers({                                                                                        // 14\n\tshareArgs: function () {                                                                                              // 15\n\t\treturn {                                                                                                             // 16\n\t\t\tcurrentStudentId: Template.instance().currentStudentId                                                              // 16\n\t\t};                                                                                                                   // 16\n\t}                                                                                                                     // 17\n});                                                                                                                    // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"submission\":{\"detail.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/submission/detail.html                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./template.detail.js\"), {                                                                        // 1\n  \"*\": module.makeNsSetter()                                                                                           // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.detail.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/submission/template.detail.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"submission_detail\");                                                                             // 2\nTemplate[\"submission_detail\"] = new Template(\"Template.submission_detail\", (function() {                               // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    class: \"modal detail-modal\"                                                                                        // 6\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                              // 7\n    class: \"modal-dialog\",                                                                                             // 8\n    style: \"min-width:85%\"                                                                                             // 9\n  }, \"\\n\\t\\t\\t\", HTML.DIV({                                                                                            // 10\n    class: \"modal-content\"                                                                                             // 11\n  }, \"      \\t\\t\\t\\n\\t\\t\\t\\t\", HTML.DIV({                                                                              // 12\n    class: \"modal-body\"                                                                                                // 13\n  }, \"\\n\\t\", HTML.UL({                                                                                                 // 14\n    class: \"nav nav-tabs\"                                                                                              // 15\n  }, \"\\n\\t\\t\", HTML.LI({                                                                                               // 16\n    class: \"nav-item\"                                                                                                  // 17\n  }, HTML.A({                                                                                                          // 18\n    class: \"nav-link\",                                                                                                 // 19\n    \"data-toggle\": \"tab\",                                                                                              // 20\n    href: function() {                                                                                                 // 21\n      return [ \"#\", Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"_id\")), \"_detail_tpl\" ];       // 22\n    }                                                                                                                  // 23\n  }, \"Details\")), \"\\n\\t\\t\", HTML.LI({                                                                                  // 24\n    class: \"nav-item\"                                                                                                  // 25\n  }, HTML.A({                                                                                                          // 26\n    class: \"nav-link\",                                                                                                 // 27\n    \"data-toggle\": \"tab\",                                                                                              // 28\n    href: function() {                                                                                                 // 29\n      return [ \"#\", Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"_id\")), \"_result_tpl\" ];       // 30\n    }                                                                                                                  // 31\n  }, \"Results\")), \"\\n\\t\\t\", HTML.LI({                                                                                  // 32\n    class: \"nav-item\"                                                                                                  // 33\n  }, HTML.A({                                                                                                          // 34\n    class: \"nav-link\",                                                                                                 // 35\n    \"data-toggle\": \"tab\",                                                                                              // 36\n    href: function() {                                                                                                 // 37\n      return [ \"#\", Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"_id\")), \"_code_tpl\" ];         // 38\n    }                                                                                                                  // 39\n  }, \"Code\")), \"\\n\\t\"), \"\\n\\t\", HTML.DIV({                                                                             // 40\n    class: \"tab-content\",                                                                                              // 41\n    style: function() {                                                                                                // 42\n      return Blaze.Unless(function() {                                                                                 // 43\n        return Spacebars.call(Spacebars.dot(view.lookup(\"currentSubmissionId\"), \"get\"));                               // 44\n      }, function() {                                                                                                  // 45\n        return \"display:none\";                                                                                         // 46\n      });                                                                                                              // 47\n    }                                                                                                                  // 48\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                              // 49\n    class: \"tab-pane card\",                                                                                            // 50\n    id: function() {                                                                                                   // 51\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"_id\")), \"_detail_tpl\" ];            // 52\n    }                                                                                                                  // 53\n  }, \"\\n\\t\\t\\t\", HTML.DIV({                                                                                            // 54\n    class: \"card-body\"                                                                                                 // 55\n  }, \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                          // 56\n    class: \"form-group row\"                                                                                            // 57\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Student:</div>'), \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                         // 58\n    class: \"col-10\"                                                                                                    // 59\n  }, Blaze.View(\"lookup:getStudentUsername\", function() {                                                              // 60\n    return Spacebars.mustache(view.lookup(\"getStudentUsername\"), Spacebars.dot(view.lookup(\"currentSubmission\"), \"studentId\"));\n  })), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                         // 62\n    class: \"form-group row\"                                                                                            // 63\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Problem:</div>'), \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                         // 64\n    class: \"col-10\"                                                                                                    // 65\n  }, Blaze.View(\"lookup:getProblemTitle\", function() {                                                                 // 66\n    return Spacebars.mustache(view.lookup(\"getProblemTitle\"), Spacebars.dot(view.lookup(\"currentSubmission\"), \"problemId\"));\n  })), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                         // 68\n    class: \"form-group row\"                                                                                            // 69\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Created at:</div>'), \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                      // 70\n    class: \"col-10\"                                                                                                    // 71\n  }, Blaze.View(\"lookup:moFormat\", function() {                                                                        // 72\n    return Spacebars.mustache(view.lookup(\"moFormat\"), Spacebars.dataMustache(view.lookup(\"momentReactive\"), Spacebars.dot(view.lookup(\"currentSubmission\"), \"createdAt\")), \"YYYY/MM/DD HH:mm:ss\");\n  })), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                         // 74\n    class: \"form-group row\"                                                                                            // 75\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Status:</div>'), \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                          // 76\n    class: \"col-10\"                                                                                                    // 77\n  }, Blaze.View(\"lookup:currentSubmission.status\", function() {                                                        // 78\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"status\"));                              // 79\n  })), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                         // 80\n    class: \"form-group row\"                                                                                            // 81\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Score:</div>'), \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                           // 82\n    class: \"col-10\"                                                                                                    // 83\n  }, Blaze.View(\"lookup:currentSubmission.score\", function() {                                                         // 84\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"score\"));                               // 85\n  })), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                         // 86\n    class: \"form-group row\"                                                                                            // 87\n  }, \"\\n\\t\\t\\t\\t\\t\", HTML.Raw('<div class=\"col-2\">Language:</div>'), \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                        // 88\n    class: \"col-10\"                                                                                                    // 89\n  }, \"\\n\\t\\t\\t\\t\\t\", Blaze.If(function() {                                                                             // 90\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                       // 91\n  }, function() {                                                                                                      // 92\n    return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.LABEL({                                                                            // 93\n      class: \"mr-3\"                                                                                                    // 94\n    }, HTML.INPUT({                                                                                                    // 95\n      type: \"radio\",                                                                                                   // 96\n      name: \"lang\",                                                                                                    // 97\n      value: \"c\",                                                                                                      // 98\n      checked: function() {                                                                                            // 99\n        return Spacebars.mustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"currentSubmission\"), \"lang\"), \"c\");   // 100\n      }                                                                                                                // 101\n    }), \" C\"), \"\\n\\t\\t\\t\\t\\t\\t\", HTML.LABEL({                                                                          // 102\n      class: \"mr-3\"                                                                                                    // 103\n    }, HTML.INPUT({                                                                                                    // 104\n      type: \"radio\",                                                                                                   // 105\n      name: \"lang\",                                                                                                    // 106\n      value: \"cpp\",                                                                                                    // 107\n      checked: function() {                                                                                            // 108\n        return Spacebars.mustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"currentSubmission\"), \"lang\"), \"cpp\");\n      }                                                                                                                // 110\n    }), \" C++\"), \"\\n\\t\\t\\t\\t\\t\" ];                                                                                     // 111\n  }, function() {                                                                                                      // 112\n    return [ \"\\n\\t\\t\\t\\t\\t\\t\", Blaze.View(\"lookup:currentSubmission.lang\", function() {                                // 113\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"lang\"));                              // 114\n    }), \"\\n\\t\\t\\t\\t\\t\" ];                                                                                              // 115\n  }), \"\\n\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\", Blaze.If(function() {                                                // 116\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                       // 117\n  }, function() {                                                                                                      // 118\n    return [ \"\\n\\t\\t\\t\\t\", HTML.DIV({                                                                                  // 119\n      class: \"form-group row\"                                                                                          // 120\n    }, \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                                      // 121\n      class: \"col-2\"                                                                                                   // 122\n    }, \"Exam:\"), \"\\n\\t\\t\\t\\t\\t\", HTML.DIV({                                                                            // 123\n      class: \"col-10\"                                                                                                  // 124\n    }, HTML.INPUT({                                                                                                    // 125\n      type: \"checkbox\",                                                                                                // 126\n      name: \"isExam\",                                                                                                  // 127\n      checked: function() {                                                                                            // 128\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"isExam\"));                          // 129\n      }                                                                                                                // 130\n    })), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\" ];                                                                                  // 131\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\\t\", HTML.DIV({                                                                     // 132\n    class: \"tab-pane card\",                                                                                            // 133\n    id: function() {                                                                                                   // 134\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"_id\")), \"_result_tpl\" ];            // 135\n    }                                                                                                                  // 136\n  }, \"\\n\\t\\t\\t\", HTML.Raw('<div class=\"card-header\">\\n\\t\\t\\t\\t<strong>Result List</strong>\\n\\t\\t\\t</div>'), \"\\n\\t\\t\\t\", HTML.UL({\n    class: \"list-group\"                                                                                                // 138\n  }, \"\\n\\t\\t\\t\", Blaze.Each(function() {                                                                               // 139\n    return {                                                                                                           // 140\n      _sequence: Spacebars.call(view.lookup(\"submissionResultList\")),                                                  // 141\n      _variable: \"submissionResult\"                                                                                    // 142\n    };                                                                                                                 // 143\n  }, function() {                                                                                                      // 144\n    return [ \"\\n\\t\\t    \\t\", HTML.LI({                                                                                 // 145\n      class: \"list-group-item\"                                                                                         // 146\n    }, \"\\n\\t\\t    \\t\\t\", HTML.DIV({                                                                                    // 147\n      class: \"row justify-content-between\"                                                                             // 148\n    }, \"\\n\\t\\t\\t    \\t\\t\", HTML.DIV({                                                                                  // 149\n      class: \"col-auto\"                                                                                                // 150\n    }, \"Test #\", Blaze.View(\"lookup:@index\", function() {                                                              // 151\n      return Spacebars.mustache(view.lookup(\"@index\"));                                                                // 152\n    })), \"\\n\\t\\t\\t    \\t\\t\", HTML.DIV({                                                                                // 153\n      class: function() {                                                                                              // 154\n        return [ \"col-auto \", Spacebars.mustache(view.lookup(\"getStatusClass\"), Spacebars.dot(view.lookup(\"submissionResult\"), \"status\")) ];\n      }                                                                                                                // 156\n    }, Blaze.View(\"lookup:submissionResult.status\", function() {                                                       // 157\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"submissionResult\"), \"status\"));                             // 158\n    })), \"\\n\\t\\t\\t    \\t\\t\", HTML.DIV({                                                                                // 159\n      class: \"col-auto\"                                                                                                // 160\n    }, Blaze.View(\"lookup:submissionResult.timeUsed\", function() {                                                     // 161\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"submissionResult\"), \"timeUsed\"));                           // 162\n    }), \" ms\"), \"\\n\\t\\t\\t    \\t\\t\", HTML.DIV({                                                                         // 163\n      class: \"col-auto\"                                                                                                // 164\n    }, Blaze.View(\"lookup:submissionResult.memoryUsed\", function() {                                                   // 165\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"submissionResult\"), \"memoryUsed\"));                         // 166\n    }), \" kb\"), \"\\n\\t\\t\\t    \\t\"), \"\\n\\t\\t    \\t\"), \"\\n\\t\\t\\t\" ];                                                      // 167\n  }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\\t\", HTML.DIV({                                                                     // 168\n    class: \"tab-pane card\",                                                                                            // 169\n    id: function() {                                                                                                   // 170\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"_id\")), \"_code_tpl\" ];              // 171\n    }                                                                                                                  // 172\n  }, \"\\n\\t\\t\\t\", HTML.DIV({                                                                                            // 173\n    class: \"card-header\"                                                                                               // 174\n  }, \"\\n\\t\\t\\t\\tcode.\", Blaze.View(\"lookup:currentSubmission.lang\", function() {                                       // 175\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"lang\"));                                // 176\n  }), \" \", HTML.Raw('<button data-clipboard-target=\".code-view\" class=\"ml-3 btn btn-sm btn-info fa fa-copy\"></button>'), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.P({\n    style: \"height:600px\",                                                                                             // 178\n    \"data-toggle\": \".code-edit\",                                                                                       // 179\n    class: \"code-view\"                                                                                                 // 180\n  }, Blaze.View(\"lookup:currentSubmission.code\", function() {                                                          // 181\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"code\"));                                // 182\n  })), \"\\n\\t\\t\\t\", HTML.TEXTAREA({                                                                                     // 183\n    style: \"height:600px\",                                                                                             // 184\n    \"data-toggle\": \".code-view\",                                                                                       // 185\n    class: \"code-edit form-control\",                                                                                   // 186\n    name: \"code\",                                                                                                      // 187\n    value: function() {                                                                                                // 188\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentSubmission\"), \"code\"));                              // 189\n    }                                                                                                                  // 190\n  }), \"\\n\\t\\t\"), \"\\n\\t\"), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\");                                              // 191\n}));                                                                                                                   // 192\n                                                                                                                       // 193\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"list.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/submission/list.html                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./template.list.js\"), {                                                                          // 1\n  \"*\": module.makeNsSetter()                                                                                           // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.list.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/submission/template.list.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"submission_list\");                                                                               // 2\nTemplate[\"submission_list\"] = new Template(\"Template.submission_list\", (function() {                                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    class: \"card\",                                                                                                     // 6\n    style: function() {                                                                                                // 7\n      return Blaze.Unless(function() {                                                                                 // 8\n        return Spacebars.dataMustache(view.lookup(\"$or\"), Spacebars.dot(view.lookup(\"currentProblemId\"), \"get\"), Spacebars.dot(view.lookup(\"currentStudentId\"), \"get\"));\n      }, function() {                                                                                                  // 10\n        return \"display:none\";                                                                                         // 11\n      });                                                                                                              // 12\n    }                                                                                                                  // 13\n  }, HTML.Raw('\\n  \\t\\t<div class=\"card-header\">\\n\\t\\t\\t<strong class=\"ml-1\">Submission List</strong>\\n  \\t\\t</div>\\n\\t  \\t'), HTML.UL({\n    class: \"list-group\",                                                                                               // 15\n    style: \"height:660px\"                                                                                              // 16\n  }, \"\\n\\t  \\t\", Blaze.Each(function() {                                                                               // 17\n    return {                                                                                                           // 18\n      _sequence: Spacebars.call(view.lookup(\"submissionList\")),                                                        // 19\n      _variable: \"submission\"                                                                                          // 20\n    };                                                                                                                 // 21\n  }, function() {                                                                                                      // 22\n    return [ \"\\n\\t    \\t\", HTML.LI({                                                                                   // 23\n      \"data-id\": function() {                                                                                          // 24\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"submission\"), \"_id\"));                                    // 25\n      },                                                                                                               // 26\n      class: function() {                                                                                              // 27\n        return [ \"list-group-item get-btn \", Blaze.If(function() {                                                     // 28\n          return Spacebars.dataMustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"currentSubmissionId\"), \"get\"), Spacebars.dot(view.lookup(\"submission\"), \"_id\"));\n        }, function() {                                                                                                // 30\n          return \"active\";                                                                                             // 31\n        }) ];                                                                                                          // 32\n      }                                                                                                                // 33\n    }, \"\\n\\t    \\t\\t\", HTML.DIV({                                                                                      // 34\n      class: \"row justify-content-between\"                                                                             // 35\n    }, \"\\n\\t\\t    \\t\\t\", HTML.DIV({                                                                                    // 36\n      class: \"col-auto\"                                                                                                // 37\n    }, \"\\n\\t\\t    \\t\\t\", Blaze.If(function() {                                                                         // 38\n      return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));                                     // 39\n    }, function() {                                                                                                    // 40\n      return [ \"\\n\\t\\t\\t    \\t\\t\", HTML.BUTTON({                                                                       // 41\n        \"data-id\": function() {                                                                                        // 42\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"submission\"), \"_id\"));                                  // 43\n        },                                                                                                             // 44\n        class: \"btn btn-sm btn-danger remove-btn fa fa-remove\"                                                         // 45\n      }), \"\\n\\t\\t    \\t\\t\" ];                                                                                          // 46\n    }), \"\\n\\t\\t    \\t\\t\\t\", HTML.SPAN({                                                                                // 47\n      class: \"ml-1\"                                                                                                    // 48\n    }, Blaze.View(\"lookup:getStudentUsername\", function() {                                                            // 49\n      return Spacebars.mustache(view.lookup(\"getStudentUsername\"), Spacebars.dot(view.lookup(\"submission\"), \"studentId\"));\n    })), \"\\n\\t\\t    \\t\\t\"), \"\\n\\t\\t    \\t\\t\", HTML.DIV({                                                               // 51\n      class: \"col-auto\"                                                                                                // 52\n    }, Blaze.View(\"lookup:getProblemTitle\", function() {                                                               // 53\n      return Spacebars.mustache(view.lookup(\"getProblemTitle\"), Spacebars.dot(view.lookup(\"submission\"), \"problemId\"));\n    }), \"\\n\\t\\t\\t\\t\\t\", Blaze.If(function() {                                                                          // 55\n      return Spacebars.call(Spacebars.dot(view.lookup(\"submission\"), \"isExam\"));                                       // 56\n    }, function() {                                                                                                    // 57\n      return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.SPAN({                                                                           // 58\n        class: \"ml-1 fa fa-book\"                                                                                       // 59\n      }), \"\\n\\t\\t\\t\\t\\t\" ];                                                                                            // 60\n    }), \"\\n\\t\\t\\t\\t\\t\"), \"\\n\\t\\t    \\t\\t\", HTML.DIV({                                                                  // 61\n      class: \"col-auto\"                                                                                                // 62\n    }, Blaze.View(\"lookup:moFromNow\", function() {                                                                     // 63\n      return Spacebars.mustache(view.lookup(\"moFromNow\"), Spacebars.dataMustache(view.lookup(\"momentReactive\"), Spacebars.dot(view.lookup(\"submission\"), \"createdAt\")));\n    })), \"\\n\\t\\t    \\t\\t\", HTML.DIV({                                                                                  // 65\n      class: function() {                                                                                              // 66\n        return [ \"col-auto \", Spacebars.mustache(view.lookup(\"getStatusClass\"), Spacebars.dot(view.lookup(\"submission\"), \"status\")) ];\n      }                                                                                                                // 68\n    }, Blaze.View(\"lookup:submission.status\", function() {                                                             // 69\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"submission\"), \"status\"));                                   // 70\n    })), \"\\n\\t\\t    \\t\"), \"\\n\\t    \\t\"), \"\\n\\t\\t\" ];                                                                   // 71\n  }), \"\\n  \\t\\t\"), \"\\n  \\t\");                                                                                          // 72\n}));                                                                                                                   // 73\n                                                                                                                       // 74\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/submission/main.html                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./template.main.js\"), {                                                                          // 1\n  \"*\": module.makeNsSetter()                                                                                           // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.main.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/submission/template.main.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"submission_main\");                                                                               // 2\nTemplate[\"submission_main\"] = new Template(\"Template.submission_main\", (function() {                                   // 3\n  var view = this;                                                                                                     // 4\n  return [ Blaze._TemplateWith(function() {                                                                            // 5\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                   // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.include(view.lookupTemplate(\"submission_list\"));                                                  // 8\n  }), \"\\t\\n\\t\", Blaze._TemplateWith(function() {                                                                       // 9\n    return Spacebars.call(view.lookup(\"shareArgs\"));                                                                   // 10\n  }, function() {                                                                                                      // 11\n    return Spacebars.include(view.lookupTemplate(\"submission_detail\"));                                                // 12\n  }) ];                                                                                                                // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"detail.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/submission/detail.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Submissions = void 0,                                                                                              // 1\n    SubmissionResults = void 0;                                                                                        // 1\nmodule.watch(require(\"/imports/api/submission.js\"), {                                                                  // 1\n\tSubmissions: function (v) {                                                                                           // 1\n\t\tSubmissions = v;                                                                                                     // 1\n\t},                                                                                                                    // 1\n\tSubmissionResults: function (v) {                                                                                     // 1\n\t\tSubmissionResults = v;                                                                                               // 1\n\t}                                                                                                                     // 1\n}, 0);                                                                                                                 // 1\nmodule.watch(require(\"./detail.html\"));                                                                                // 1\nTemplate.submission_detail.onCreated(function () {                                                                     // 4\n\tvar _this = this;                                                                                                     // 4\n                                                                                                                       //\n\tthis.autorun(function () {                                                                                            // 5\n\t\t_this.subscribe('Submissions.findOne', _this.data.currentSubmissionId.get());                                        // 6\n                                                                                                                       //\n\t\t_this.subscribe('SubmissionResults.findAllBySubmission', _this.data.currentSubmissionId.get());                      // 7\n\t});                                                                                                                   // 8\n});                                                                                                                    // 9\nTemplate.submission_detail.onRendered(function () {                                                                    // 11\n\tthis.$('.nav-link')[0].click();                                                                                       // 12\n\tthis.$('[class*=edit]').hide();                                                                                       // 13\n});                                                                                                                    // 14\nTemplate.submission_detail.helpers({                                                                                   // 16\n\tcurrentSubmission: function () {                                                                                      // 17\n\t\tvar submission = Submissions.findOne({                                                                               // 18\n\t\t\t_id: this.currentSubmissionId.get()                                                                                 // 18\n\t\t});                                                                                                                  // 18\n                                                                                                                       //\n\t\tif (submission == undefined) {                                                                                       // 20\n\t\t\tthis.currentSubmissionId.set(null);                                                                                 // 21\n\t\t} else {                                                                                                             // 22\n\t\t\tTemplate.instance().$('.detail-modal').modal();                                                                     // 23\n\t\t}                                                                                                                    // 24\n                                                                                                                       //\n\t\treturn submission;                                                                                                   // 25\n\t},                                                                                                                    // 26\n\tsubmissionResultList: function () {                                                                                   // 27\n\t\treturn SubmissionResults.find({                                                                                      // 28\n\t\t\tsubmissionId: this.currentSubmissionId.get()                                                                        // 28\n\t\t}, {                                                                                                                 // 28\n\t\t\tsort: {                                                                                                             // 28\n\t\t\t\tproblemTestId: 1                                                                                                   // 28\n\t\t\t}                                                                                                                   // 28\n\t\t});                                                                                                                  // 28\n\t}                                                                                                                     // 29\n});                                                                                                                    // 16\nTemplate.submission_detail.events({                                                                                    // 32\n\t'blur [class*=edit]': function (event, instance) {                                                                    // 33\n\t\tvar _Meteor$call;                                                                                                    // 33\n                                                                                                                       //\n\t\tvar target = event.currentTarget;                                                                                    // 34\n\t\tvar toggle = target.dataset.toggle;                                                                                  // 35\n\t\tvar field = target.name;                                                                                             // 36\n\t\tvar value = target.value;                                                                                            // 37\n\t\tinstance.$(target).hide();                                                                                           // 39\n\t\tinstance.$(toggle).show();                                                                                           // 40\n\t\tMeteor.call('Submissions.update', this.currentSubmissionId.get(), (_Meteor$call = {}, _Meteor$call[field] = value, _Meteor$call));\n\t},                                                                                                                    // 43\n\t'click [class*=view]': function (event, instance) {                                                                   // 44\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 45\n\t\tvar target = event.currentTarget;                                                                                    // 47\n\t\tvar toggle = target.dataset.toggle;                                                                                  // 48\n\t\tinstance.$(target).hide();                                                                                           // 50\n\t\tinstance.$(toggle).show().focus();                                                                                   // 51\n\t},                                                                                                                    // 52\n\t'click [type=checkbox]': function (event) {                                                                           // 53\n\t\tvar _Meteor$call2;                                                                                                   // 53\n                                                                                                                       //\n\t\tvar target = event.currentTarget;                                                                                    // 54\n\t\tvar field = target.name;                                                                                             // 55\n\t\tvar value = target.checked;                                                                                          // 56\n\t\tMeteor.call('Submissions.update', this.currentSubmissionId.get(), (_Meteor$call2 = {}, _Meteor$call2[field] = value, _Meteor$call2));\n\t},                                                                                                                    // 59\n\t'click [type=radio]': function (event) {                                                                              // 60\n\t\tvar _Meteor$call3;                                                                                                   // 60\n                                                                                                                       //\n\t\tvar target = event.currentTarget;                                                                                    // 61\n\t\tvar field = target.name;                                                                                             // 62\n\t\tvar value = target.value;                                                                                            // 63\n\t\tMeteor.call('Submissions.update', this.currentSubmissionId.get(), (_Meteor$call3 = {}, _Meteor$call3[field] = value, _Meteor$call3));\n\t},                                                                                                                    // 66\n\t'hidden.bs.modal .detail-modal': function () {                                                                        // 67\n\t\tthis.currentSubmissionId.set(null);                                                                                  // 68\n\t}                                                                                                                     // 69\n});                                                                                                                    // 32\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"list.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/submission/list.js                                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Submissions = void 0;                                                                                              // 1\nmodule.watch(require(\"/imports/api/submission.js\"), {                                                                  // 1\n\tSubmissions: function (v) {                                                                                           // 1\n\t\tSubmissions = v;                                                                                                     // 1\n\t}                                                                                                                     // 1\n}, 0);                                                                                                                 // 1\nmodule.watch(require(\"./list.html\"));                                                                                  // 1\nTemplate.submission_list.onCreated(function () {                                                                       // 4\n\tvar _this = this;                                                                                                     // 4\n                                                                                                                       //\n\tthis.autorun(function () {                                                                                            // 5\n\t\tvar problemId = _this.data.currentProblemId ? _this.data.currentProblemId.get() : null;                              // 6\n\t\tvar studentId = _this.data.currentStudentId ? _this.data.currentStudentId.get() : null;                              // 7\n                                                                                                                       //\n\t\t_this.subscribe('Submissions.findAllByFilter', problemId, studentId);                                                // 8\n\t});                                                                                                                   // 9\n});                                                                                                                    // 10\nTemplate.submission_list.helpers({                                                                                     // 12\n\tsubmissionList: function () {                                                                                         // 13\n\t\tvar problemId = this.currentProblemId ? this.currentProblemId.get() : null;                                          // 14\n\t\tvar studentId = this.currentStudentId ? this.currentStudentId.get() : null;                                          // 15\n\t\tvar filter = {                                                                                                       // 16\n\t\t\t$or: [{                                                                                                             // 16\n\t\t\t\tproblemId: problemId                                                                                               // 16\n\t\t\t}, {                                                                                                                // 16\n\t\t\t\tstudentId: studentId                                                                                               // 16\n\t\t\t}]                                                                                                                  // 16\n\t\t};                                                                                                                   // 16\n\t\treturn Submissions.find(filter, {                                                                                    // 17\n\t\t\tfields: {                                                                                                           // 17\n\t\t\t\t_id: 1,                                                                                                            // 17\n\t\t\t\tproblemId: 1,                                                                                                      // 17\n\t\t\t\tstudentId: 1,                                                                                                      // 17\n\t\t\t\tcreatedAt: 1,                                                                                                      // 17\n\t\t\t\tstatus: 1,                                                                                                         // 17\n\t\t\t\tisExam: 1                                                                                                          // 17\n\t\t\t},                                                                                                                  // 17\n\t\t\tsort: {                                                                                                             // 17\n\t\t\t\tcreatedAt: -1                                                                                                      // 17\n\t\t\t}                                                                                                                   // 17\n\t\t});                                                                                                                  // 17\n\t}                                                                                                                     // 18\n});                                                                                                                    // 12\nTemplate.submission_list.events({                                                                                      // 21\n\t'click .remove-btn': function (event) {                                                                               // 22\n\t\tvar id = event.currentTarget.dataset.id;                                                                             // 23\n\t\tMeteor.call('Submissions.remove', {                                                                                  // 24\n\t\t\t_id: id                                                                                                             // 24\n\t\t});                                                                                                                  // 24\n\t},                                                                                                                    // 25\n\t'click .get-btn': function (event) {                                                                                  // 26\n\t\tvar id = event.currentTarget.dataset.id;                                                                             // 27\n\t\tthis.currentSubmissionId.set(id);                                                                                    // 28\n\t}                                                                                                                     // 29\n});                                                                                                                    // 21\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/ui/submission/main.js                                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Problems = void 0;                                                                                                 // 1\nmodule.watch(require(\"/imports/api/problem.js\"), {                                                                     // 1\n\tProblems: function (v) {                                                                                              // 1\n\t\tProblems = v;                                                                                                        // 1\n\t}                                                                                                                     // 1\n}, 0);                                                                                                                 // 1\nvar Students = void 0;                                                                                                 // 1\nmodule.watch(require(\"/imports/api/student.js\"), {                                                                     // 1\n\tStudents: function (v) {                                                                                              // 1\n\t\tStudents = v;                                                                                                        // 1\n\t}                                                                                                                     // 1\n}, 1);                                                                                                                 // 1\nmodule.watch(require(\"./list.js\"));                                                                                    // 1\nmodule.watch(require(\"./detail.js\"));                                                                                  // 1\nmodule.watch(require(\"./main.html\"));                                                                                  // 1\nTemplate.submission_main.onCreated(function () {                                                                       // 7\n\tthis.currentSubmissionId = new ReactiveVar();                                                                         // 8\n});                                                                                                                    // 9\nTemplate.submission_main.helpers({                                                                                     // 11\n\tshareArgs: function () {                                                                                              // 12\n\t\treturn {                                                                                                             // 13\n\t\t\tcurrentProblemId: this.currentProblemId,                                                                            // 14\n\t\t\tcurrentStudentId: this.currentStudentId,                                                                            // 15\n\t\t\tcurrentSubmissionId: Template.instance().currentSubmissionId,                                                       // 16\n\t\t\tgetProblemTitle: function (problemId) {                                                                             // 17\n\t\t\t\treturn Meteor.getValue(Problems, problemId, 'title');                                                              // 18\n\t\t\t},                                                                                                                  // 19\n\t\t\tgetStudentUsername: function (studentId) {                                                                          // 20\n\t\t\t\treturn Meteor.getValue(Students, studentId, 'username');                                                           // 21\n\t\t\t},                                                                                                                  // 22\n\t\t\tgetStatusClass: function (status) {                                                                                 // 23\n\t\t\t\tswitch (status) {                                                                                                  // 24\n\t\t\t\t\tcase 'Accepted':                                                                                                  // 25\n\t\t\t\t\t\treturn 'text-success';                                                                                           // 25\n                                                                                                                       //\n\t\t\t\t\tcase 'Compile Error':                                                                                             // 26\n\t\t\t\t\t\treturn 'text-warning';                                                                                           // 26\n                                                                                                                       //\n\t\t\t\t\tcase 'Pending':                                                                                                   // 27\n\t\t\t\t\tcase 'Initializing':                                                                                              // 28\n\t\t\t\t\tcase 'Compiling':                                                                                                 // 29\n\t\t\t\t\tcase 'Running':                                                                                                   // 30\n\t\t\t\t\tcase 'Judging':                                                                                                   // 31\n\t\t\t\t\t\treturn 'text-info';                                                                                              // 31\n                                                                                                                       //\n\t\t\t\t\tdefault:                                                                                                          // 32\n\t\t\t\t\t\treturn 'text-danger';                                                                                            // 32\n\t\t\t\t}                                                                                                                  // 24\n\t\t\t}                                                                                                                   // 34\n\t\t};                                                                                                                   // 13\n\t}                                                                                                                     // 36\n});                                                                                                                    // 11\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"api\":{\"problem.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/problem.js                                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({                                                                                                        // 1\n\tProblems: function () {                                                                                               // 1\n\t\treturn Problems;                                                                                                     // 1\n\t},                                                                                                                    // 1\n\tProblemTests: function () {                                                                                           // 1\n\t\treturn ProblemTests;                                                                                                 // 1\n\t}                                                                                                                     // 1\n});                                                                                                                    // 1\nvar SubmissionResults = void 0;                                                                                        // 1\nmodule.watch(require(\"./submission.js\"), {                                                                             // 1\n\tSubmissionResults: function (v) {                                                                                     // 1\n\t\tSubmissionResults = v;                                                                                               // 1\n\t}                                                                                                                     // 1\n}, 0);                                                                                                                 // 1\nmodule.watch(require(\"./utility.js\"));                                                                                 // 1\nvar Problems = new Mongo.Collection('Problems');                                                                       // 4\nvar ProblemTests = new Mongo.Collection('ProblemTests');                                                               // 5\n                                                                                                                       //\nif (Meteor.isServer) {                                                                                                 // 7\n\tMeteor.publish('Problems.findAll', function () {                                                                      // 8\n\t\tvar filter = {};                                                                                                     // 9\n\t\tvar option = {                                                                                                       // 10\n\t\t\tfields: {                                                                                                           // 10\n\t\t\t\t_id: 1,                                                                                                            // 10\n\t\t\t\ttitle: 1,                                                                                                          // 10\n\t\t\t\tisExam: 1,                                                                                                         // 10\n\t\t\t\tisPublic: 1                                                                                                        // 10\n\t\t\t}                                                                                                                   // 10\n\t\t};                                                                                                                   // 10\n                                                                                                                       //\n\t\tif (!Meteor.isAdmin()) {                                                                                             // 12\n\t\t\tfilter.isPublic = true;                                                                                             // 13\n\t\t}                                                                                                                    // 14\n                                                                                                                       //\n\t\treturn Problems.find(filter, option);                                                                                // 15\n\t});                                                                                                                   // 16\n\tMeteor.publish('Problems.findOne', function (id) {                                                                    // 17\n\t\tvar filter = {                                                                                                       // 18\n\t\t\t_id: id                                                                                                             // 18\n\t\t};                                                                                                                   // 18\n\t\tvar option = {};                                                                                                     // 19\n                                                                                                                       //\n\t\tif (!Meteor.isAdmin()) {                                                                                             // 21\n\t\t\tfilter.isPublic = true;                                                                                             // 22\n\t\t}                                                                                                                    // 23\n                                                                                                                       //\n\t\treturn Problems.find(filter, option);                                                                                // 24\n\t});                                                                                                                   // 25\n\tMeteor.publish('ProblemTests.findAllByProblem', function (problemId) {                                                // 26\n\t\tvar filter = {                                                                                                       // 27\n\t\t\tproblemId: problemId                                                                                                // 27\n\t\t};                                                                                                                   // 27\n\t\tvar option = {                                                                                                       // 28\n\t\t\tfields: {                                                                                                           // 28\n\t\t\t\t_id: 1,                                                                                                            // 28\n\t\t\t\tproblemId: 1,                                                                                                      // 28\n\t\t\t\tisPublic: 1                                                                                                        // 28\n\t\t\t}                                                                                                                   // 28\n\t\t};                                                                                                                   // 28\n                                                                                                                       //\n\t\tif (!Meteor.isAdmin()) {                                                                                             // 30\n\t\t\tif (!Meteor.getValue(Problems, problemId, 'isPublic')) {                                                            // 31\n\t\t\t\tfilter.problemId = null;                                                                                           // 32\n\t\t\t}                                                                                                                   // 33\n                                                                                                                       //\n\t\t\tfilter.isPublic = true;                                                                                             // 34\n\t\t}                                                                                                                    // 35\n                                                                                                                       //\n\t\treturn ProblemTests.find(filter, option);                                                                            // 36\n\t});                                                                                                                   // 37\n\tMeteor.publish('ProblemTests.findOne', function (id) {                                                                // 38\n\t\tvar filter = {                                                                                                       // 39\n\t\t\t_id: id                                                                                                             // 39\n\t\t};                                                                                                                   // 39\n\t\tvar option = {};                                                                                                     // 40\n                                                                                                                       //\n\t\tif (!Meteor.isAdmin()) {                                                                                             // 42\n\t\t\tvar problemId = Meteor.getValue(ProblemTests, id, 'problemId');                                                     // 43\n                                                                                                                       //\n\t\t\tif (!Meteor.getValue(Problems, problemId, 'isPublic')) {                                                            // 45\n\t\t\t\tfilter._id = null;                                                                                                 // 46\n\t\t\t}                                                                                                                   // 47\n                                                                                                                       //\n\t\t\tfilter.isPublic = true;                                                                                             // 48\n\t\t}                                                                                                                    // 49\n                                                                                                                       //\n\t\treturn ProblemTests.find(filter, option);                                                                            // 50\n\t});                                                                                                                   // 51\n}                                                                                                                      // 52\n                                                                                                                       //\nMeteor.methods({                                                                                                       // 54\n\t'Problems.insert': function () {                                                                                      // 55\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 56\n\t\tProblems.insert({                                                                                                    // 58\n\t\t\ttitle: 'Sample Title',                                                                                              // 59\n\t\t\tdescription: 'Sample Description',                                                                                  // 60\n\t\t\tinputFormat: 'Sample Input Format',                                                                                 // 61\n\t\t\toutputFormat: 'Sample Output Format',                                                                               // 62\n\t\t\thint: 'Sample Hint',                                                                                                // 63\n\t\t\tisExam: false,                                                                                                      // 64\n\t\t\tisPublic: false                                                                                                     // 65\n\t\t});                                                                                                                  // 58\n\t},                                                                                                                    // 67\n\t'Problems.remove': function (filter) {                                                                                // 68\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 69\n\t\tProblems.find(filter).forEach(function (problem) {                                                                   // 71\n\t\t\tMeteor.call('ProblemTests.remove', {                                                                                // 72\n\t\t\t\tproblemId: problem._id                                                                                             // 72\n\t\t\t});                                                                                                                 // 72\n\t\t\tMeteor.call('Submissions.remove', {                                                                                 // 73\n\t\t\t\tproblemId: problem._id                                                                                             // 73\n\t\t\t});                                                                                                                 // 73\n\t\t});                                                                                                                  // 74\n\t\tProblems.remove(filter);                                                                                             // 75\n\t},                                                                                                                    // 76\n\t'Problems.update': function (id, option) {                                                                            // 77\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 78\n\t\tProblems.update({                                                                                                    // 80\n\t\t\t_id: id                                                                                                             // 80\n\t\t}, {                                                                                                                 // 80\n\t\t\t$set: option                                                                                                        // 80\n\t\t});                                                                                                                  // 80\n\t},                                                                                                                    // 81\n\t'ProblemTests.insert': function (problemId) {                                                                         // 82\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 83\n\t\tvar problemTestId = ProblemTests.insert({                                                                            // 85\n\t\t\tproblemId: problemId,                                                                                               // 86\n\t\t\tinput: 'Sample Input',                                                                                              // 87\n\t\t\toutput: 'Sample Output',                                                                                            // 88\n\t\t\ttimeLimit: 1000,                                                                                                    // 89\n\t\t\tmemoryLimit: 64000,                                                                                                 // 90\n\t\t\tscore: 5,                                                                                                           // 91\n\t\t\tisPublic: false                                                                                                     // 92\n\t\t});                                                                                                                  // 85\n                                                                                                                       //\n\t\tif (Meteor.isServer) {                                                                                               // 94\n\t\t\tMeteor.call('ProblemTests.createDir', problemTestId);                                                               // 95\n\t\t}                                                                                                                    // 96\n\t},                                                                                                                    // 97\n\t'ProblemTests.remove': function (filter) {                                                                            // 98\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 99\n\t\tProblemTests.find(filter).forEach(function (problemTest) {                                                           // 101\n\t\t\tMeteor.call('SubmissionResults.remove', {                                                                           // 102\n\t\t\t\tproblemTestId: problemTest._id                                                                                     // 102\n\t\t\t});                                                                                                                 // 102\n                                                                                                                       //\n\t\t\tif (Meteor.isServer) {                                                                                              // 104\n\t\t\t\tMeteor.call('ProblemTests.removeDir', problemTest._id);                                                            // 105\n\t\t\t}                                                                                                                   // 106\n\t\t});                                                                                                                  // 107\n\t\tProblemTests.remove(filter);                                                                                         // 108\n\t},                                                                                                                    // 109\n\t'ProblemTests.update': function (id, option) {                                                                        // 110\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 111\n\t\tProblemTests.update({                                                                                                // 113\n\t\t\t_id: id                                                                                                             // 113\n\t\t}, {                                                                                                                 // 113\n\t\t\t$set: option                                                                                                        // 113\n\t\t});                                                                                                                  // 113\n                                                                                                                       //\n\t\tif (Meteor.isServer) {                                                                                               // 115\n\t\t\tif (option.input) Meteor.call('ProblemTests.writeFile', id, 'input', option.input);                                 // 116\n\t\t\tif (option.output) Meteor.call('ProblemTests.writeFile', id, 'output', option.output);                              // 117\n                                                                                                                       //\n\t\t\tif (option.score) {                                                                                                 // 118\n\t\t\t\tSubmissionResults.find({                                                                                           // 119\n\t\t\t\t\tproblemTestId: id                                                                                                 // 119\n\t\t\t\t}).forEach(function (submissionResult) {                                                                           // 119\n\t\t\t\t\tMeteor.call('Submissions.getResult', submissionResult.submissionId);                                              // 120\n\t\t\t\t});                                                                                                                // 121\n\t\t\t}                                                                                                                   // 122\n\t\t}                                                                                                                    // 123\n\t}                                                                                                                     // 124\n});                                                                                                                    // 54\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"student.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/student.js                                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({                                                                                                        // 1\n\tStudents: function () {                                                                                               // 1\n\t\treturn Students;                                                                                                     // 1\n\t}                                                                                                                     // 1\n});                                                                                                                    // 1\nvar Random = void 0;                                                                                                   // 1\nmodule.watch(require(\"meteor/random\"), {                                                                               // 1\n\tRandom: function (v) {                                                                                                // 1\n\t\tRandom = v;                                                                                                          // 1\n\t}                                                                                                                     // 1\n}, 0);                                                                                                                 // 1\nmodule.watch(require(\"./utility.js\"));                                                                                 // 1\nvar Students = Meteor.users;                                                                                           // 4\n                                                                                                                       //\nif (Meteor.isServer) {                                                                                                 // 6\n\tMeteor.publish('Students.findAll', function () {                                                                      // 7\n\t\tvar filter = {};                                                                                                     // 8\n\t\tvar option = {                                                                                                       // 9\n\t\t\tfields: {                                                                                                           // 9\n\t\t\t\t_id: 1,                                                                                                            // 9\n\t\t\t\tusername: 1,                                                                                                       // 9\n\t\t\t\tisAdmin: 1                                                                                                         // 9\n\t\t\t}                                                                                                                   // 9\n\t\t};                                                                                                                   // 9\n\t\treturn Students.find(filter, option);                                                                                // 11\n\t});                                                                                                                   // 12\n\tMeteor.publish('Students.findOne', function (id) {                                                                    // 13\n\t\tvar filter = {                                                                                                       // 14\n\t\t\t_id: id                                                                                                             // 14\n\t\t};                                                                                                                   // 14\n\t\tvar option = {                                                                                                       // 15\n\t\t\tfields: {                                                                                                           // 15\n\t\t\t\t_id: 1,                                                                                                            // 15\n\t\t\t\tusername: 1,                                                                                                       // 15\n\t\t\t\tfullname: 1,                                                                                                       // 15\n\t\t\t\temails: 1,                                                                                                         // 15\n\t\t\t\tyear: 1,                                                                                                           // 15\n\t\t\t\tisAdmin: 1                                                                                                         // 15\n\t\t\t}                                                                                                                   // 15\n\t\t};                                                                                                                   // 15\n\t\treturn Students.find(filter, option);                                                                                // 17\n\t});                                                                                                                   // 18\n}                                                                                                                      // 19\n                                                                                                                       //\nMeteor.methods({                                                                                                       // 21\n\t'Students.insert': function () {                                                                                      // 22\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 23\n\t\tAccounts.createUser({                                                                                                // 25\n\t\t\tusername: 'Sample Username',                                                                                        // 26\n\t\t\tfullname: 'Sample Fullname',                                                                                        // 27\n\t\t\tpassword: Random.id(),                                                                                              // 28\n\t\t\temail: 'dsca@inrg.csie.ntu.edu.tw',                                                                                 // 29\n\t\t\tyear: new Date().getFullYear(),                                                                                     // 30\n\t\t\tisAdmin: false                                                                                                      // 31\n\t\t});                                                                                                                  // 25\n\t},                                                                                                                    // 33\n\t'Students.remove': function (filter) {                                                                                // 34\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 35\n\t\tStudents.find(filter).forEach(function (student) {                                                                   // 37\n\t\t\tMeteor.call('Submissions.remove', {                                                                                 // 38\n\t\t\t\tstudentId: student._id                                                                                             // 38\n\t\t\t});                                                                                                                 // 38\n\t\t});                                                                                                                  // 39\n\t\tStudents.remove(filter);                                                                                             // 40\n\t},                                                                                                                    // 41\n\t'Students.update': function (id, option) {                                                                            // 42\n\t\tif (!Meteor.isAdmin() || !Meteor.isServer) return;                                                                   // 43\n                                                                                                                       //\n\t\tif (option.username) {                                                                                               // 45\n\t\t\tAccounts.setUsername(id, option.username);                                                                          // 46\n\t\t\tdelete option.username;                                                                                             // 47\n\t\t}                                                                                                                    // 48\n                                                                                                                       //\n\t\tif (option.password) {                                                                                               // 49\n\t\t\tAccounts.setPassword(id, option.password);                                                                          // 50\n\t\t\tdelete option.password;                                                                                             // 51\n\t\t}                                                                                                                    // 52\n                                                                                                                       //\n\t\tif (option.email) {                                                                                                  // 53\n\t\t\tStudents.update({                                                                                                   // 54\n\t\t\t\t_id: id                                                                                                            // 54\n\t\t\t}, {                                                                                                                // 54\n\t\t\t\t$set: {                                                                                                            // 54\n\t\t\t\t\temails: []                                                                                                        // 54\n\t\t\t\t}                                                                                                                  // 54\n\t\t\t});                                                                                                                 // 54\n\t\t\tAccounts.addEmail(id, option.email);                                                                                // 55\n\t\t\tdelete option.email;                                                                                                // 56\n\t\t}                                                                                                                    // 57\n                                                                                                                       //\n\t\tif (!_.isEmpty(option)) {                                                                                            // 58\n\t\t\tStudents.update({                                                                                                   // 59\n\t\t\t\t_id: id                                                                                                            // 59\n\t\t\t}, {                                                                                                                // 59\n\t\t\t\t$set: option                                                                                                       // 59\n\t\t\t});                                                                                                                 // 59\n\t\t}                                                                                                                    // 60\n\t},                                                                                                                    // 61\n\t'Students.changePassword': function (oldPassword, newPassword) {                                                      // 62\n\t\tif (!Meteor.isServer) return;                                                                                        // 63\n\t\tMeteor.call('changePassword', oldPassword, newPassword);                                                             // 65\n\t}                                                                                                                     // 66\n});                                                                                                                    // 21\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"submission.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/submission.js                                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({                                                                                                        // 1\n\tSubmissions: function () {                                                                                            // 1\n\t\treturn Submissions;                                                                                                  // 1\n\t},                                                                                                                    // 1\n\tSubmissionResults: function () {                                                                                      // 1\n\t\treturn SubmissionResults;                                                                                            // 1\n\t}                                                                                                                     // 1\n});                                                                                                                    // 1\nvar Problems = void 0,                                                                                                 // 1\n    ProblemTests = void 0;                                                                                             // 1\nmodule.watch(require(\"./problem.js\"), {                                                                                // 1\n\tProblems: function (v) {                                                                                              // 1\n\t\tProblems = v;                                                                                                        // 1\n\t},                                                                                                                    // 1\n\tProblemTests: function (v) {                                                                                          // 1\n\t\tProblemTests = v;                                                                                                    // 1\n\t}                                                                                                                     // 1\n}, 0);                                                                                                                 // 1\nmodule.watch(require(\"./utility.js\"));                                                                                 // 1\nvar Submissions = new Mongo.Collection('Submissions');                                                                 // 4\nvar SubmissionResults = new Mongo.Collection('SubmissionResults');                                                     // 5\n                                                                                                                       //\nif (Meteor.isServer) {                                                                                                 // 7\n\tMeteor.publish('Submissions.findAllByFilter', function (problemId, studentId) {                                       // 8\n\t\tvar filter = {                                                                                                       // 9\n\t\t\t$or: [{                                                                                                             // 9\n\t\t\t\tproblemId: problemId                                                                                               // 9\n\t\t\t}, {                                                                                                                // 9\n\t\t\t\tstudentId: studentId,                                                                                              // 9\n\t\t\t\tstudentId: studentId                                                                                               // 9\n\t\t\t}]                                                                                                                  // 9\n\t\t};                                                                                                                   // 9\n\t\tvar option = {                                                                                                       // 10\n\t\t\tfields: {                                                                                                           // 10\n\t\t\t\t_id: 1,                                                                                                            // 10\n\t\t\t\tproblemId: 1,                                                                                                      // 10\n\t\t\t\tstudentId: 1,                                                                                                      // 10\n\t\t\t\tcreatedAt: 1,                                                                                                      // 10\n\t\t\t\tstatus: 1,                                                                                                         // 10\n\t\t\t\tscore: 1,                                                                                                          // 10\n\t\t\t\tisExam: 1                                                                                                          // 10\n\t\t\t}                                                                                                                   // 10\n\t\t};                                                                                                                   // 10\n\t\treturn Submissions.find(filter, option);                                                                             // 12\n\t});                                                                                                                   // 13\n\tMeteor.publish('Submissions.findOne', function (id) {                                                                 // 14\n\t\tvar filter = {                                                                                                       // 15\n\t\t\t_id: id                                                                                                             // 15\n\t\t};                                                                                                                   // 15\n\t\tvar option = {};                                                                                                     // 16\n                                                                                                                       //\n\t\tif (!Meteor.isAdmin() && !Meteor.isOwner(Meteor.getValue(Submissions, id, 'studentId'))) {                           // 18\n\t\t\toption.fields = {                                                                                                   // 19\n\t\t\t\tcode: 0                                                                                                            // 19\n\t\t\t};                                                                                                                  // 19\n\t\t}                                                                                                                    // 20\n                                                                                                                       //\n\t\treturn Submissions.find(filter, option);                                                                             // 21\n\t});                                                                                                                   // 22\n\tMeteor.publish('SubmissionResults.findAllBySubmission', function (submissionId) {                                     // 23\n\t\tvar filter = {                                                                                                       // 24\n\t\t\tsubmissionId: submissionId                                                                                          // 24\n\t\t};                                                                                                                   // 24\n\t\tvar option = {};                                                                                                     // 25\n\t\treturn SubmissionResults.find(filter, option);                                                                       // 27\n\t});                                                                                                                   // 28\n}                                                                                                                      // 29\n                                                                                                                       //\nMeteor.methods({                                                                                                       // 31\n\t'Submissions.insert': function (problemId, studentId, lang, code) {                                                   // 32\n\t\tif (!Meteor.isAdmin() && (!Meteor.isOwner(studentId) || !Meteor.getValue(Problems, problemId, 'isPublic'))) return;  // 33\n\t\tvar submissionId = Submissions.insert({                                                                              // 35\n\t\t\tproblemId: problemId,                                                                                               // 36\n\t\t\tstudentId: studentId,                                                                                               // 37\n\t\t\tcreatedAt: new Date().getTime(),                                                                                    // 38\n\t\t\tstatus: 'Pending',                                                                                                  // 39\n\t\t\tscore: 0,                                                                                                           // 40\n\t\t\tlang: lang,                                                                                                         // 41\n\t\t\tcode: code,                                                                                                         // 42\n\t\t\tisExam: Meteor.getValue(Problems, problemId, 'isExam')                                                              // 43\n\t\t});                                                                                                                  // 35\n                                                                                                                       //\n\t\tif (Meteor.isServer) {                                                                                               // 45\n\t\t\tMeteor.call('Submissions.createDir', submissionId);                                                                 // 46\n\t\t}                                                                                                                    // 47\n\t},                                                                                                                    // 48\n\t'Submissions.remove': function (filter) {                                                                             // 49\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 50\n                                                                                                                       //\n\t\tif (Meteor.isServer) {                                                                                               // 52\n\t\t\tSubmissions.find(filter).forEach(function (submission) {                                                            // 53\n\t\t\t\tMeteor.call('SubmissionResults.remove', {                                                                          // 54\n\t\t\t\t\tsubmissionId: submission._id                                                                                      // 54\n\t\t\t\t});                                                                                                                // 54\n\t\t\t\tMeteor.call('Submissions.removeDir', submission._id);                                                              // 55\n\t\t\t});                                                                                                                 // 56\n\t\t}                                                                                                                    // 57\n                                                                                                                       //\n\t\tSubmissions.remove(filter);                                                                                          // 58\n\t},                                                                                                                    // 59\n\t'Submissions.update': function (id, option) {                                                                         // 60\n\t\tif (!Meteor.isAdmin()) return;                                                                                       // 61\n\t\tSubmissions.update({                                                                                                 // 63\n\t\t\t_id: id                                                                                                             // 63\n\t\t}, {                                                                                                                 // 63\n\t\t\t$set: option                                                                                                        // 63\n\t\t});                                                                                                                  // 63\n                                                                                                                       //\n\t\tif (Meteor.isServer) {                                                                                               // 65\n\t\t\tMeteor.call('SubmissionResults.remove', {                                                                           // 66\n\t\t\t\tsubmissionId: id                                                                                                   // 66\n\t\t\t});                                                                                                                 // 66\n\t\t\tMeteor.call('Submissions.createDir', id);                                                                           // 67\n\t\t}                                                                                                                    // 68\n\t}                                                                                                                     // 69\n});                                                                                                                    // 31\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"utility.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/utility.js                                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nMeteor.getValue = function (collection, id, field) {                                                                   // 1\n\tvar _fields;                                                                                                          // 1\n                                                                                                                       //\n\tvar doc = collection.findOne({                                                                                        // 2\n\t\t_id: id                                                                                                              // 2\n\t}, {                                                                                                                  // 2\n\t\tfields: (_fields = {}, _fields[field] = 1, _fields)                                                                  // 2\n\t});                                                                                                                   // 2\n\treturn doc ? doc[field] : null;                                                                                       // 3\n};                                                                                                                     // 4\n                                                                                                                       //\nMeteor.isAdmin = function () {                                                                                         // 6\n\tvar user = Meteor.user();                                                                                             // 7\n\treturn user && user.isAdmin;                                                                                          // 8\n};                                                                                                                     // 9\n                                                                                                                       //\nMeteor.isOwner = function (id) {                                                                                       // 11\n\tvar user = Meteor.user();                                                                                             // 12\n\treturn user && user._id == id;                                                                                        // 13\n};                                                                                                                     // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"template.main.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/template.main.js                                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.body.addContent((function() {                                                                                 // 2\n  var view = this;                                                                                                     // 3\n  return [ HTML.UL({                                                                                                   // 4\n    class: \"nav nav-pills bg-secondary\",                                                                               // 5\n    style: \"min-width:1200px\"                                                                                          // 6\n  }, \"\\n\\t\\t\", HTML.Raw('<li class=\"nav-item\"><a class=\"nav-link text-white\"><strong>DSCA Judge</strong></a></li>'), \"\\n  \\t\\t\", HTML.Raw('<li class=\"nav-item\"><a class=\"nav-link text-white\" data-toggle=\"pill\" href=\"#problem_main_tpl\">Problems</a></li>'), \"\\n\\t\\t\", HTML.Raw('<li class=\"nav-item\"><a class=\"nav-link text-white\" data-toggle=\"pill\" href=\"#student_main_tpl\">Students</a></li>'), \"\\n\\t\\t\", HTML.LI({\n    class: \"nav-item ml-auto text-white\"                                                                               // 8\n  }, \"\\n\\t\\t\", Blaze.If(function() {                                                                                   // 9\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                 // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n\\t\\t\\t\", HTML.FORM({                                                                                   // 12\n      class: \"form-inline logout-form\"                                                                                 // 13\n    }, \"\\n\\t\\t\\t\\t\", HTML.STRONG({                                                                                     // 14\n      class: \"mr-2\"                                                                                                    // 15\n    }, \"Hi,\", Blaze.View(\"lookup:currentUser.fullname\", function() {                                                   // 16\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentUser\"), \"fullname\"));                                // 17\n    })), \"\\n\\t\\t\\t\\t\", HTML.BUTTON({                                                                                   // 18\n      class: \"btn btn-warning\"                                                                                         // 19\n    }, \"Logout\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];                                                                             // 20\n  }, function() {                                                                                                      // 21\n    return [ \"\\n\\t\\t\\t\", HTML.FORM({                                                                                   // 22\n      class: \"form-inline login-form\"                                                                                  // 23\n    }, \"\\n\\t\\t\\t\\t\", HTML.INPUT({                                                                                      // 24\n      type: \"text\",                                                                                                    // 25\n      class: \"form-control\",                                                                                           // 26\n      name: \"username\",                                                                                                // 27\n      placeholder: \"Username\",                                                                                         // 28\n      style: \"width:150px\"                                                                                             // 29\n    }), \"\\n\\t\\t\\t\\t\", HTML.INPUT({                                                                                     // 30\n      type: \"password\",                                                                                                // 31\n      class: \"form-control\",                                                                                           // 32\n      name: \"password\",                                                                                                // 33\n      placeholder: \"Password\",                                                                                         // 34\n      style: \"width:150px\"                                                                                             // 35\n    }), \"\\n\\t\\t\\t\\t\", HTML.BUTTON({                                                                                    // 36\n      class: \"btn btn-primary\"                                                                                         // 37\n    }, \"Login\"), \"\\n  \\t\\t\\t\"), \"\\n  \\t\\t\" ];                                                                          // 38\n  }), \"\\n  \\t\\t\"), \"\\n\\t\"), \"\\n\\t\", HTML.DIV({                                                                         // 39\n    class: \"tab-content\",                                                                                              // 40\n    style: \"min-width:1200px; overflow-x:hidden\"                                                                       // 41\n  }, \"\\n\\t\\t\", HTML.DIV({                                                                                              // 42\n    class: \"tab-pane\",                                                                                                 // 43\n    id: \"problem_main_tpl\"                                                                                             // 44\n  }, Spacebars.include(view.lookupTemplate(\"problem_main\"))), \"\\n\\t\\t\", HTML.DIV({                                     // 45\n    class: \"tab-pane\",                                                                                                 // 46\n    id: \"student_main_tpl\"                                                                                             // 47\n  }, Spacebars.include(view.lookupTemplate(\"student_main\"))), \"\\n\\t\") ];                                               // 48\n}));                                                                                                                   // 49\nMeteor.startup(Template.body.renderToDocument);                                                                        // 50\n                                                                                                                       // 51\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/main.js                                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _this2 = this;                                                                                                     //\n                                                                                                                       //\nmodule.watch(require(\"/imports/ui/problem/main.js\"));                                                                  // 1\nmodule.watch(require(\"/imports/ui/student/main.js\"));                                                                  // 1\nMeteorMathJax.sourceUrl = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML';\nTemplate.registerHelper(\"momentReactive\", function (date) {                                                            // 6\n\treturn momentReactive(date);                                                                                          // 6\n});                                                                                                                    // 6\nTemplate.body.onCreated(function () {                                                                                  // 8\n\tvar _this = this;                                                                                                     // 8\n                                                                                                                       //\n\tthis.autorun(function () {                                                                                            // 9\n\t\treturn _this.subscribe('Students.findOne', Meteor.userId());                                                         // 9\n\t});                                                                                                                   // 9\n});                                                                                                                    // 10\nTemplate.body.onRendered(function () {                                                                                 // 12\n\t_this2.$('.nav-link')[1].click();                                                                                     // 13\n});                                                                                                                    // 14\nTemplate.body.events({                                                                                                 // 16\n\t'submit .login-form': function (event) {                                                                              // 17\n\t\tvar target = event.currentTarget;                                                                                    // 18\n\t\tvar username = target.username.value;                                                                                // 19\n\t\tvar password = target.password.value;                                                                                // 20\n\t\tevent.preventDefault();                                                                                              // 22\n\t\tMeteor.loginWithPassword(username, password);                                                                        // 23\n\t},                                                                                                                    // 24\n\t'submit .logout-form': function (event) {                                                                             // 25\n\t\tevent.preventDefault();                                                                                              // 26\n\t\tMeteor.logout();                                                                                                     // 27\n\t}                                                                                                                     // 28\n});                                                                                                                    // 16\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/problem/detail.js","imports/ui/problem/list.js","imports/ui/problem/test.js","imports/ui/problem/upload.js","imports/ui/problem/main.js","imports/ui/student/detail.js","imports/ui/student/list.js","imports/ui/student/main.js","imports/ui/submission/detail.js","imports/ui/submission/list.js","imports/ui/submission/main.js","imports/api/problem.js","imports/api/student.js","imports/api/submission.js","imports/api/utility.js","client/main.js"],"names":["Problems","module","watch","require","v","Template","problem_detail","onCreated","autorun","subscribe","data","currentProblemId","get","onRendered","$","hide","helpers","currentProblem","problem","findOne","_id","undefined","set","events","event","instance","target","currentTarget","toggle","dataset","field","name","value","show","Meteor","call","isAdmin","focus","checked","problem_list","problemList","find","fields","title","isExam","isPublic","sort","id","ProblemTests","problem_test","currentProblemTestId","ReactiveVar","problemTestList","problemId","currentProblemTest","problemTest","problem_upload","lang","code","preventDefault","userId","problem_main","click","shareArgs","Students","student_detail","currentStudentId","currentStudent","student","oldPassword","newPassword","student_list","studentList","username","student_main","Submissions","SubmissionResults","submission_detail","currentSubmissionId","currentSubmission","submission","modal","submissionResultList","submissionId","problemTestId","submission_list","studentId","submissionList","filter","$or","createdAt","status","submission_main","getProblemTitle","getValue","getStudentUsername","getStatusClass","export","Mongo","Collection","isServer","publish","option","methods","insert","description","inputFormat","outputFormat","hint","forEach","remove","update","$set","input","output","timeLimit","memoryLimit","score","submissionResult","Random","users","fullname","emails","year","Accounts","createUser","password","email","Date","getFullYear","setUsername","setPassword","addEmail","_","isEmpty","isOwner","getTime","collection","doc","user","MeteorMathJax","sourceUrl","registerHelper","date","momentReactive","body","loginWithPassword","logout"],"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","file":"/app.js","sourcesContent":["import { Problems } from '/imports/api/problem.js';\r\nimport './detail.html';\r\n\r\nTemplate.problem_detail.onCreated(function() {\r\n\tthis.autorun(() => this.subscribe('Problems.findOne', this.data.currentProblemId.get()));\r\n});\r\n\r\nTemplate.problem_detail.onRendered(function() {\r\n\tthis.$('[class*=edit]').hide();\r\n});\r\n\r\nTemplate.problem_detail.helpers({\r\n\tcurrentProblem() {\r\n\t\tconst problem = Problems.findOne({ _id: this.currentProblemId.get() });\r\n\r\n\t\tif (problem == undefined) {\r\n\t\t\tthis.currentProblemId.set(null);\r\n\t\t}\r\n\t\treturn problem;\r\n\t}\r\n});\r\n\r\nTemplate.problem_detail.events({\r\n\t'blur [class*=edit]'(event, instance) {\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst toggle = target.dataset.toggle;\r\n\t\tconst field = target.name;\r\n\t\tconst value = target.value;\r\n\r\n\t\tinstance.$(target).hide();\r\n\t\tinstance.$(toggle).show();\r\n\t\t\r\n\t\tMeteor.call('Problems.update', this.currentProblemId.get(), { [field]: value });\r\n\t},\r\n\t'click [class*=view]'(event, instance) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\t\t\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst toggle = target.dataset.toggle;\r\n\r\n\t\tinstance.$(target).hide();\r\n\t\tinstance.$(toggle).show().focus();\r\n\t},\r\n\t'click [type=checkbox]'(event) {\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst field = target.name;\r\n\t\tconst value = target.checked;\r\n\r\n\t\tMeteor.call('Problems.update', this.currentProblemId.get(), { [field]: value });\r\n\t}\r\n});","import { Problems } from '/imports/api/problem.js';\r\nimport './list.html';\r\n\r\nTemplate.problem_list.onCreated(function() {\r\n\tthis.subscribe('Problems.findAll');\r\n});\r\n\r\nTemplate.problem_list.helpers({\r\n\tproblemList() {\r\n\t\treturn Problems.find({}, { fields: { _id: 1, title: 1, isExam: 1, isPublic: 1 }, sort: { title: 1 }});\r\n\t}\r\n});\r\n\r\nTemplate.problem_list.events({\r\n\t'click .insert-btn'() {\r\n\t\tMeteor.call('Problems.insert');\r\n\t},\r\n\t'click .remove-btn'(event) {\r\n\t\tconst id = event.currentTarget.dataset.id;\r\n\t\tMeteor.call('Problems.remove', { _id: id });\r\n\t},\r\n\t'click .get-btn'(event) {\r\n\t\tconst id = event.currentTarget.dataset.id;\r\n\t\tthis.currentProblemId.set(id);\r\n\t}\r\n});","import { ProblemTests } from '/imports/api/problem.js';\r\nimport './test.html';\r\n\r\nTemplate.problem_test.onCreated(function() {\r\n\tthis.currentProblemTestId = new ReactiveVar();\r\n\tthis.autorun(() => this.subscribe('ProblemTests.findOne', this.currentProblemTestId.get()));\r\n\tthis.autorun(() => this.subscribe('ProblemTests.findAllByProblem', this.data.currentProblemId.get()));\r\n});\r\n\r\nTemplate.problem_test.onRendered(function() {\r\n\tthis.$('[class*=edit]').hide();\r\n});\r\n\r\nTemplate.problem_test.helpers({\r\n\tproblemTestList() {\r\n\t\treturn ProblemTests.find({ problemId: this.currentProblemId.get() }, { fields: { _id: 1, isPublic: 1 }, sort: { _id: 1 }});\r\n\t},\r\n\tcurrentProblemTest() {\r\n\t\tconst problemTest = ProblemTests.findOne({ _id: Template.instance().currentProblemTestId.get(), problemId: this.currentProblemId.get() });\r\n\t\t\r\n\t\tif (problemTest == undefined) {\r\n\t\t\tTemplate.instance().currentProblemTestId.set(null);\r\n\t\t}\r\n\t\treturn problemTest;\r\n\t}\r\n});\r\n\r\nTemplate.problem_test.events({\r\n\t'click .insert-btn'() {\r\n\t\tMeteor.call('ProblemTests.insert', this.currentProblemId.get());\r\n\t},\r\n\t'click .remove-btn'(event) {\r\n\t\tconst id = event.currentTarget.dataset.id;\r\n\t\tMeteor.call('ProblemTests.remove', { _id: id });\r\n\t},\r\n\t'click .get-btn'(event, instance) {\r\n\t\tconst id = event.currentTarget.dataset.id;\r\n\t\tinstance.currentProblemTestId.set(id);\r\n\t},\r\n\t'blur [class*=edit]'(event, instance) {\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst toggle = target.dataset.toggle;\r\n\t\tconst field = target.name;\r\n\t\tconst value = target.value;\r\n\r\n\t\tinstance.$(target).hide();\r\n\t\tinstance.$(toggle).show();\r\n\t\t\r\n\t\tMeteor.call('ProblemTests.update', instance.currentProblemTestId.get(), { [field]: value });\r\n\t},\r\n\t'click [class*=view]'(event, instance) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\t\t\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst toggle = target.dataset.toggle;\r\n\r\n\t\tinstance.$(target).hide();\r\n\t\tinstance.$(toggle).show().focus();\r\n\t},\r\n\t'click [type=checkbox]'(event, instance) {\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst field = target.name;\r\n\t\tconst value = target.checked;\r\n\r\n\t\tMeteor.call('ProblemTests.update', instance.currentProblemTestId.get(), { [field]: value });\r\n\t}\r\n});","import './upload.html';\r\n\r\nTemplate.problem_upload.events({\r\n\t'submit .upload-form'(event) {\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst lang = target.lang.value;\r\n\t\tconst code = target.code.value;\r\n\r\n\t\ttarget.code.value = null;\r\n\t\tevent.preventDefault();\r\n\t\tMeteor.call('Submissions.insert', this.currentProblemId.get(), Meteor.userId(), lang, code);\r\n\t}\r\n});\r\n\r\n","import './list.js';\r\nimport './detail.js';\r\nimport './test.js';\r\nimport './upload.js';\r\nimport '../submission/main.js';\r\nimport './main.html';\r\n\r\nTemplate.problem_main.onCreated(function() {\r\n\tthis.currentProblemId = new ReactiveVar();\r\n});\r\n\r\nTemplate.problem_main.onRendered(function() {\r\n\tthis.$('.nav-link')[0].click();\r\n});\r\n\r\nTemplate.problem_main.helpers({\r\n\tshareArgs() {\r\n\t\treturn { currentProblemId: Template.instance().currentProblemId };\r\n\t}\r\n});","import { Students } from '/imports/api/student.js';\nimport './detail.html';\n\nTemplate.student_detail.onCreated(function() {\n\tthis.autorun(() => this.subscribe('Students.findOne', this.data.currentStudentId.get()));\n});\n\nTemplate.student_detail.onRendered(function() {\n\tthis.$('[class*=edit]').hide();\n});\n\nTemplate.student_detail.helpers({\n\tcurrentStudent() {\n\t\tconst student = Students.findOne({ _id: this.currentStudentId.get() });\n\n\t\tif (student == undefined) {\n\t\t\tthis.currentStudentId.set(null);\n\t\t}\n\t\treturn student;\n\t}\n});\n\nTemplate.student_detail.events({\n\t'blur [class*=edit]'(event, instance) {\n\t\tconst target = event.currentTarget;\n\t\tconst toggle = target.dataset.toggle;\n\t\tconst field = target.name;\n\t\tconst value = target.value;\n\t\t\n\t\tinstance.$(target).hide();\n\t\tinstance.$(toggle).show();\n\t\t\n\t\tMeteor.call('Students.update', this.currentStudentId.get(), { [field]: value });\n\t},\n\t'click [class*=view]'(event, instance) {\n\t\tif (!Meteor.isAdmin()) return;\n\t\t\n\t\tconst target = event.currentTarget;\n\t\tconst toggle = target.dataset.toggle;\n\n\t\tinstance.$(target).hide();\n\t\tinstance.$(toggle).show().focus();\n\t},\n\t'click [type=checkbox]'(event) {\n\t\tconst target = event.currentTarget;\n\t\tconst field = target.name;\n\t\tconst value = target.checked;\n\n\t\tMeteor.call('Students.update', this.currentStudentId.get(), { [field]: value });\n\t},\n\t'submit .chgpwd-form'(event) {\n\t\tconst target = event.currentTarget;\n\t\tconst oldPassword = target.oldPassword.value;\n\t\tconst newPassword = target.newPassword.value;\n\n\t\tevent.preventDefault();\n\t\tMeteor.call('Students.changePassword', oldPassword, newPassword);\n\t}\n});\n","import { Students } from '/imports/api/student.js';\nimport './list.html';\n\nTemplate.student_list.onCreated(function() {\n\tthis.subscribe('Students.findAll');\n});\n\nTemplate.student_list.helpers({\n\tstudentList() {\n\t\treturn Students.find({}, { fields: { _id: 1, username: 1, isAdmin: 1 }, sort: { username: 1 }});\n\t}\n});\n\nTemplate.student_list.events({\n\t'click .insert-btn'() {\n\t\tMeteor.call('Students.insert');\n\t},\n\t'click .remove-btn'(event) {\n\t\tconst id = event.currentTarget.dataset.id;\n\t\tMeteor.call('Students.remove', { _id: id });\n\t},\n\t'click .get-btn'(event) {\n\t\tconst id = event.currentTarget.dataset.id;\n\t\tthis.currentStudentId.set(id);\n\t}\n});","import './list.js';\nimport './detail.js';\nimport '../submission/main.js';\nimport './main.html';\n\nTemplate.student_main.onCreated(function() {\n\tthis.currentStudentId = new ReactiveVar();\n});\n\nTemplate.student_main.onRendered(function() {\n\tthis.$('.nav-link')[0].click();\n});\n\nTemplate.student_main.helpers({\n\tshareArgs() {\n\t\treturn { currentStudentId: Template.instance().currentStudentId };\n\t}\n});","import { Submissions, SubmissionResults } from '/imports/api/submission.js';\nimport './detail.html';\n\nTemplate.submission_detail.onCreated(function() {\n\tthis.autorun(() => {\n\t\tthis.subscribe('Submissions.findOne', this.data.currentSubmissionId.get());\n\t\tthis.subscribe('SubmissionResults.findAllBySubmission', this.data.currentSubmissionId.get());\n\t});\n});\n\nTemplate.submission_detail.onRendered(function() {\n\tthis.$('.nav-link')[0].click();\n\tthis.$('[class*=edit]').hide();\n});\n\nTemplate.submission_detail.helpers({\n\tcurrentSubmission() {\n\t\tconst submission = Submissions.findOne({ _id: this.currentSubmissionId.get() });\n\n\t\tif (submission == undefined) {\n\t\t\tthis.currentSubmissionId.set(null);\n\t\t} else {\n\t\t\tTemplate.instance().$('.detail-modal').modal();\n\t\t}\n\t\treturn submission;\n\t},\n\tsubmissionResultList() {\n\t\treturn SubmissionResults.find({ submissionId: this.currentSubmissionId.get() }, { sort: { problemTestId: 1 }});\n\t}\n});\n\nTemplate.submission_detail.events({\n\t'blur [class*=edit]'(event, instance) {\n\t\tconst target = event.currentTarget;\n\t\tconst toggle = target.dataset.toggle;\n\t\tconst field = target.name;\n\t\tconst value = target.value;\n\n\t\tinstance.$(target).hide();\n\t\tinstance.$(toggle).show();\n\t\t\n\t\tMeteor.call('Submissions.update', this.currentSubmissionId.get(), { [field]: value });\n\t},\n\t'click [class*=view]'(event, instance) {\n\t\tif (!Meteor.isAdmin()) return;\n\t\t\n\t\tconst target = event.currentTarget;\n\t\tconst toggle = target.dataset.toggle;\n\n\t\tinstance.$(target).hide();\n\t\tinstance.$(toggle).show().focus();\n\t},\n\t'click [type=checkbox]'(event) {\n\t\tconst target = event.currentTarget;\n\t\tconst field = target.name;\n\t\tconst value = target.checked;\n\n\t\tMeteor.call('Submissions.update', this.currentSubmissionId.get(), { [field]: value });\n\t},\n\t'click [type=radio]'(event) {\n\t\tconst target = event.currentTarget;\n\t\tconst field = target.name;\n\t\tconst value = target.value;\n\n\t\tMeteor.call('Submissions.update', this.currentSubmissionId.get(), { [field]: value });\t\n\t},\n\t'hidden.bs.modal .detail-modal'() {\n\t\tthis.currentSubmissionId.set(null);\n\t}\n});","import { Submissions } from '/imports/api/submission.js';\r\nimport './list.html';\r\n\r\nTemplate.submission_list.onCreated(function() {\r\n\tthis.autorun(() => {\r\n\t\tconst problemId = this.data.currentProblemId ? this.data.currentProblemId.get() : null;\r\n\t\tconst studentId = this.data.currentStudentId ? this.data.currentStudentId.get() : null;\r\n\t\tthis.subscribe('Submissions.findAllByFilter', problemId, studentId);\r\n\t});\r\n});\r\n\r\nTemplate.submission_list.helpers({\r\n\tsubmissionList() {\r\n\t\tconst problemId = this.currentProblemId ? this.currentProblemId.get() : null;\r\n\t\tconst studentId = this.currentStudentId ? this.currentStudentId.get() : null;\r\n\t\tconst filter = { $or: [{ problemId: problemId }, { studentId: studentId }]};\r\n\t\treturn Submissions.find(filter, { fields: { _id: 1, problemId: 1, studentId: 1, createdAt: 1, status: 1, isExam: 1 }, sort: { createdAt: -1 }});\r\n\t}\r\n});\r\n\r\nTemplate.submission_list.events({\r\n\t'click .remove-btn'(event) {\r\n\t\tconst id = event.currentTarget.dataset.id;\r\n\t\tMeteor.call('Submissions.remove', { _id: id });\r\n\t},\r\n\t'click .get-btn'(event) {\r\n\t\tconst id = event.currentTarget.dataset.id;\r\n\t\tthis.currentSubmissionId.set(id);\r\n\t}\r\n});","import { Problems } from '/imports/api/problem.js';\nimport { Students } from '/imports/api/student.js';\nimport './list.js';\nimport './detail.js';\nimport './main.html';\n\nTemplate.submission_main.onCreated(function() {\n\tthis.currentSubmissionId = new ReactiveVar();\n});\n\nTemplate.submission_main.helpers({\n\tshareArgs() {\n\t\treturn {\n\t\t\tcurrentProblemId: this.currentProblemId,\n\t\t\tcurrentStudentId: this.currentStudentId,\n\t\t\tcurrentSubmissionId: Template.instance().currentSubmissionId,\n\t\t\tgetProblemTitle(problemId) {\n\t\t\t\treturn Meteor.getValue(Problems, problemId, 'title');\n\t\t\t},\n\t\t\tgetStudentUsername(studentId) {\n\t\t\t\treturn Meteor.getValue(Students, studentId, 'username');\n\t\t\t},\n\t\t\tgetStatusClass(status) {\n\t\t\t\tswitch(status) {\n\t\t\t\t\tcase 'Accepted':      return 'text-success';\n\t\t\t\t\tcase 'Compile Error': return 'text-warning';\n\t\t\t\t\tcase 'Pending':\n\t\t\t\t\tcase 'Initializing':\n\t\t\t\t\tcase 'Compiling':\n\t\t\t\t\tcase 'Running':\n\t\t\t\t\tcase 'Judging':       return 'text-info';\n\t\t\t\t\tdefault:              return 'text-danger';\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});","import { SubmissionResults } from './submission.js';\r\nimport './utility.js';\r\n\r\nexport const Problems = new Mongo.Collection('Problems');\r\nexport const ProblemTests = new Mongo.Collection('ProblemTests');\r\n\r\nif (Meteor.isServer) {\r\n\tMeteor.publish('Problems.findAll', function() {\r\n\t\tconst filter = {};\r\n\t\tconst option = { fields: { _id: 1, title: 1, isExam: 1, isPublic: 1 }};\r\n\r\n\t\tif (!Meteor.isAdmin()) {\r\n\t\t\tfilter.isPublic = true;\r\n\t\t}\r\n\t\treturn Problems.find(filter, option);\r\n\t});\r\n\tMeteor.publish('Problems.findOne', function(id) {\r\n\t\tconst filter = { _id: id };\r\n\t\tconst option = {};\r\n\r\n\t\tif (!Meteor.isAdmin()) {\r\n\t\t\tfilter.isPublic = true;\r\n\t\t}\r\n\t\treturn Problems.find(filter, option);\r\n\t});\r\n\tMeteor.publish('ProblemTests.findAllByProblem', function(problemId) {\r\n\t\tconst filter = { problemId: problemId };\r\n\t\tconst option = { fields: { _id: 1, problemId: 1, isPublic: 1 }};\r\n\r\n\t\tif (!Meteor.isAdmin()) {\r\n\t\t\tif (!Meteor.getValue(Problems, problemId, 'isPublic')) {\r\n\t\t\t\tfilter.problemId = null;\r\n\t\t\t}\r\n\t\t\tfilter.isPublic = true;\r\n\t\t}\r\n\t\treturn ProblemTests.find(filter, option);\r\n\t});\r\n\tMeteor.publish('ProblemTests.findOne', function(id) {\r\n\t\tconst filter = { _id: id };\r\n\t\tconst option = {};\r\n\r\n\t\tif (!Meteor.isAdmin()) {\r\n\t\t\tconst problemId = Meteor.getValue(ProblemTests, id, 'problemId');\r\n\r\n\t\t\tif (!Meteor.getValue(Problems, problemId, 'isPublic')) {\r\n\t\t\t\tfilter._id = null;\r\n\t\t\t}\r\n\t\t\tfilter.isPublic = true;\r\n\t\t}\r\n\t\treturn ProblemTests.find(filter, option);\r\n\t});\r\n}\r\n\r\nMeteor.methods({\r\n\t'Problems.insert'() {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblems.insert({\r\n\t\t\ttitle: 'Sample Title',\r\n\t\t\tdescription: 'Sample Description',\r\n\t\t\tinputFormat: 'Sample Input Format',\r\n\t\t\toutputFormat: 'Sample Output Format',\r\n\t\t\thint: 'Sample Hint',\r\n\t\t\tisExam: false,\r\n\t\t\tisPublic: false\r\n\t\t});\r\n\t},\r\n\t'Problems.remove'(filter) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblems.find(filter).forEach((problem) => {\r\n\t\t\tMeteor.call('ProblemTests.remove', { problemId: problem._id });\r\n\t\t\tMeteor.call('Submissions.remove', { problemId: problem._id });\t\r\n\t\t});\r\n\t\tProblems.remove(filter);\r\n\t},\r\n\t'Problems.update'(id, option) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblems.update({ _id: id }, { $set: option });\r\n\t},\r\n\t'ProblemTests.insert'(problemId) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tconst problemTestId = ProblemTests.insert({\r\n\t\t\tproblemId: problemId,\r\n\t\t\tinput: 'Sample Input',\r\n\t\t\toutput: 'Sample Output',\r\n\t\t\ttimeLimit: 1000,\r\n\t\t\tmemoryLimit: 64000,\r\n\t\t\tscore: 5,\r\n\t\t\tisPublic: false\r\n\t\t});\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tMeteor.call('ProblemTests.createDir', problemTestId);\r\n\t\t}\r\n\t},\r\n\t'ProblemTests.remove'(filter) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblemTests.find(filter).forEach((problemTest) => {\r\n\t\t\tMeteor.call('SubmissionResults.remove', { problemTestId: problemTest._id });\r\n\r\n\t\t\tif (Meteor.isServer) {\r\n\t\t\t\tMeteor.call('ProblemTests.removeDir', problemTest._id);\r\n\t\t\t}\r\n\t\t});\r\n\t\tProblemTests.remove(filter);\r\n\t},\r\n\t'ProblemTests.update'(id, option) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tProblemTests.update({ _id: id }, { $set: option });\r\n\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tif (option.input) Meteor.call('ProblemTests.writeFile', id, 'input', option.input);\r\n\t\t\tif (option.output) Meteor.call('ProblemTests.writeFile', id, 'output', option.output);\r\n\t\t\tif (option.score) {\r\n\t\t\t\tSubmissionResults.find({ problemTestId: id }).forEach((submissionResult) => {\r\n\t\t\t\t\tMeteor.call('Submissions.getResult', submissionResult.submissionId);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});","import { Random } from 'meteor/random';\nimport './utility.js';\n\nexport const Students = Meteor.users;\n\nif (Meteor.isServer) {\n\tMeteor.publish('Students.findAll', function() {\n\t\tconst filter = {};\n\t\tconst option = { fields: { _id: 1, username: 1, isAdmin: 1 }};\n\n\t\treturn Students.find(filter, option);\n\t});\n\tMeteor.publish('Students.findOne', function(id) {\n\t\tconst filter = { _id: id };\n\t\tconst option = { fields: { _id: 1, username: 1, fullname: 1, emails: 1, year: 1, isAdmin: 1 }};\n\n\t\treturn Students.find(filter, option);\n\t});\n}\n\nMeteor.methods({\n\t'Students.insert'() {\n\t\tif (!Meteor.isAdmin()) return;\n\n\t\tAccounts.createUser({\n\t\t\tusername: 'Sample Username',\n\t\t\tfullname: 'Sample Fullname',\n\t\t\tpassword: Random.id(),\n\t\t\temail: 'dsca@inrg.csie.ntu.edu.tw',\t\n\t\t\tyear: new Date().getFullYear(),\n\t\t\tisAdmin: false\n\t\t});\n\t},\n\t'Students.remove'(filter) {\n\t\tif (!Meteor.isAdmin()) return;\n\n\t\tStudents.find(filter).forEach((student) => {\n\t\t\tMeteor.call('Submissions.remove', { studentId: student._id });\n\t\t});\n\t\tStudents.remove(filter);\n\t},\n\t'Students.update'(id, option) {\n\t\tif (!Meteor.isAdmin() || !Meteor.isServer) return;\n\n\t\tif (option.username) {\n\t\t\tAccounts.setUsername(id, option.username);\n\t\t\tdelete option.username;\n\t\t}\n\t\tif (option.password) {\n\t\t\tAccounts.setPassword(id, option.password);\n\t\t\tdelete option.password;\n\t\t}\n\t\tif (option.email) {\n\t\t\tStudents.update({ _id: id }, { $set: { emails: [] }});\n\t\t\tAccounts.addEmail(id, option.email);\n\t\t\tdelete option.email;\n\t\t}\n\t\tif (!_.isEmpty(option)) {\n\t\t\tStudents.update({ _id: id }, { $set: option });\n\t\t}\n\t},\n\t'Students.changePassword'(oldPassword, newPassword) {\n\t\tif (!Meteor.isServer) return;\n\n\t\tMeteor.call('changePassword', oldPassword, newPassword);\n\t}\n});","import { Problems, ProblemTests } from './problem.js';\r\nimport './utility.js';\r\n\r\nexport const Submissions = new Mongo.Collection('Submissions');\r\nexport const SubmissionResults = new Mongo.Collection('SubmissionResults');\r\n\r\nif (Meteor.isServer) {\r\n\tMeteor.publish('Submissions.findAllByFilter', function(problemId, studentId) {\r\n\t\tconst filter = { $or: [{ problemId: problemId }, { studentId, studentId }]};\r\n\t\tconst option = { fields: { _id: 1, problemId: 1, studentId: 1, createdAt: 1, status: 1, score: 1, isExam: 1 }};\r\n\r\n\t\treturn Submissions.find(filter, option);\r\n\t});\r\n\tMeteor.publish('Submissions.findOne', function(id) {\r\n\t\tconst filter = { _id: id };\r\n\t\tconst option = {};\r\n\r\n\t\tif (!Meteor.isAdmin() && !Meteor.isOwner(Meteor.getValue(Submissions, id, 'studentId'))) {\r\n\t\t\toption.fields = { code: 0 };\r\n\t\t}\r\n\t\treturn Submissions.find(filter, option);\r\n\t});\r\n\tMeteor.publish('SubmissionResults.findAllBySubmission', function(submissionId) {\r\n\t\tconst filter = { submissionId: submissionId };\r\n\t\tconst option = {};\r\n\r\n\t\treturn SubmissionResults.find(filter, option);\r\n\t});\r\n}\r\n\r\nMeteor.methods({\r\n\t'Submissions.insert'(problemId, studentId, lang, code) {\r\n\t\tif (!Meteor.isAdmin() && (!Meteor.isOwner(studentId) || !Meteor.getValue(Problems, problemId, 'isPublic'))) return;\r\n\t\t\r\n\t\tconst submissionId = Submissions.insert({\r\n\t\t\tproblemId: problemId,\r\n\t\t\tstudentId: studentId,\r\n\t\t\tcreatedAt: new Date().getTime(),\r\n\t\t\tstatus: 'Pending',\r\n\t\t\tscore: 0,\r\n\t\t\tlang: lang,\r\n\t\t\tcode: code,\r\n\t\t\tisExam: Meteor.getValue(Problems, problemId, 'isExam')\r\n\t\t});\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tMeteor.call('Submissions.createDir', submissionId);\r\n\t\t}\r\n\t},\r\n\t'Submissions.remove'(filter) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tSubmissions.find(filter).forEach((submission) => {\r\n\t\t\t\tMeteor.call('SubmissionResults.remove', { submissionId: submission._id });\r\n\t\t\t\tMeteor.call('Submissions.removeDir', submission._id);\r\n\t\t\t});\r\n\t\t}\r\n\t\tSubmissions.remove(filter);\r\n\t},\r\n\t'Submissions.update'(id, option) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\r\n\t\tSubmissions.update({ _id: id }, { $set: option });\r\n\r\n\t\tif (Meteor.isServer) {\r\n\t\t\tMeteor.call('SubmissionResults.remove', { submissionId: id });\r\n\t\t\tMeteor.call('Submissions.createDir', id);\r\n\t\t}\r\n\t}\r\n});","Meteor.getValue = function(collection, id, field) {\n\tconst doc = collection.findOne({ _id: id }, { fields: { [field]: 1 }});\n\treturn doc ? doc[field] : null;\n}\n\nMeteor.isAdmin = function() {\n\tconst user = Meteor.user();\n\treturn user && user.isAdmin;\n}\n\nMeteor.isOwner = function(id) {\n\tconst user = Meteor.user();\n\treturn user && user._id == id;\n}","import '/imports/ui/problem/main.js';\nimport '/imports/ui/student/main.js';\n\nMeteorMathJax.sourceUrl = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML';\n\nTemplate.registerHelper(\"momentReactive\", (date) => momentReactive(date));\n\nTemplate.body.onCreated(function() {\n\tthis.autorun(() => this.subscribe('Students.findOne', Meteor.userId()));\n});\n\nTemplate.body.onRendered(() => {\n\tthis.$('.nav-link')[1].click();\n});\n\nTemplate.body.events({\n\t'submit .login-form'(event) {\n\t\tconst target = event.currentTarget;\n\t\tconst username = target.username.value;\n\t\tconst password = target.password.value;\n\n\t\tevent.preventDefault();\n\t\tMeteor.loginWithPassword(username, password);\n\t},\n\t'submit .logout-form'(event) {\n\t\tevent.preventDefault();\n\t\tMeteor.logout();\n\t}\n});"]}}]