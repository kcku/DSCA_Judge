{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/imports/api/problem.js","imported":["Problems"],"specifiers":[{"kind":"named","imported":"Problems","local":"Problems"}]},{"source":"/imports/api/student.js","imported":["Students"],"specifiers":[{"kind":"named","imported":"Students","local":"Students"}]},{"source":"/imports/api/submission.js","imported":["Submissions"],"specifiers":[{"kind":"named","imported":"Submissions","local":"Submissions"}]},{"source":"./list.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/submission/list.js","filenameRelative":"imports/ui/submission/list.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/submission/list.js.map","sourceFileName":"imports/ui/submission/list.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"list"},"ignored":false,"code":"var Problems = void 0;\nmodule.watch(require(\"/imports/api/problem.js\"), {\n\tProblems: function (v) {\n\t\tProblems = v;\n\t}\n}, 0);\nvar Students = void 0;\nmodule.watch(require(\"/imports/api/student.js\"), {\n\tStudents: function (v) {\n\t\tStudents = v;\n\t}\n}, 1);\nvar Submissions = void 0;\nmodule.watch(require(\"/imports/api/submission.js\"), {\n\tSubmissions: function (v) {\n\t\tSubmissions = v;\n\t}\n}, 2);\nmodule.watch(require(\"./list.html\"));\nTemplate.submission_list.onCreated(function () {\n\tvar _this = this;\n\n\tthis.autorun(function () {\n\t\tvar problemId = _this.data.currentProblemId ? _this.data.currentProblemId.get() : null;\n\t\tvar studentId = _this.data.currentStudentId ? _this.data.currentStudentId.get() : null;\n\n\t\t_this.subscribe('Submissions.findAllByFilter', problemId, studentId);\n\t});\n});\nTemplate.submission_list.helpers({\n\tsubmissionList: function () {\n\t\tvar problemId = this.currentProblemId ? this.currentProblemId.get() : null;\n\t\tvar studentId = this.currentStudentId ? this.currentStudentId.get() : null;\n\t\tvar filter = {\n\t\t\t$or: [{\n\t\t\t\tproblemId: problemId\n\t\t\t}, {\n\t\t\t\tstudentId: studentId\n\t\t\t}]\n\t\t};\n\t\treturn Submissions.find(filter, {\n\t\t\tfields: {\n\t\t\t\t_id: 1,\n\t\t\t\tproblemId: 1,\n\t\t\t\tstudentId: 1,\n\t\t\t\tcreatedAt: 1,\n\t\t\t\tstatus: 1,\n\t\t\t\tisExam: 1\n\t\t\t},\n\t\t\tsort: {\n\t\t\t\tcreatedAt: -1\n\t\t\t}\n\t\t});\n\t},\n\tgetStudentUsername: function (studentId) {\n\t\treturn Meteor.getValue(Students, studentId, 'username');\n\t},\n\tgetProblemTitle: function (problemId) {\n\t\treturn Meteor.getValue(Problems, problemId, 'title');\n\t}\n});\nTemplate.submission_list.events({\n\t'click .remove-btn': function (event) {\n\t\tvar id = event.currentTarget.dataset.id;\n\t\tMeteor.call('Submissions.remove', {\n\t\t\t_id: id\n\t\t});\n\t},\n\t'click .get-btn': function (event) {\n\t\tvar id = event.currentTarget.dataset.id;\n\t\tthis.currentSubmissionId.set(id);\n\t}\n});","map":{"version":3,"sources":["imports/ui/submission/list.js"],"names":["Problems","module","watch","require","v","Students","Submissions","Template","submission_list","onCreated","autorun","problemId","data","currentProblemId","get","studentId","currentStudentId","subscribe","helpers","submissionList","filter","$or","find","fields","_id","createdAt","status","isExam","sort","getStudentUsername","Meteor","getValue","getProblemTitle","events","event","id","currentTarget","dataset","call","currentSubmissionId","set"],"mappings":"AAAA,IAAIA,iBAAJ;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAACH,SAAD,YAAUI,CAAV,EAAY;AAACJ,aAASI,CAAT;AAAW;AAAxB,CAAhD,EAA0E,CAA1E;AAA6E,IAAIC,iBAAJ;AAAaJ,OAAOC,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAACE,SAAD,YAAUD,CAAV,EAAY;AAACC,aAASD,CAAT;AAAW;AAAxB,CAAhD,EAA0E,CAA1E;AAA6E,IAAIE,oBAAJ;AAAgBL,OAAOC,KAAP,CAAaC,QAAQ,4BAAR,CAAb,EAAmD;AAACG,YAAD,YAAaF,CAAb,EAAe;AAACE,gBAAYF,CAAZ;AAAc;AAA9B,CAAnD,EAAmF,CAAnF;AAAsFH,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb;AAK1RI,SAASC,eAAT,CAAyBC,SAAzB,CAAmC,YAAW;AAAA;;AAC7C,MAAKC,OAAL,CAAa,YAAM;AAClB,MAAMC,YAAY,MAAKC,IAAL,CAAUC,gBAAV,GAA6B,MAAKD,IAAL,CAAUC,gBAAV,CAA2BC,GAA3B,EAA7B,GAAgE,IAAlF;AACA,MAAMC,YAAY,MAAKH,IAAL,CAAUI,gBAAV,GAA6B,MAAKJ,IAAL,CAAUI,gBAAV,CAA2BF,GAA3B,EAA7B,GAAgE,IAAlF;;AACA,QAAKG,SAAL,CAAe,6BAAf,EAA8CN,SAA9C,EAAyDI,SAAzD;AACA,EAJD;AAKA,CAND;AAQAR,SAASC,eAAT,CAAyBU,OAAzB,CAAiC;AAChCC,eADgC,cACf;AAChB,MAAMR,YAAY,KAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,GAAtB,EAAxB,GAAsD,IAAxE;AACA,MAAMC,YAAY,KAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,GAAtB,EAAxB,GAAsD,IAAxE;AACA,MAAMM,SAAS;AAAEC,QAAK,CAAC;AAAEV,eAAWA;AAAb,IAAD,EAA2B;AAAEI,eAAWA;AAAb,IAA3B;AAAP,GAAf;AACA,SAAOT,YAAYgB,IAAZ,CAAiBF,MAAjB,EAAyB;AAAEG,WAAQ;AAAEC,SAAK,CAAP;AAAUb,eAAW,CAArB;AAAwBI,eAAW,CAAnC;AAAsCU,eAAW,CAAjD;AAAoDC,YAAQ,CAA5D;AAA+DC,YAAQ;AAAvE,IAAV;AAAsFC,SAAM;AAAEH,eAAW,CAAC;AAAd;AAA5F,GAAzB,CAAP;AACA,EAN+B;AAOhCI,mBAPgC,YAObd,SAPa,EAOF;AAC7B,SAAOe,OAAOC,QAAP,CAAgB1B,QAAhB,EAA0BU,SAA1B,EAAqC,UAArC,CAAP;AACA,EAT+B;AAUhCiB,gBAVgC,YAUhBrB,SAVgB,EAUL;AAC1B,SAAOmB,OAAOC,QAAP,CAAgB/B,QAAhB,EAA0BW,SAA1B,EAAqC,OAArC,CAAP;AACA;AAZ+B,CAAjC;AAeAJ,SAASC,eAAT,CAAyByB,MAAzB,CAAgC;AAC/B,oBAD+B,YACXC,KADW,EACJ;AAC1B,MAAMC,KAAKD,MAAME,aAAN,CAAoBC,OAApB,CAA4BF,EAAvC;AACAL,SAAOQ,IAAP,CAAY,oBAAZ,EAAkC;AAAEd,QAAKW;AAAP,GAAlC;AACA,EAJ8B;AAK/B,iBAL+B,YAKdD,KALc,EAKP;AACvB,MAAMC,KAAKD,MAAME,aAAN,CAAoBC,OAApB,CAA4BF,EAAvC;AACA,OAAKI,mBAAL,CAAyBC,GAAzB,CAA6BL,EAA7B;AACA;AAR8B,CAAhC","file":"imports/ui/submission/list.js.map","sourcesContent":["import { Problems } from '/imports/api/problem.js';\r\nimport { Students } from '/imports/api/student.js';\r\nimport { Submissions } from '/imports/api/submission.js';\r\nimport './list.html';\r\n\r\nTemplate.submission_list.onCreated(function() {\r\n\tthis.autorun(() => {\r\n\t\tconst problemId = this.data.currentProblemId ? this.data.currentProblemId.get() : null;\r\n\t\tconst studentId = this.data.currentStudentId ? this.data.currentStudentId.get() : null;\r\n\t\tthis.subscribe('Submissions.findAllByFilter', problemId, studentId);\r\n\t});\r\n});\r\n\r\nTemplate.submission_list.helpers({\r\n\tsubmissionList() {\r\n\t\tconst problemId = this.currentProblemId ? this.currentProblemId.get() : null;\r\n\t\tconst studentId = this.currentStudentId ? this.currentStudentId.get() : null;\r\n\t\tconst filter = { $or: [{ problemId: problemId }, { studentId: studentId }]};\r\n\t\treturn Submissions.find(filter, { fields: { _id: 1, problemId: 1, studentId: 1, createdAt: 1, status: 1, isExam: 1 }, sort: { createdAt: -1 }});\r\n\t},\r\n\tgetStudentUsername(studentId) {\r\n\t\treturn Meteor.getValue(Students, studentId, 'username');\r\n\t},\r\n\tgetProblemTitle(problemId) {\r\n\t\treturn Meteor.getValue(Problems, problemId, 'title');\r\n\t}\r\n});\r\n\r\nTemplate.submission_list.events({\r\n\t'click .remove-btn'(event) {\r\n\t\tconst id = event.currentTarget.dataset.id;\r\n\t\tMeteor.call('Submissions.remove', { _id: id });\r\n\t},\r\n\t'click .get-btn'(event) {\r\n\t\tconst id = event.currentTarget.dataset.id;\r\n\t\tthis.currentSubmissionId.set(id);\r\n\t}\r\n});"]},"hash":"fedf66b4fb55f8fc7a1c125ca08359982fa7f490"}
