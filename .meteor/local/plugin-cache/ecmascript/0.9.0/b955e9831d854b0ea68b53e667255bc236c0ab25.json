{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/imports/api/problem.js","imported":["Problems"],"specifiers":[{"kind":"named","imported":"Problems","local":"Problems"}]},{"source":"/imports/api/student.js","imported":["Students"],"specifiers":[{"kind":"named","imported":"Students","local":"Students"}]},{"source":"/imports/api/submission.js","imported":["Submissions"],"specifiers":[{"kind":"named","imported":"Submissions","local":"Submissions"}]},{"source":"./list.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/submission/list.js","filenameRelative":"imports/ui/submission/list.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/submission/list.js.map","sourceFileName":"imports/ui/submission/list.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"list"},"ignored":false,"code":"var Problems = void 0;\nmodule.watch(require(\"/imports/api/problem.js\"), {\n\tProblems: function (v) {\n\t\tProblems = v;\n\t}\n}, 0);\nvar Students = void 0;\nmodule.watch(require(\"/imports/api/student.js\"), {\n\tStudents: function (v) {\n\t\tStudents = v;\n\t}\n}, 1);\nvar Submissions = void 0;\nmodule.watch(require(\"/imports/api/submission.js\"), {\n\tSubmissions: function (v) {\n\t\tSubmissions = v;\n\t}\n}, 2);\nmodule.watch(require(\"./list.html\"));\nTracker.autorun(function () {\n\tfunction omitNull(obj) {\n\t\tvar ret = {};\n\n\t\tfor (var key in meteorBabelHelpers.sanitizeForInObject(obj._items)) {\n\t\t\tif (obj._items[key]) ret[key] = obj._items[key];\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treturn omitNull;\n}());\nTemplate.submission_list.onCreated(function () {\n\tvar _this = this;\n\n\tthis.currentFilter = new ReactiveObject({\n\t\tproblemId: null,\n\t\tstudentId: null\n\t});\n\tthis.autorun(function () {\n\t\tif (_this.data.currentProblemId && _this.data.currentProblemId.get()) {\n\t\t\t_this.currentFilter.problemId = _this.data.currentProblemId.get();\n\t\t} else {\n\t\t\t_this.currentFilter.problemId = null;\n\t\t}\n\n\t\tif (_this.data.currentStudentId && _this.data.currentStudentId.get()) {\n\t\t\t_this.currentFilter.studentId = _this.data.currentStudentId.get();\n\t\t} else {\n\t\t\t_this.currentFilter.studentId = null;\n\t\t}\n\n\t\tconsole.log(omitNull(_this.currentFilter));\n\n\t\t_this.subscribe('Submissions.findAllByFilter', omitNull(_this.currentFilter));\n\t});\n});\nTemplate.submission_list.helpers({\n\thasFilter: function () {\n\t\tvar currentFilter = omitNull(Template.instance().currentFilter);\n\t\treturn !_.isEmpty(currentFilter);\n\t},\n\tsubmissionList: function () {\n\t\tvar currentFilter = omitNull(Template.instance().currentFilter);\n\t\tconsole.log(currentFilter);\n\t\treturn Submissions.find(currentFilter, {\n\t\t\tfields: {\n\t\t\t\t_id: 1,\n\t\t\t\tproblemId: 1,\n\t\t\t\tstudentId: 1,\n\t\t\t\tcreatedAt: 1,\n\t\t\t\tstatus: 1,\n\t\t\t\tisExam: 1\n\t\t\t},\n\t\t\tsort: {\n\t\t\t\tcreatedAt: -1\n\t\t\t}\n\t\t});\n\t},\n\tgetStudentUsername: function (studentId) {\n\t\treturn Meteor.getValue(Students, studentId, 'username');\n\t},\n\tgetProblemTitle: function (problemId) {\n\t\treturn Meteor.getValue(Problems, problemId, 'title');\n\t}\n});\nTemplate.submission_list.events({\n\t'click .remove-btn': function (event) {\n\t\tvar id = event.currentTarget.parentElement.dataset.id;\n\t\tMeteor.call('Submissions.remove', {\n\t\t\t_id: id\n\t\t});\n\t},\n\t'click .update-btn': function (event) {\n\t\tMeteor.call('Submissions.update', id, {});\n\t},\n\t'click .get-btn': function (event) {\n\t\tvar id = event.currentTarget.dataset.id;\n\t\tthis.currentSubmissionId.set(id);\n\t}\n});","map":{"version":3,"sources":["imports/ui/submission/list.js"],"names":["Problems","module","watch","require","v","Students","Submissions","Tracker","autorun","omitNull","obj","ret","key","_items","Template","submission_list","onCreated","currentFilter","ReactiveObject","problemId","studentId","data","currentProblemId","get","currentStudentId","console","log","subscribe","helpers","hasFilter","instance","_","isEmpty","submissionList","find","fields","_id","createdAt","status","isExam","sort","getStudentUsername","Meteor","getValue","getProblemTitle","events","event","id","currentTarget","parentElement","dataset","call","currentSubmissionId","set"],"mappings":"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","file":"imports/ui/submission/list.js.map","sourcesContent":["import { Problems } from '/imports/api/problem.js';\r\nimport { Students } from '/imports/api/student.js';\r\nimport { Submissions } from '/imports/api/submission.js';\r\nimport './list.html';\r\n\r\nTracker.autorun(function omitNull(obj) {\r\n\tconst ret = {};\r\n\r\n\tfor (let key in obj._items) {\r\n\t\tif (obj._items[key])\r\n\t\t\tret[key] = obj._items[key];\r\n\t}\r\n\treturn ret;\r\n});\r\nTemplate.submission_list.onCreated(function() {\r\n\tthis.currentFilter = new ReactiveObject({ problemId: null, studentId: null });\r\n\r\n\tthis.autorun(() => {\r\n\t\tif (this.data.currentProblemId && this.data.currentProblemId.get()) {\r\n\t\t\tthis.currentFilter.problemId = this.data.currentProblemId.get();\r\n\t\t} else {\r\n\t\t\tthis.currentFilter.problemId = null;\r\n\t\t}\r\n\t\tif (this.data.currentStudentId && this.data.currentStudentId.get()) {\r\n\t\t\tthis.currentFilter.studentId = this.data.currentStudentId.get();\r\n\t\t} else {\r\n\t\t\tthis.currentFilter.studentId = null;\r\n\t\t}\r\n\t\tconsole.log(omitNull(this.currentFilter));\r\n\t\tthis.subscribe('Submissions.findAllByFilter', omitNull(this.currentFilter));\r\n\t});\r\n});\r\n\r\nTemplate.submission_list.helpers({\r\n\thasFilter() {\r\n\t\tconst currentFilter = omitNull(Template.instance().currentFilter);\r\n\t\treturn !_.isEmpty(currentFilter);\r\n\t},\r\n\tsubmissionList() {\r\n\t\tconst currentFilter = omitNull(Template.instance().currentFilter);\r\n\t\tconsole.log(currentFilter);\r\n\t\treturn Submissions.find(currentFilter, { fields: { _id: 1, problemId: 1, studentId: 1, createdAt: 1, status: 1, isExam: 1 }, sort: { createdAt: -1 }});\r\n\t},\r\n\tgetStudentUsername(studentId) {\r\n\t\treturn Meteor.getValue(Students, studentId, 'username');\r\n\t},\r\n\tgetProblemTitle(problemId) {\r\n\t\treturn Meteor.getValue(Problems, problemId, 'title');\r\n\t}\r\n});\r\n\r\nTemplate.submission_list.events({\r\n\t'click .remove-btn'(event) {\r\n\t\tconst id = event.currentTarget.parentElement.dataset.id;\r\n\t\tMeteor.call('Submissions.remove', { _id: id });\r\n\t},\r\n\t'click .update-btn'(event) {\r\n\t\tMeteor.call('Submissions.update', id, {});\r\n\t},\r\n\t'click .get-btn'(event) {\r\n\t\tconst id = event.currentTarget.dataset.id;\r\n\t\tthis.currentSubmissionId.set(id);\r\n\t}\r\n});"]},"hash":"b955e9831d854b0ea68b53e667255bc236c0ab25"}
