{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/imports/api/_problem.js","imported":[],"specifiers":[]},{"source":"/imports/api/_student.js","imported":[],"specifiers":[]},{"source":"/imports/api/_submission.js","imported":[],"specifiers":[]},{"source":"/imports/api/problem.js","imported":[],"specifiers":[]},{"source":"/imports/api/student.js","imported":[],"specifiers":[]},{"source":"/imports/api/submission.js","imported":[],"specifiers":[]},{"source":"path","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"path"}]},{"source":"fs","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"fs"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"server/main.js","filenameRelative":"server/main.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"server/main.js.map","sourceFileName":"server/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"main"},"ignored":false,"code":"module.watch(require(\"/imports/api/_problem.js\"));\nmodule.watch(require(\"/imports/api/_student.js\"));\nmodule.watch(require(\"/imports/api/_submission.js\"));\nmodule.watch(require(\"/imports/api/problem.js\"));\nmodule.watch(require(\"/imports/api/student.js\"));\nmodule.watch(require(\"/imports/api/submission.js\"));\nlet path;\nmodule.watch(require(\"path\"), {\n\tdefault(v) {\n\t\tpath = v;\n\t}\n\n}, 0);\nlet fs;\nmodule.watch(require(\"fs\"), {\n\tdefault(v) {\n\t\tfs = v;\n\t}\n\n}, 1);\nMeteor.rootPath = path.resolve('.').split(path.sep + '.meteor')[0] + '/';\nMeteor.dataPath = Meteor.rootPath + '../DSCA_Data/'; /*Accounts.createUser({\n                                                     \tusername: 'R04922075',\n                                                     \tfullname: 'kcku',\n                                                     \tpassword: '123456',\n                                                     \temail: 'r04922075@csie.ntu.edu.tw',\n                                                     \tyear: 2016,\n                                                     \tisAdmin: true\n                                                     });#include <cstdio>\n                                                     int main() {\n                                                         char line[100];\n                                                         scanf(\"%s\", line);\n                                                         printf(\"%s\", line);\n                                                     }\n                                                     #include <cstdio>\n                                                     int main() {\n                                                         char line[100];\n                                                         gets(line);\n                                                         puts(line);\n                                                     }*/ //const fs = require('fs');\n\n//const file = fs.readFileSync('../studentlist', 'utf-8');\nconst file = Meteor.wrapAsync(fs.readFile)(Meteor.rootPath + '../studentlist', 'utf-8');\nconst json = file.split('\\n');\nconsole.log(json.length);\n\nfor (let i = 0; i < json.length - 1; i++) {\n\tconst value = JSON.parse(json[i].trim());\n\tconst student = {\n\t\tusername: value.user,\n\t\tfullname: value.name,\n\t\tpassword: value.pass,\n\t\tisAdmin: value.admin,\n\t\temail: value.email,\n\t\tyear: value.year\n\t};\n\tconsole.log(student); //Accounts.createUser(student);\n}","map":{"version":3,"sources":["server/main.js"],"names":["module","watch","require","path","default","v","fs","Meteor","rootPath","resolve","split","sep","dataPath","file","wrapAsync","readFile","json","console","log","length","i","value","JSON","parse","trim","student","username","user","fullname","name","password","pass","isAdmin","admin","email","year"],"mappings":"AAAAA,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb;AAAkDF,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb;AAAkDF,OAAOC,KAAP,CAAaC,QAAQ,6BAAR,CAAb;AAAqDF,OAAOC,KAAP,CAAaC,QAAQ,yBAAR,CAAb;AAAiDF,OAAOC,KAAP,CAAaC,QAAQ,yBAAR,CAAb;AAAiDF,OAAOC,KAAP,CAAaC,QAAQ,4BAAR,CAAb;AAAoD,IAAIC,IAAJ;AAASH,OAAOC,KAAP,CAAaC,QAAQ,MAAR,CAAb,EAA6B;AAACE,SAAQC,CAAR,EAAU;AAACF,SAAKE,CAAL;AAAO;;AAAnB,CAA7B,EAAkD,CAAlD;AAAqD,IAAIC,EAAJ;AAAON,OAAOC,KAAP,CAAaC,QAAQ,IAAR,CAAb,EAA2B;AAACE,SAAQC,CAAR,EAAU;AAACC,OAAGD,CAAH;AAAK;;AAAjB,CAA3B,EAA8C,CAA9C;AAQpXE,OAAOC,QAAP,GAAkBL,KAAKM,OAAL,CAAa,GAAb,EAAkBC,KAAlB,CAAwBP,KAAKQ,GAAL,GAAW,SAAnC,EAA8C,CAA9C,IAAiD,GAAnE;AACAJ,OAAOK,QAAP,GAAkBL,OAAOC,QAAP,GAAgB,eAAlC,C,CAEA;;;;;;;;;;;;;;;;;;yDAoBA;;AAEA;AACA,MAAMK,OAAON,OAAOO,SAAP,CAAiBR,GAAGS,QAApB,EAA8BR,OAAOC,QAAP,GAAgB,gBAA9C,EAAgE,OAAhE,CAAb;AACA,MAAMQ,OAAOH,KAAKH,KAAL,CAAW,IAAX,CAAb;AAA+BO,QAAQC,GAAR,CAAYF,KAAKG,MAAjB;;AAC/B,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,KAAKG,MAAL,GAAY,CAAhC,EAAmCC,GAAnC,EAAwC;AACvC,OAAMC,QAAQC,KAAKC,KAAL,CAAWP,KAAKI,CAAL,EAAQI,IAAR,EAAX,CAAd;AACA,OAAMC,UAAU;AACfC,YAAUL,MAAMM,IADD;AAEfC,YAAUP,MAAMQ,IAFD;AAGfC,YAAUT,MAAMU,IAHD;AAIfC,WAASX,MAAMY,KAJA;AAKfC,SAAOb,MAAMa,KALE;AAMfC,QAAMd,MAAMc;AANG,EAAhB;AAQAlB,SAAQC,GAAR,CAAYO,OAAZ,EAVuC,CAWvC;AACA","file":"server/main.js.map","sourcesContent":["import '/imports/api/_problem.js';\nimport '/imports/api/_student.js';\nimport '/imports/api/_submission.js';\nimport '/imports/api/problem.js';\nimport '/imports/api/student.js';\nimport '/imports/api/submission.js';\nimport path from 'path';\n\nMeteor.rootPath = path.resolve('.').split(path.sep + '.meteor')[0]+'/';\nMeteor.dataPath = Meteor.rootPath+'../DSCA_Data/';\n\n/*Accounts.createUser({\n\tusername: 'R04922075',\n\tfullname: 'kcku',\n\tpassword: '123456',\n\temail: 'r04922075@csie.ntu.edu.tw',\n\tyear: 2016,\n\tisAdmin: true\n});#include <cstdio>\nint main() {\n    char line[100];\n    scanf(\"%s\", line);\n    printf(\"%s\", line);\n}\n#include <cstdio>\nint main() {\n    char line[100];\n    gets(line);\n    puts(line);\n}*/\n\n//const fs = require('fs');\nimport fs from 'fs';\n//const file = fs.readFileSync('../studentlist', 'utf-8');\nconst file = Meteor.wrapAsync(fs.readFile)(Meteor.rootPath+'../studentlist', 'utf-8');\nconst json = file.split('\\n'); console.log(json.length);\nfor (let i = 0; i < json.length-1; i++) {\n\tconst value = JSON.parse(json[i].trim());\n\tconst student = {\n\t\tusername: value.user,\n\t\tfullname: value.name,\n\t\tpassword: value.pass,\n\t\tisAdmin: value.admin,\n\t\temail: value.email,\n\t\tyear: value.year\n\t};\n\tconsole.log(student);\n\t//Accounts.createUser(student);\n}"]},"hash":"34c71b8e60b382b4357957e607e1d328e2d0a345"}
