{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/imports/api/problem.js","imported":["Problems"],"specifiers":[{"kind":"named","imported":"Problems","local":"Problems"}]},{"source":"/imports/api/student.js","imported":["Students"],"specifiers":[{"kind":"named","imported":"Students","local":"Students"}]},{"source":"./list.js","imported":[],"specifiers":[]},{"source":"./detail.js","imported":[],"specifiers":[]},{"source":"./main.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/submission/main.js","filenameRelative":"imports/ui/submission/main.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/submission/main.js.map","sourceFileName":"imports/ui/submission/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"main"},"ignored":false,"code":"let Problems;\nmodule.watch(require(\"/imports/api/problem.js\"), {\n\tProblems(v) {\n\t\tProblems = v;\n\t}\n\n}, 0);\nlet Students;\nmodule.watch(require(\"/imports/api/student.js\"), {\n\tStudents(v) {\n\t\tStudents = v;\n\t}\n\n}, 1);\nmodule.watch(require(\"./list.js\"));\nmodule.watch(require(\"./detail.js\"));\nmodule.watch(require(\"./main.html\"));\nTemplate.submission_main.onCreated(function () {\n\tthis.currentSubmissionId = new ReactiveVar();\n});\nTemplate.submission_main.helpers({\n\tshareArgs() {\n\t\treturn {\n\t\t\tcurrentProblemId: this.currentProblemId,\n\t\t\tcurrentStudentId: this.currentStudentId,\n\t\t\tcurrentSubmissionId: Template.instance().currentSubmissionId,\n\n\t\t\tgetProblemTitle(problemId) {\n\t\t\t\treturn Meteor.getValue(Problems, problemId, 'title');\n\t\t\t},\n\n\t\t\tgetStudentUsername(studentId) {\n\t\t\t\treturn Meteor.getValue(Students, studentId, 'username');\n\t\t\t}\n\n\t\t};\n\t}\n\n});","map":{"version":3,"sources":["imports/ui/submission/main.js"],"names":["Problems","module","watch","require","v","Students","Template","submission_main","onCreated","currentSubmissionId","ReactiveVar","helpers","shareArgs","currentProblemId","currentStudentId","instance","getProblemTitle","problemId","Meteor","getValue","getStudentUsername","studentId"],"mappings":"AAAA,IAAIA,QAAJ;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAACH,UAASI,CAAT,EAAW;AAACJ,aAASI,CAAT;AAAW;;AAAxB,CAAhD,EAA0E,CAA1E;AAA6E,IAAIC,QAAJ;AAAaJ,OAAOC,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAACE,UAASD,CAAT,EAAW;AAACC,aAASD,CAAT;AAAW;;AAAxB,CAAhD,EAA0E,CAA1E;AAA6EH,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb;AAAmCF,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb;AAAqCF,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb;AAM5PG,SAASC,eAAT,CAAyBC,SAAzB,CAAmC,YAAW;AAC7C,MAAKC,mBAAL,GAA2B,IAAIC,WAAJ,EAA3B;AACA,CAFD;AAIAJ,SAASC,eAAT,CAAyBI,OAAzB,CAAiC;AAChCC,aAAY;AACX,SAAO;AACNC,qBAAkB,KAAKA,gBADjB;AAENC,qBAAkB,KAAKA,gBAFjB;AAGNL,wBAAqBH,SAASS,QAAT,GAAoBN,mBAHnC;;AAINO,mBAAgBC,SAAhB,EAA2B;AAC1B,WAAOC,OAAOC,QAAP,CAAgBnB,QAAhB,EAA0BiB,SAA1B,EAAqC,OAArC,CAAP;AACA,IANK;;AAONG,sBAAmBC,SAAnB,EAA8B;AAC7B,WAAOH,OAAOC,QAAP,CAAgBd,QAAhB,EAA0BgB,SAA1B,EAAqC,UAArC,CAAP;AACA;;AATK,GAAP;AAWA;;AAb+B,CAAjC","file":"imports/ui/submission/main.js.map","sourcesContent":["import { Problems } from '/imports/api/problem.js';\nimport { Students } from '/imports/api/student.js';\nimport './list.js';\nimport './detail.js';\nimport './main.html';\n\nTemplate.submission_main.onCreated(function() {\n\tthis.currentSubmissionId = new ReactiveVar();\n});\n\nTemplate.submission_main.helpers({\n\tshareArgs() {\n\t\treturn {\n\t\t\tcurrentProblemId: this.currentProblemId,\n\t\t\tcurrentStudentId: this.currentStudentId,\n\t\t\tcurrentSubmissionId: Template.instance().currentSubmissionId,\n\t\t\tgetProblemTitle(problemId) {\n\t\t\t\treturn Meteor.getValue(Problems, problemId, 'title');\n\t\t\t},\n\t\t\tgetStudentUsername(studentId) {\n\t\t\t\treturn Meteor.getValue(Students, studentId, 'username');\n\t\t\t}\n\t\t};\n\t}\n});"]},"hash":"e191c5c75276fec4c446606b9a4be335cc4dd4e9"}
