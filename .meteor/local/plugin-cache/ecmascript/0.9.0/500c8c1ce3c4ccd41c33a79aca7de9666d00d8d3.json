{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/imports/api/problem.js","imported":["ProblemTests"],"specifiers":[{"kind":"named","imported":"ProblemTests","local":"ProblemTests"}]},{"source":"./test.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/problem/test.js","filenameRelative":"imports/ui/problem/test.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/problem/test.js.map","sourceFileName":"imports/ui/problem/test.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"test"},"ignored":false,"code":"var ProblemTests = void 0;\nmodule.watch(require(\"/imports/api/problem.js\"), {\n\tProblemTests: function (v) {\n\t\tProblemTests = v;\n\t}\n}, 0);\nmodule.watch(require(\"./test.html\"));\nTemplate.problem_test.onCreated(function () {\n\tvar _this = this;\n\n\tthis.autorun(function () {\n\t\treturn _this.subscribe('ProblemTests.findAllByProblem', _this.data.currentProblemId.get());\n\t});\n\tthis.currentProblemTestId = new ReactiveVar();\n});\nTemplate.problem_test.onRendered(function () {\n\tthis.$('[class*=edit]').hide();\n});\nTemplate.problem_test.helpers({\n\tproblemTestList: function () {\n\t\treturn ProblemTests.find({\n\t\t\tproblemId: this.currentProblemId.get()\n\t\t}, {\n\t\t\tfields: {\n\t\t\t\t_id: 1,\n\t\t\t\tisPublic: 1\n\t\t\t}\n\t\t});\n\t},\n\tcurrentProblemTest: function () {\n\t\tvar problemTest = ProblemTests.findOne({\n\t\t\t_id: Template.instance().currentProblemTestId.get()\n\t\t});\n\n\t\tif (problemTest == undefined) {\n\t\t\tTemplate.instance().currentProblemTestId.set(null);\n\t\t}\n\n\t\treturn problemTest;\n\t}\n});\nTemplate.problem_test.events({\n\t'click .insert-btn': function () {\n\t\tMeteor.call('ProblemTests.insert', this.currentProblemId.get());\n\t},\n\t'click .remove-btn': function (event) {\n\t\tvar id = event.currentTarget.parentElement.dataset.id;\n\t\tMeteor.call('ProblemTests.remove', {\n\t\t\t_id: id\n\t\t});\n\t},\n\t'click .get-btn': function (event, instance) {\n\t\tvar id = event.currentTarget.dataset.id;\n\t\tinstance.currentProblemTestId.set(id);\n\t},\n\t'blur [class*=edit]': function (event, instance) {\n\t\tvar _Meteor$call;\n\n\t\tvar target = event.currentTarget;\n\t\tvar toggle = target.dataset.toggle;\n\t\tvar field = target.name;\n\t\tvar value = target.value;\n\t\tinstance.$(target).hide();\n\t\tinstance.$(toggle).show();\n\t\tMeteor.call('ProblemTests.update', instance.currentProblemTestId.get(), (_Meteor$call = {}, _Meteor$call[field] = value, _Meteor$call));\n\t},\n\t'click [class*=view]': function (event, instance) {\n\t\tif (!Meteor.isAdmin()) return;\n\t\tvar target = event.currentTarget;\n\t\tvar toggle = target.dataset.toggle;\n\t\tinstance.$(target).hide();\n\t\tinstance.$(toggle).show().focus();\n\t},\n\t'click [type=checkbox]': function (event, instance) {\n\t\tvar _Meteor$call2;\n\n\t\tvar target = event.currentTarget;\n\t\tvar field = target.name;\n\t\tvar value = target.checked;\n\t\tMeteor.call('ProblemTests.update', instance.currentProblemTestId.get(), (_Meteor$call2 = {}, _Meteor$call2[field] = value, _Meteor$call2));\n\t}\n});","map":{"version":3,"sources":["imports/ui/problem/test.js"],"names":["ProblemTests","module","watch","require","v","Template","problem_test","onCreated","autorun","subscribe","data","currentProblemId","get","currentProblemTestId","ReactiveVar","onRendered","$","hide","helpers","problemTestList","find","problemId","fields","_id","isPublic","currentProblemTest","problemTest","findOne","instance","undefined","set","events","Meteor","call","event","id","currentTarget","parentElement","dataset","target","toggle","field","name","value","show","isAdmin","focus","checked"],"mappings":"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","file":"imports/ui/problem/test.js.map","sourcesContent":["import { ProblemTests } from '/imports/api/problem.js';\r\nimport './test.html';\r\n\r\nTemplate.problem_test.onCreated(function() {\r\n\tthis.autorun(() => this.subscribe('ProblemTests.findAllByProblem', this.data.currentProblemId.get()));\r\n\tthis.currentProblemTestId = new ReactiveVar();\r\n});\r\n\r\nTemplate.problem_test.onRendered(function() {\r\n\tthis.$('[class*=edit]').hide();\r\n});\r\n\r\nTemplate.problem_test.helpers({\r\n\tproblemTestList() {\r\n\t\treturn ProblemTests.find({ problemId: this.currentProblemId.get() }, { fields: { _id: 1, isPublic: 1 }});\r\n\t},\r\n\tcurrentProblemTest() {\r\n\t\tconst problemTest = ProblemTests.findOne({ _id: Template.instance().currentProblemTestId.get() });\r\n\t\t\r\n\t\tif (problemTest == undefined) {\r\n\t\t\tTemplate.instance().currentProblemTestId.set(null);\r\n\t\t}\r\n\t\treturn problemTest;\r\n\t}\r\n});\r\n\r\nTemplate.problem_test.events({\r\n\t'click .insert-btn'() {\r\n\t\tMeteor.call('ProblemTests.insert', this.currentProblemId.get());\r\n\t},\r\n\t'click .remove-btn'(event) {\r\n\t\tconst id = event.currentTarget.parentElement.dataset.id;\r\n\t\tMeteor.call('ProblemTests.remove', { _id: id });\r\n\t},\r\n\t'click .get-btn'(event, instance) {\r\n\t\tconst id = event.currentTarget.dataset.id;\r\n\t\tinstance.currentProblemTestId.set(id);\r\n\t},\r\n\t'blur [class*=edit]'(event, instance) {\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst toggle = target.dataset.toggle;\r\n\t\tconst field = target.name;\r\n\t\tconst value = target.value;\r\n\r\n\t\tinstance.$(target).hide();\r\n\t\tinstance.$(toggle).show();\r\n\t\t\r\n\t\tMeteor.call('ProblemTests.update', instance.currentProblemTestId.get(), { [field]: value });\r\n\t},\r\n\t'click [class*=view]'(event, instance) {\r\n\t\tif (!Meteor.isAdmin()) return;\r\n\t\t\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst toggle = target.dataset.toggle;\r\n\r\n\t\tinstance.$(target).hide();\r\n\t\tinstance.$(toggle).show().focus();\r\n\t},\r\n\t'click [type=checkbox]'(event, instance) {\r\n\t\tconst target = event.currentTarget;\r\n\t\tconst field = target.name;\r\n\t\tconst value = target.checked;\r\n\r\n\t\tMeteor.call('ProblemTests.update', instance.currentProblemTestId.get(), { [field]: value });\r\n\t}\r\n});"]},"hash":"500c8c1ce3c4ccd41c33a79aca7de9666d00d8d3"}
