{"head":"","body":"","js":"\nTemplate.__checkName(\"problem_test\");\nTemplate[\"problem_test\"] = new Template(\"Template.problem_test\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"row\",\n    style: function() {\n      return Blaze.Unless(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\"currentProblemId\"), \"get\"));\n      }, function() {\n        return \"display:none\";\n      });\n    }\n  }, \"\\n\\t\\t\", HTML.DIV({\n    class: \"col-9\"\n  }, \"\\n\\t\\t\\t\", HTML.DIV({\n    class: \"card\",\n    style: function() {\n      return Blaze.Unless(function() {\n        return Spacebars.call(view.lookup(\"currentProblemTest\"));\n      }, function() {\n        return \"display:none\";\n      });\n    }\n  }, \"\\n  \\t\\t\\t\\t\", HTML.DIV({\n    class: \"card-body\"\n  }, \"\\n  \\t\\t\\t\\t\\t\", HTML.DIV({\n    class: \"form-group row\"\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\", HTML.DIV({\n    class: \"col-6\"\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n    \"data-toggle\": \".timeLimit-edit\",\n    class: \"timeLimit-view card-text\"\n  }, \"Time Limit: \", Blaze.View(\"lookup:currentProblemTest.timeLimit\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"timeLimit\"));\n  }), \" ms\"), \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({\n    \"data-toggle\": \".timeLimit-view\",\n    class: \"timeLimit-edit form-control\",\n    type: \"number\",\n    name: \"timeLimit\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"timeLimit\"));\n    }\n  }), \"\\n  \\t\\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\\t\", HTML.DIV({\n    class: \"col-6\"\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n    \"data-toggle\": \".memoryLimit-edit\",\n    class: \"memoryLimit-view card-text\"\n  }, \"Memory Limit: \", Blaze.View(\"lookup:currentProblemTest.memoryLimit\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"memoryLimit\"));\n  }), \" kb\"), \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({\n    \"data-toggle\": \".memoryLimit-view\",\n    class: \"memoryLimit-edit form-control\",\n    type: \"number\",\n    name: \"memoryLimit\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"memoryLimit\"));\n    }\n  }), \"\\n  \\t\\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\", HTML.DIV({\n    class: \"form-group row\"\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\", HTML.DIV({\n    class: \"col-6\"\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n    \"data-toggle\": \".score-edit\",\n    class: \"score-view card-text\"\n  }, \"Score: \", Blaze.View(\"lookup:currentProblemTest.score\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"score\"));\n  })), \"\\n  \\t\\t\\t\\t\\t\\t\\t\", HTML.INPUT({\n    \"data-toggle\": \".score-view\",\n    class: \"score-edit form-control\",\n    type: \"number\",\n    name: \"score\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"score\"));\n    }\n  }), \"\\n  \\t\\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));\n  }, function() {\n    return [ \"\\n\\t\\t\\t\\t\\t\\t\", HTML.LABEL({\n      class: \"col-6\"\n    }, \"\\n          \\t\\t\\t\\t\\t\", HTML.INPUT({\n      type: \"checkbox\",\n      name: \"isPublic\",\n      checked: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"isPublic\"));\n      }\n    }), \" Public\\n        \\t\\t\\t\\t\"), \"\\n        \\t\\t\\t\" ];\n  }), \"\\n  \\t\\t\\t\\t\\t\"), \"\\n  \\t\\t\\t\\t\\t\", HTML.DIV({\n    class: \"form-group row\"\n  }, \"\\n  \\t\\t\\t\\t\\t\\t\", HTML.DIV({\n    class: \"col-6\"\n  }, \"\\n    \\t\\t\\t\\t\\t\\t\", HTML.Raw('<h4 class=\"card-title\">Input</h4>'), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.P({\n    style: \"height:600px\",\n    \"data-toggle\": \".input-edit\",\n    class: \"input-view card-text\"\n  }, Blaze.View(\"lookup:currentProblemTest.input\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"input\"));\n  })), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.TEXTAREA({\n    style: \"height:600px\",\n    \"data-toggle\": \".input-view\",\n    class: \"input-edit form-control\",\n    name: \"input\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"input\"));\n    }\n  }), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\\t\", HTML.DIV({\n    class: \"col-6\"\n  }, \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.Raw('<h4 class=\"card-title\">Output</h4>'), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.P({\n    style: \"height:600px\",\n    \"data-toggle\": \".output-edit\",\n    class: \"output-view card-text\"\n  }, Blaze.View(\"lookup:currentProblemTest.output\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"output\"));\n  })), \"\\n\\t\\t\\t\\t\\t\\t\\t\", HTML.TEXTAREA({\n    style: \"height:600px\",\n    \"data-toggle\": \".output-view\",\n    class: \"output-edit form-control\",\n    name: \"output\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"currentProblemTest\"), \"output\"));\n    }\n  }), \"\\n\\t\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\\t\", HTML.DIV({\n    class: \"col-3\"\n  }, \"\\n\\t\\t\\t\", HTML.DIV({\n    class: \"card\"\n  }, \"\\n\\t\\t  \\t\\t\", HTML.DIV({\n    class: \"card-header\"\n  }, \"\\n\\t\\t\\t\\t\", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));\n  }, function() {\n    return [ \"\\n\\t\\t\\t\\t\\t\", HTML.BUTTON({\n      class: \"btn btn-sm btn-primary insert-btn fa fa-plus\"\n    }), \"\\n\\t\\t\\t\\t\" ];\n  }), \"\\n\\t\\t\\t\\t\\t\", HTML.Raw('<strong class=\"ml-1\">Test List</strong>'), \"\\n\\t\\t  \\t\\t\"), \"\\n\\t\\t\\t  \\t\", HTML.UL({\n    class: \"list-group\",\n    style: \"height:750px\"\n  }, \"\\n\\t\\t\\t\\t\", Blaze.Each(function() {\n    return {\n      _sequence: Spacebars.call(view.lookup(\"problemTestList\")),\n      _variable: \"problemTest\"\n    };\n  }, function() {\n    return [ \"\\n\\t\\t\\t  \\t\\t\", HTML.LI({\n      \"data-id\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"problemTest\"), \"_id\"));\n      },\n      class: function() {\n        return [ \"list-group-item get-btn \", Blaze.If(function() {\n          return Spacebars.dataMustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"currentProblemTest\"), \"_id\"), Spacebars.dot(view.lookup(\"problemTest\"), \"_id\"));\n        }, function() {\n          return \"active\";\n        }) ];\n      }\n    }, \"\\n\\t    \\t\\t\\t\", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"$\"), \"Meteor\", \"isAdmin\"));\n    }, function() {\n      return [ \"\\n\\t    \\t\\t\\t\\t\", HTML.BUTTON({\n        \"data-id\": function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"problemTest\"), \"_id\"));\n        },\n        class: \"btn btn-sm btn-danger remove-btn fa fa-remove\"\n      }), \"\\n\\t    \\t\\t\\t\" ];\n    }), \"\\n\\t\\t    \\t\\t\\t\", HTML.SPAN({\n      class: \"ml-1\"\n    }, \"Test #\", Blaze.View(\"lookup:@index\", function() {\n      return Spacebars.mustache(view.lookup(\"@index\"));\n    })), \"\\n\\t\\t    \\t\\t\", Blaze.Unless(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"problemTest\"), \"isPublic\"));\n    }, function() {\n      return [ \"\\n\\t\\t    \\t\\t\\t\", HTML.SPAN({\n        class: \"ml-1 fa fa-ban\"\n      }), \"\\n\\t\\t    \\t\\t\" ];\n    }), \"\\n\\t\\t    \\t\\t\"), \"\\n\\t\\t  \\t\\t\" ];\n  }), \"\\n\\t\\t  \\t\\t\"), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\");\n}));\n","bodyAttrs":{}}