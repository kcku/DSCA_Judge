{"version":3,"sources":["meteor://ðŸ’»app/packages/lbee:moment-helpers/common.js","meteor://ðŸ’»app/packages/lbee:moment-helpers/client.js"],"names":["moment","require","MomentHelperInit","isClient","currentLocale","ReactiveVar","set","locale","now","Meteor","setInterval","_msg","dateNotValidReturnNow","dateNotValidReturnNull","options","returnNowIfDateNotGiven","debug","formatTokens","configure","_","extend","setLocale","log","logged","console","_getToken","token","aMoment","check","Match","Optional","String","tokenLibrary","defaults","isFunction","call","_getMoment","obj","result","date","isMoment","isDate","isString","length","indexOf","substring","Date","isValid","unix","mo","MomentHelper","args","get","keywords","pop","dateA","hash","d","a","moDate","moFormat","formatToken","f","format","Template","registerHelper","moDiff","kw","dateB","b","units","returnFloat","diff","moFrom","withoutSuffix","from","moFromNow","fromNow","moCalendar","referenceDate","r","moReferenceDate","calendar"],"mappings":"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","file":"/packages/lbee_moment-helpers.js","sourcesContent":["const moment = require('moment');\n\nclass MomentHelperInit {\n  // let self = this;\n\n  //\n  constructor ( isClient ) {\n\n    if ( isClient ) {\n      // create a new reactiveVar that holds the moment helper context of locale\n      this.currentLocale = new ReactiveVar();\n\n      // when creating the moment helper context, set the locale same as moment\n      this.currentLocale.set( moment.locale() );\n\n      // reactive now\n      this.now = new ReactiveVar( moment() );\n      var now = this.now;\n\n      Meteor.setInterval( function () {\n        now.set( moment() );\n      }, 1000 ); // every second\n    }\n\n    // logging messages\n    this._msg = {\n      dateNotValidReturnNow:\n        'valid date not provided, sending new moment instead',\n      dateNotValidReturnNull:\n        'valid date not provided, sending null'\n    };\n\n    // initate the default options\n    this.options = {\n      // if a helper is called and no date given, create one as now\n      returnNowIfDateNotGiven: false,\n      // extra console logging\n      debug: false,\n      // initial library of format tokens\n      formatTokens: {\n        'default': 'LLL'\n        // defaults to locale date format: Month name, day of month, year, time\n      }\n    };\n\n  }\n\n\n  // configuration function, merges the defaults with the options provided\n  configure ( options ) {\n    _.extend( this.options, options );\n  }\n\n  // expose a utility to set the locale, updating moment & reactive locale\n  setLocale ( locale ) {\n    moment.locale( locale );\n    this.currentLocale.set( moment.locale() );// how does 'this' work?\n  }\n\n  // logging function\n  log ( log ) {\n\n    // delete the currently stored log\n    // this was enabled to assit with logging\n    delete this.logged;\n\n    // if debugging is enabled, log it!\n    if ( this.options.debug ) {\n      this.logged = log;\n      console.log( log );\n    }\n  }\n\n  // used for moFormat, helps to get a format token eg. 'YYYY-MM-DD'\n  _getToken ( token, aMoment ) {\n    check( token, Match.Optional( String, null ) );\n    let tokenLibrary = _.defaults( this.options.formatTokens, {\n      // these tokens will always be available (unless overridden)\n      'dayOfWeek': 'dddd',\n      'dayOfMonth': 'D',\n      'month': 'M',\n      'year': 'YYYY',\n      'time': 'h:mm a'\n    });\n\n    // if no token provided, use the default from the token library\n    if ( !token ) {\n      token = 'default';\n    }\n\n    // see if the token is a reference to the token library, otherwise keep\n    token = tokenLibrary[token] || token;\n\n    // check if token is a function & process\n    if ( _.isFunction( token ) ) {\n      token = token.call( aMoment );\n    }\n\n    // return the token\n    return token;\n  }\n\n  _getMoment ( obj ) {\n    \n    var result;\n    var date;\n\n    // goal is to get a moment object from what is provided\n    if ( moment.isMoment( obj ) ) {\n      // if a moment is provided, return that moment, no questions asked\n        result = obj;\n    } else if ( _.isDate( obj ) ) {\n      // if a date is provided, convert to moment and return\n      result = moment( obj );\n    } else if ( _.isString( obj ) && obj.length > 1 ) {\n      // attempt to get a date from the string\n\n      // if '|' is found, separate and use the RHS as the input format token\n      if ( obj.indexOf( '|' ) !== -1 ) {\n        date = moment(\n          obj.substring( 0, obj.indexOf( '|' ) ), // input string LHS of '|'\n          obj.substring( obj.indexOf( '|' ) + 1 ) // input format, RHS after '|'\n        );\n      } else {\n        date = moment( new Date( obj ) );\n      }\n      if ( date.isValid() ) {\n        result = date;\n      }\n    }\n\n    // could not get a moment object, work out what to return if anything\n    if ( !result ) {\n      // lets support epoch as inbound date type\n      if(typeof obj === 'number'){\n        return moment.unix(obj);\n      }\n\n      if ( this.options.returnNowIfDateNotGiven ) {\n        this.log( this._msg.dateNotValidReturnNow );\n        return moment();\n      } else {\n        this.log( this._msg.dateNotValidReturnNull );\n      }\n    }\n\n    return result;\n  }\n\n}\n\nmo = new MomentHelperInit( Meteor.isClient );\n","class MomentHelper {\n\n  constructor(...args) {\n    this.args = args;\n\n    // Calling this reactive property ensure the helper is updated\n    this.locale = mo.currentLocale.get();\n\n    // eg. {{moFormat date=myDate}} / {{moFormat myDate}} will do the same thing\n    this.keywords = args.pop();\n    this.dateA = args[0] || this.keywords.hash.d || this.keywords.hash.a;\n\n    // processes what was given to ensure we end up with a moment object\n    this.moDate = mo._getMoment(this.dateA);\n  }\n\n  moFormat() {\n    if (this.moDate) {\n      this.formatToken = this.args[1] || this.keywords.hash.f;\n\n      return this.moDate.format(\n        mo._getToken(this.formatToken, this.moDate)\n      );\n    }\n    // fail silently if the date is not worked out to be a moment\n    return null;\n  }\n\n}\n\nTemplate.registerHelper('moFormat', (...args) =>\n  new MomentHelper(...args).moFormat()\n);\n\nTemplate.registerHelper('moDiff', function moDiff(...args) {\n  // Calling this reactive property ensure the helper is updated\n  const locale = mo.currentLocale.get(); // eslint-disable-line\n  let result;\n\n  // enables the arguments to be provided as args or vars\n  const kw = args.pop();\n  const dateA = mo._getMoment(args[0] || kw.hash.a);\n  const dateB = mo._getMoment(args[1] || kw.hash.b);\n  const units = args[2] || kw.hash.units || 'seconds';\n  let returnFloat = args[3] || kw.hash.returnFloat;\n\n  // if the returnFloat is truthy convert it to true, or falsy = false\n  if (returnFloat) {\n    returnFloat = true;\n  } else {\n    returnFloat = false;\n  }\n\n  // if the two dates are valid moment objects, send the result\n  if (dateA && dateB) {\n    result = dateA.diff(dateB, units, returnFloat);\n  }\n\n  // fail silently if the dates were not processed to a moment\n  return result;\n});\n\nTemplate.registerHelper('moFrom', function moFrom(...args) {\n  // Calling this reactive property ensure the helper is updated\n  const locale = mo.currentLocale.get(); // eslint-disable-line\n  let result;\n\n  const kw = args.pop();\n  const dateA = mo._getMoment(args[0] || kw.hash.a);\n  const dateB = mo._getMoment(args[1] || kw.hash.b);\n  let withoutSuffix = args[2] || kw.hash.withoutSuffix;\n\n  // if the withoutSuffix is truthy convert it to true, or falsy = false\n  if (withoutSuffix) {\n    withoutSuffix = true;\n  } else {\n    withoutSuffix = false;\n  }\n\n  // if the two dates are valid moment objects, send the result\n  if (dateA && dateB) {\n    result = dateA.from(dateB, withoutSuffix);\n  }\n\n  // fail silently if the dates were not processed to a moment\n  return result;\n});\n\nTemplate.registerHelper('moFromNow', function moFromNow(...args) {\n  // Calling this reactive property ensure the helper is updated\n  const locale = mo.currentLocale.get(); // eslint-disable-line\n\n  // enables the arguments to be provided as args or vars\n  const kw = args.pop();\n  const date = args[0] || kw.hash.d;\n  let withoutSuffix = args[1] || kw.hash.withoutSuffix;\n\n  // if the withoutSuffix is truthy convert it to true, or falsy = false\n  if (withoutSuffix) {\n    withoutSuffix = true;\n  } else {\n    withoutSuffix = false;\n  }\n\n  // work with what is given to get a moment object\n  const moDate = mo._getMoment(date);\n\n  // if we did end up with a valid object above, send the result\n  if (moDate) {\n    return moDate.fromNow(withoutSuffix);\n  }\n\n  // fail silently if the dates were not processed to a moment\n  return null;\n});\n\nTemplate.registerHelper('moCalendar', function moCalendar(...args) {\n  // Calling this reactive property ensure the helper is updated\n  const locale = mo.currentLocale.get(); // eslint-disable-line\n\n  // enables the arguments to be provided as args or vars\n  // eg. {{moFormat date=myDate}} or {{moFormat myDate}} will do the same thing\n  const kw = args.pop();\n  const date = args[0] || kw.hash.d;\n  const referenceDate = args[1] || kw.hash.r;\n  let moReferenceDate;\n\n  // processes what was given to ensure we end up with a moment object\n  const moDate = mo._getMoment(date);\n\n  // never let reference date default to now if not provided\n  if (referenceDate) {\n    moReferenceDate = mo._getMoment(referenceDate);\n  }\n\n  // fail silently if the date is not worked out to be a moment\n  if (moDate) {\n    if (moReferenceDate) {\n      return moDate.calendar(moReferenceDate);\n    }\n    return moDate.calendar();\n  }\n\n  return null;\n});\n\nTemplate.registerHelper('moNow', () => mo.now.get());\n"]}